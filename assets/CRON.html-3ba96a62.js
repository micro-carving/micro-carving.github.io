import{_ as t,W as p,X as r,Y as e,Z as o,$ as c,a1 as n,C as a}from"./framework-158a71b3.js";const h={},s=n('<h2 id="cron表达式详解" tabindex="-1"><a class="header-anchor" href="#cron表达式详解" aria-hidden="true">#</a> Cron表达式详解</h2><p>Cron 表达式是一个字符串，字符串以 5 或 6 个空格隔开，分为 6 或 7 个域，每一个域代表一个含义，Cron 有如下两种语法格式：</p><p>（1）<code>Seconds Minutes Hours DayofMonth Month DayofWeek Year</code></p><p>（2）<code>Seconds Minutes Hours DayofMonth Month DayofWeek</code></p><h3 id="_1-结构" tabindex="-1"><a class="header-anchor" href="#_1-结构" aria-hidden="true">#</a> 1.结构</h3><p>corn 从左到右（用空格隔开）：<code>秒 分 小时 月份中的日期 月份 星期中的日期 年份</code></p><h3 id="_2-各字段的含义" tabindex="-1"><a class="header-anchor" href="#_2-各字段的含义" aria-hidden="true">#</a> 2.各字段的含义</h3><table><thead><tr><th>字段</th><th>允许值</th><th>允许的特殊字符</th></tr></thead><tbody><tr><td>秒（Seconds）</td><td>0~59的整数</td><td><code>, - * /</code> 四个字符</td></tr><tr><td>分（Minutes）</td><td>0~59的整数</td><td><code>, - * /</code> 四个字符</td></tr><tr><td>小时（Hours）</td><td>0~23的整数</td><td><code>, - * /</code> 四个字符</td></tr><tr><td>日期（DayofMonth）</td><td>1~31的整数（但是你需要考虑你月的天数）</td><td><code>, - * ? / L W C</code> 八个字符</td></tr><tr><td>月份（Month）</td><td>1~12的整数或者 JAN-DEC</td><td><code>, - * /</code> 四个字符</td></tr><tr><td>星期（DayofWeek）</td><td>1~7的整数或者 SUN-SAT （1=SUN）</td><td><code>, - * ? / L C #</code> 八个字符</td></tr><tr><td>年(可选，留空)（Year）</td><td>1970~2099</td><td><code>, - * /</code> 四个字符</td></tr></tbody></table><p><strong>注意事项</strong>：</p><p>每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是：</p><p>（1）<code>*</code>：表示匹配该域的任意值。假如在 <code>Minutes</code> 域使用 *, 即表示每分钟都会触发事件。</p><p>（2）<code>?</code>：只能用在 <code>DayofMonth</code> 和 <code>DayofWeek</code> 两个域。它也匹配域的任意值，但实际不会。因为 <code>DayofMonth</code> 和 <code>DayofWeek</code> 会相互影响。例如想在每月的 20 日触发调度，不管 20 日到底是星期几，则只能使用如下写法： <code>13 13 15 20 * ?</code>, 其中最后一位只能用 <code>?</code>，而不能使用 <code>*</code>，如果使用 <code>*</code> 表示不管星期几都会触发，实际上并不是这样。</p><p>（3）<code>-</code>：表示范围。例如在 Minutes 域使用 <code>5-20</code>，表示从 5 分到 20 分钟每分钟触发一次</p><p>（4）<code>/</code>：表示起始时间开始触发，然后每隔固定时间触发一次。例如在 Minutes 域使用 <code>5/20</code>，则意味着 5 分钟触发一次，而 25，45 等分别触发一次.</p><p>（5）<code>,</code>：表示列出枚举值。例如：在 <code>Minutes</code> 域使用 <code>5,20</code>，则意味着在 5 和 20 分每分钟触发一次。</p><p>（6）<code>L</code>：表示最后，只能出现在 <code>DayofWeek</code> 和 <code>DayofMonth</code> 域。如果在 <code>DayofWeek</code> 域使用 <code>5L</code>，意味着在最后的一个星期四触发。</p><p>（7）<code>W</code>：表示有效工作日(周一到周五)，只能出现在 <code>DayofMonth</code> 域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 <code>DayofMonth</code> 使用 <code>5W</code>，如果 5 日是星期六，则将在最近的工作日：星期五，即 4 日触发。如果 5 日是星期天，则在 6 日(周一)触发；如果 5 日在星期一到星期五中的一天，则就在 5 日触发。另外一点，W 的最近寻找不会跨过月份 。</p><p>（8）<code>LW</code>：这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。</p><p>（9）<code>#</code>：用于确定每个月第几个星期几，只能出现在 <code>DayofWeek</code> 域。例如在 <code>4#2</code>，表示某月的第二个星期三。</p><h3 id="_3-常用表达式例子" tabindex="-1"><a class="header-anchor" href="#_3-常用表达式例子" aria-hidden="true">#</a> 3.常用表达式例子</h3><p>（0）<code>0/20 * * * * ? </code> 表示每 20 秒触发</p><p>（1）<code>0 0 2 1 * ? </code> 表示在每月的 1 日的凌晨 2 点触发</p><p>（2）<code>0 15 10 ? * MON-FRI </code> 表示周一到周五每天上午 10:15 触发</p><p>（3）<code>0 15 10 ? 6L 2002-2006 </code> 表示 2002-2006 年的每个月的最后一个星期五上午 10:15 触发</p><p>（4）<code>0 0 10,14,16 * * ? </code> 每天上午 10 点，下午 2 点，4 点触发</p><p>（5）<code>0 0/30 9-17 * * ? </code> 朝九晚五工作时间内每半小时触发</p><p>（6）<code>0 0 12 ? * WED </code> 表示每个星期三中午 12 点触发</p><p>（7）<code>0 0 12 * * ? </code> 每天中午 12 点触发</p><p>（8）<code>0 15 10 ? * * </code> 每天上午 10:15 触发</p><p>（9）<code>0 15 10 * * ? </code> 每天上午 10:15 触发</p><p>（10）<code>0 15 10 * * ? * </code> 每天上午 10:15 触发</p><p>（11）<code>0 15 10 * * ? 2005 </code> 2005 年的每天上午 10:15 触发</p><p>（12）<code>0 * 14 * * ? </code> 在每天下午 2 点到下午 2:59 期间的每 1 分钟触发</p><p>（13）<code>0 0/5 14 * * ? </code> 在每天下午 2 点到下午 2:55 期间的每 5 分钟触发</p><p>（14）<code>0 0/5 14,18 * * ? </code> 在每天下午 2 点到 2:55 期间和下午 6 点到 6:55 期间的每 5 分钟触发</p><p>（15）<code>0 0-5 14 * * ? </code> 在每天下午 2 点到下午 2:05 期间的每 1 分钟触发</p><p>（16）<code>0 10,44 14 ? 3 WED </code> 每年三月的星期三的下午 2:10 和 2:44 触发</p><p>（17）<code>0 15 10 ? * MON-FRI </code> 周一至周五的上午 10:15 触发</p><p>（18）<code>0 15 10 15 * ? </code> 每月 15 日上午 10:15 触发</p><p>（19）<code>0 15 10 L * ? </code> 每月最后一日的上午 10:15 触发</p><p>（20）<code>0 15 10 ? * 6L </code> 每月的最后一个星期五上午 10:15 触发</p><p>（21）<code>0 15 10 ? * 6L 2002-2005 </code> 2002 年至 2005 年的每月的最后一个星期五上午 10:15 触发</p><p>（22）<code>0 15 10 ? * 6#3 </code> 每月的第三个星期五上午 10:15 触发</p><p><strong>注意</strong>：</p><p>（1）有些子表达式能包含一些范围或列表</p><p>例如：子表达式（天（星期））可以为 “<code>MON-FRI</code>”，“<code>MON,WED,FRI</code>”，“<code>MON-WED,SAT</code>”</p><p>（2）“<code>*</code>”字符代表所有可能的值</p><p>因此，“<code>*</code>” 在子表达式（月）里表示每个月的含义， “<code>*</code>” 在子表达式（天（星期））表示星期的每一天</p><p>（3）“<code>/</code>”字符用来指定数值的增量</p><p>例如：在子表达式（分钟）里的 “<code>0/15</code>” 表示从第 0 分钟开始，每 15 分钟</p><p>在子表达式（分钟）里的 “<code>3/20</code>” 表示从第 3 分钟开始，每 20 分钟（它和 “<code>3，23，43</code>”）的含义一样</p><p>（4）“<code>?</code>” 字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值</p><p>当 2 个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为 “<code>?</code>”</p><p>（5）“<code>L</code>” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词 “last” 的缩写</p><p>但是它在两个子表达式里的含义是不同的。</p><p>在天（月）子表达式中，“<code>L</code>” 表示一个月的最后一天。</p><p>在天（星期）自表达式中，“<code>L</code>” 表示一个星期的最后一天，也就是 SAT。</p><p>如果在 “<code>L</code>” 前有具体的内容，它就具有其他的含义了</p><p>例如：“<code>6L</code>” 表示这个月的倒数第 ６ 天，“<code>FRIL</code>”表示这个月的最一个星期五</p><p>注意：在使用 “<code>L</code>” 参数时，不要指定列表或范围，因为这会导致问题</p><h3 id="_4-cron在线生成工具" tabindex="-1"><a class="header-anchor" href="#_4-cron在线生成工具" aria-hidden="true">#</a> 4.Cron在线生成工具</h3>',61),i={href:"https://www.bejson.com/othertools/cron/",target:"_blank",rel:"noopener noreferrer"},l={href:"http://cron.ciding.cc/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://cron.qqe2.com/",target:"_blank",rel:"noopener noreferrer"},f=e("h3",{id:"_5-参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-参考","aria-hidden":"true"},"#"),o(" 5.参考")],-1),u={href:"https://www.bejson.com/othertools/cronvalidate/",target:"_blank",rel:"noopener noreferrer"};function M(D,b){const d=a("ExternalLinkIcon");return p(),r("div",null,[s,e("ul",null,[e("li",null,[e("a",i,[o("https://www.bejson.com/othertools/cron/"),c(d)])]),e("li",null,[e("a",l,[o("http://cron.ciding.cc/"),c(d)])]),e("li",null,[e("a",_,[o("https://cron.qqe2.com/"),c(d)])])]),f,e("p",null,[e("a",u,[o("https://www.bejson.com/othertools/cronvalidate/"),c(d)])])])}const L=t(h,[["render",M],["__file","CRON.html.vue"]]);export{L as default};
