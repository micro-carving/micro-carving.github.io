const n=JSON.parse(`{"key":"v-4eed8d49","path":"/guide/develop/front-end/component-communication.html","title":"父子组件通信","lang":"zh-CN","frontmatter":{"title":"父子组件通信","icon":"leaf","order":1,"sticky":true,"start":true,"date":"2022-06-27T00:00:00.000Z","category":["front-end"],"tag":["编程","Vue 框架"],"description":"父子组件通信 父组件向子组件传值 可以使用 props 来向子组件传递动态 boolean 值。在父组件中定义一个 boolean 类型的变量，然后将它作为属性传递给子组件。父组件： &lt;template&gt; &lt;div&gt; &lt;child-component :showChild=\\"showChild\\"&gt;&lt;/child-component&gt; &lt;button @click=\\"toggleChild\\"&gt;Toggle Child Component&lt;/button&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent }, data () { return { showChild: false } }, methods: { toggleChild () { this.showChild = !this.showChild } } } &lt;/script&gt;","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/develop/front-end/component-communication.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"父子组件通信"}],["meta",{"property":"og:description","content":"父子组件通信 父组件向子组件传值 可以使用 props 来向子组件传递动态 boolean 值。在父组件中定义一个 boolean 类型的变量，然后将它作为属性传递给子组件。父组件： &lt;template&gt; &lt;div&gt; &lt;child-component :showChild=\\"showChild\\"&gt;&lt;/child-component&gt; &lt;button @click=\\"toggleChild\\"&gt;Toggle Child Component&lt;/button&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; import ChildComponent from './ChildComponent.vue' export default { components: { ChildComponent }, data () { return { showChild: false } }, methods: { toggleChild () { this.showChild = !this.showChild } } } &lt;/script&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T12:34:04.000Z"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"Vue 框架"}],["meta",{"property":"article:published_time","content":"2022-06-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-05T12:34:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"父子组件通信\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-05T12:34:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"父子组件通信","slug":"父子组件通信","link":"#父子组件通信","children":[{"level":3,"title":"父组件向子组件传值","slug":"父组件向子组件传值","link":"#父组件向子组件传值","children":[]},{"level":3,"title":"子组件向父组件传值","slug":"子组件向父组件传值","link":"#子组件向父组件传值","children":[]}]}],"git":{"createdTime":1688560444000,"updatedTime":1688560444000,"contributors":[{"name":"olinonee","email":"olinone666@gmail.com","commits":1}]},"readingTime":{"minutes":1.98,"words":595},"filePathRelative":"guide/develop/front-end/component-communication.md","localizedDate":"2022年6月27日","excerpt":"<h2> 父子组件通信</h2>\\n<h3> 父组件向子组件传值</h3>\\n<p>可以使用 <code>props</code> 来向子组件传递动态 <code>boolean</code> 值。<br>在父组件中定义一个 <code>boolean</code> 类型的变量，然后将它作为属性传递给子组件。<br>父组件：</p>\\n<div class=\\"language-vue line-numbers-mode\\" data-ext=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>child-component</span> <span class=\\"token attr-name\\">:showChild</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>showChild<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>child-component</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">@click</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>toggleChild<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>Toggle Child Component<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n  <span class=\\"token keyword\\">import</span> ChildComponent <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./ChildComponent.vue'</span>\\n\\n  <span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">components</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      ChildComponent\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">data</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">showChild</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">methods</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">toggleChild</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>showChild <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">!</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>showChild\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
