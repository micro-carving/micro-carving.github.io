const e=JSON.parse('{"key":"v-51752200","path":"/guide/develop/deploy-operation/docker-use-guide.html","title":"Docker 入门教程","lang":"zh-CN","frontmatter":{"title":"Docker 入门教程","icon":"shell","order":-1,"sticky":true,"star":true,"date":"2022-01-03T00:00:00.000Z","category":["deploy-operation"],"tag":["使用指南","docker"],"description":"一、docker 简介 1.什么是 docker Docker 是一个开源的应用容器引擎，由于 docker 影响巨大，今天也用 \\"Docker\\" 指代容器化技术。 2.docker 的优势 一键部署，开箱即用 容器使用基于 image 镜像的部署模式，image 中包含了运行应用程序所需的一切：代码、运行时、系统工具、系统库和配置文件。 无论是单个程序还是多个程序组成的复杂服务，或者分布式系统，都可以使用 docker run 或 docker compose up 命令一键部署，省去了大量搭建、配置环境、调试和排查错误的时间。","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/develop/deploy-operation/docker-use-guide.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"Docker 入门教程"}],["meta",{"property":"og:description","content":"一、docker 简介 1.什么是 docker Docker 是一个开源的应用容器引擎，由于 docker 影响巨大，今天也用 \\"Docker\\" 指代容器化技术。 2.docker 的优势 一键部署，开箱即用 容器使用基于 image 镜像的部署模式，image 中包含了运行应用程序所需的一切：代码、运行时、系统工具、系统库和配置文件。 无论是单个程序还是多个程序组成的复杂服务，或者分布式系统，都可以使用 docker run 或 docker compose up 命令一键部署，省去了大量搭建、配置环境、调试和排查错误的时间。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://olinonee.com/./"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-07T02:16:14.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Docker 入门教程"}],["meta",{"property":"article:tag","content":"使用指南"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:published_time","content":"2022-01-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-07T02:16:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker 入门教程\\",\\"image\\":[\\"https://olinonee.com/./\\"],\\"datePublished\\":\\"2022-01-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-07T02:16:14.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、docker 简介","slug":"一、docker-简介","link":"#一、docker-简介","children":[{"level":3,"title":"1.什么是 docker","slug":"_1-什么是-docker","link":"#_1-什么是-docker","children":[]},{"level":3,"title":"2.docker 的优势","slug":"_2-docker-的优势","link":"#_2-docker-的优势","children":[]},{"level":3,"title":"3.容器与虚拟机","slug":"_3-容器与虚拟机","link":"#_3-容器与虚拟机","children":[]},{"level":3,"title":"4.参考文档","slug":"_4-参考文档","link":"#_4-参考文档","children":[]}]},{"level":2,"title":"二、安装 docker","slug":"二、安装-docker","link":"#二、安装-docker","children":[{"level":3,"title":"1.Windows 下安装 Docker","slug":"_1-windows-下安装-docker","link":"#_1-windows-下安装-docker","children":[]},{"level":3,"title":"2.Linux 下安装 Docker","slug":"_2-linux-下安装-docker","link":"#_2-linux-下安装-docker","children":[]}]},{"level":2,"title":"三、docker run 开箱即用","slug":"三、docker-run-开箱即用","link":"#三、docker-run-开箱即用","children":[{"level":3,"title":"1.docker 架构","slug":"_1-docker-架构","link":"#_1-docker-架构","children":[]},{"level":3,"title":"2.docker pull 拉取镜像","slug":"_2-docker-pull-拉取镜像","link":"#_2-docker-pull-拉取镜像","children":[]},{"level":3,"title":"3.docker run 命令","slug":"_3-docker-run-命令","link":"#_3-docker-run-命令","children":[]},{"level":3,"title":"3.常用命令","slug":"_3-常用命令","link":"#_3-常用命令","children":[]},{"level":3,"title":"4.参考文档","slug":"_4-参考文档-1","link":"#_4-参考文档-1","children":[]}]},{"level":2,"title":"四、docker 网络","slug":"四、docker-网络","link":"#四、docker-网络","children":[{"level":3,"title":"1.默认网络","slug":"_1-默认网络","link":"#_1-默认网络","children":[]},{"level":3,"title":"2.用户自定义网络","slug":"_2-用户自定义网络","link":"#_2-用户自定义网络","children":[]},{"level":3,"title":"3.主机名解析","slug":"_3-主机名解析","link":"#_3-主机名解析","children":[]},{"level":3,"title":"4.参考文档","slug":"_4-参考文档-2","link":"#_4-参考文档-2","children":[]}]},{"level":2,"title":"五、docker 存储","slug":"五、docker-存储","link":"#五、docker-存储","children":[{"level":3,"title":"1.存储方式","slug":"_1-存储方式","link":"#_1-存储方式","children":[]},{"level":3,"title":"2.参考文档","slug":"_2-参考文档","link":"#_2-参考文档","children":[]}]},{"level":2,"title":"六、部署自己的应用","slug":"六、部署自己的应用","link":"#六、部署自己的应用","children":[{"level":3,"title":"1.部署 mysql 并初始化数据库","slug":"_1-部署-mysql-并初始化数据库","link":"#_1-部署-mysql-并初始化数据库","children":[]},{"level":3,"title":"2.部署应用","slug":"_2-部署应用","link":"#_2-部署应用","children":[]},{"level":3,"title":"3.解决乱码问题","slug":"_3-解决乱码问题","link":"#_3-解决乱码问题","children":[]},{"level":3,"title":"4.参考文档","slug":"_4-参考文档-3","link":"#_4-参考文档-3","children":[]}]},{"level":2,"title":"七、docker compose 容器编排","slug":"七、docker-compose-容器编排","link":"#七、docker-compose-容器编排","children":[{"level":3,"title":"1.一键部署 wordpress","slug":"_1-一键部署-wordpress","link":"#_1-一键部署-wordpress","children":[]},{"level":3,"title":"2.compose 文件结构","slug":"_2-compose-文件结构","link":"#_2-compose-文件结构","children":[]},{"level":3,"title":"3.yaml 文件语法","slug":"_3-yaml-文件语法","link":"#_3-yaml-文件语法","children":[]},{"level":3,"title":"4.编排自己的项目","slug":"_4-编排自己的项目","link":"#_4-编排自己的项目","children":[]},{"level":3,"title":"5.容器启动顺序 depends_on","slug":"_5-容器启动顺序-depends-on","link":"#_5-容器启动顺序-depends-on","children":[]},{"level":3,"title":"6.参考文档","slug":"_6-参考文档","link":"#_6-参考文档","children":[]}]},{"level":2,"title":"八、dockerfile 制作镜像","slug":"八、dockerfile-制作镜像","link":"#八、dockerfile-制作镜像","children":[{"level":3,"title":"1.dockerfile","slug":"_1-dockerfile","link":"#_1-dockerfile","children":[]},{"level":3,"title":"2.制作自己的镜像","slug":"_2-制作自己的镜像","link":"#_2-制作自己的镜像","children":[]},{"level":3,"title":"3.image 镜像与 layer 层","slug":"_3-image-镜像与-layer-层","link":"#_3-image-镜像与-layer-层","children":[]},{"level":3,"title":"4.多阶段构建","slug":"_4-多阶段构建","link":"#_4-多阶段构建","children":[]},{"level":3,"title":"5.参考文档","slug":"_5-参考文档","link":"#_5-参考文档","children":[]}]},{"level":2,"title":"九、私有仓库","slug":"九、私有仓库","link":"#九、私有仓库","children":[{"level":3,"title":"1.docker registry","slug":"_1-docker-registry","link":"#_1-docker-registry","children":[]},{"level":3,"title":"2.harbor","slug":"_2-harbor","link":"#_2-harbor","children":[]},{"level":3,"title":"3.保存与加载镜像","slug":"_3-保存与加载镜像","link":"#_3-保存与加载镜像","children":[]}]},{"level":2,"title":"十、windows 安装 docker","slug":"十、windows-安装-docker","link":"#十、windows-安装-docker","children":[{"level":3,"title":"1.Windows 下安装 Docker Desktop","slug":"_1-windows-下安装-docker-desktop","link":"#_1-windows-下安装-docker-desktop","children":[]},{"level":3,"title":"2.注意事项","slug":"_2-注意事项","link":"#_2-注意事项","children":[]},{"level":3,"title":"3.参考文档","slug":"_3-参考文档","link":"#_3-参考文档","children":[]}]},{"level":2,"title":"十一、安装 portainer","slug":"十一、安装-portainer","link":"#十一、安装-portainer","children":[{"level":3,"title":"1.portainer","slug":"_1-portainer","link":"#_1-portainer","children":[]},{"level":3,"title":"2.使用 docker 部署 portainer","slug":"_2-使用-docker-部署-portainer","link":"#_2-使用-docker-部署-portainer","children":[]},{"level":3,"title":"3.重启策略","slug":"_3-重启策略","link":"#_3-重启策略","children":[]}]},{"level":2,"title":"十二、参考","slug":"十二、参考","link":"#十二、参考","children":[]}],"git":{"createdTime":1691344283000,"updatedTime":1691374574000,"contributors":[{"name":"olinonee","email":"olinone666@gmail.com","commits":2}]},"readingTime":{"minutes":26.59,"words":7977},"filePathRelative":"guide/develop/deploy-operation/docker-use-guide.md","localizedDate":"2022年1月3日","excerpt":"<h2> 一、docker 简介</h2>\\n<h3> 1.什么是 docker</h3>\\n<p>Docker 是一个开源的应用容器引擎，由于 docker 影响巨大，今天也用 \\"Docker\\" 指代容器化技术。</p>\\n<h3> 2.docker 的优势</h3>\\n<h4> 一键部署，开箱即用</h4>\\n<p>容器使用基于 image 镜像的部署模式，image 中包含了运行应用程序所需的一切：代码、运行时、系统工具、系统库和配置文件。</p>\\n<p>无论是单个程序还是多个程序组成的复杂服务，或者分布式系统，都可以使用 <code>docker run</code> 或 <code>docker compose up</code> 命令一键部署，省去了大量搭建、配置环境、调试和排查错误的时间。</p>","autoDesc":true}');export{e as data};
