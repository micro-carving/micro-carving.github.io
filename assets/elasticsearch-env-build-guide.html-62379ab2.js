import{_ as c,W as r,X as t,Y as a,Z as e,$ as n,a0 as i,C as l}from"./framework-eca38234.js";const o="/assets/elasticsearch-kibana-version-0c49b89b.png",d="/assets/win10-docker-elasticsearch-image-e387d9aa.png",p="/assets/win10-docker-kibana-image-7c2d0715.png",h="/assets/win10-docker-elasticsearch-mount-dir-5c8ef713.png",u="/assets/validate-elasticsearch-startup-8b21e510.png",m="/assets/validate-kibana-startup-0096e5ab.png",k="/assets/kibana-development-tool-46d79c60.png",b="/assets/es-windows-cluster-c1f737fb.png",v={},g=a("h2",{id:"dockerdesktop-版本-win10",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#dockerdesktop-版本-win10","aria-hidden":"true"},"#"),e(" DockerDesktop 版本（win10）")],-1),f=a("h3",{id:"elasticsearch-和-kibana-版本关系",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#elasticsearch-和-kibana-版本关系","aria-hidden":"true"},"#"),e(" Elasticsearch 和 Kibana 版本关系")],-1),_={href:"https://www.elastic.co/cn/support/matrix#matrix_compatibility",target:"_blank",rel:"noopener noreferrer"},w=i('<figure><img src="'+o+`" alt="elasticsearch 和 Kibana 版本关系" tabindex="0" loading="lazy"><figcaption>elasticsearch 和 Kibana 版本关系</figcaption></figure><h3 id="下载-elasticsearch" tabindex="-1"><a class="header-anchor" href="#下载-elasticsearch" aria-hidden="true">#</a> 下载 Elasticsearch</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull elasticsearch:7.17.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="win10下的docker拉取elasticsearch镜像" tabindex="0" loading="lazy"><figcaption>win10下的docker拉取elasticsearch镜像</figcaption></figure><h3 id="下载-kibana" tabindex="-1"><a class="header-anchor" href="#下载-kibana" aria-hidden="true">#</a> 下载 Kibana</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull kibana:7.17.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="win10下的docker拉取kibana镜像" tabindex="0" loading="lazy"><figcaption>win10下的docker拉取kibana镜像</figcaption></figure><h3 id="启动-elasticsearch-容器" tabindex="-1"><a class="header-anchor" href="#启动-elasticsearch-容器" aria-hidden="true">#</a> 启动 Elasticsearch 容器</h3><h4 id="创建挂载目录" tabindex="-1"><a class="header-anchor" href="#创建挂载目录" aria-hidden="true">#</a> 创建挂载目录</h4><figure><img src="'+h+`" alt="创建docker挂载目录" tabindex="0" loading="lazy"><figcaption>创建docker挂载目录</figcaption></figure><p>config：用于放置配置相关的目录</p><p>data：用于放置产生的数据的目录</p><p>plugins：用于放置插件</p><h4 id="新增-elasticsearch-yml-配置文件" tabindex="-1"><a class="header-anchor" href="#新增-elasticsearch-yml-配置文件" aria-hidden="true">#</a> 新增 elasticsearch.yml 配置文件</h4><p>在 config 目录下面新建 <code>elasticsearch.yml</code> 配置文件（这里的 <code>host: 0.0.0.0</code> 中间是有空格的。如果无，启动失败），文件内容如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">http.host</span><span class="token punctuation">:</span> 0.0.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="单节点启动" tabindex="-1"><a class="header-anchor" href="#单节点启动" aria-hidden="true">#</a> 单节点启动</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 创建 docker 网络</span>
<span class="token function">docker</span> network create elastic

<span class="token comment">## 启动</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> elasticsearch <span class="token parameter variable">--network</span> elastic <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token parameter variable">-e</span>
<span class="token assign-left variable">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms64m -Xmx128m&quot;</span> <span class="token parameter variable">-v</span> D:/DockerDesktop/docker-container-workspace/elastic-search/config/elasticsearch.yml:
/usr/share/elasticsearch/config/elasticsearch.yml <span class="token parameter variable">-v</span> D:/DockerDesktop/docker-container-workspace/elastic-search/data:
/usr/share/elasticsearch/data <span class="token parameter variable">-v</span> D:/DockerDesktop/docker-container-workspace/elastic-search/plugins:
/usr/share/elasticsearch/plugins <span class="token parameter variable">-d</span> elasticsearch:7.17.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="将-elasticsearch-容器设置为自启动" tabindex="-1"><a class="header-anchor" href="#将-elasticsearch-容器设置为自启动" aria-hidden="true">#</a> 将 elasticsearch 容器设置为自启动</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always elasticsearch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="验证启动是否成功" tabindex="-1"><a class="header-anchor" href="#验证启动是否成功" aria-hidden="true">#</a> 验证启动是否成功</h4>`,21),x={href:"http://127.0.0.1:9200/",target:"_blank",rel:"noopener noreferrer"},y=i('<figure><img src="'+u+`" alt="验证elasticsearch启动是否成功" tabindex="0" loading="lazy"><figcaption>验证elasticsearch启动是否成功</figcaption></figure><h3 id="启动kibana容器" tabindex="-1"><a class="header-anchor" href="#启动kibana容器" aria-hidden="true">#</a> 启动Kibana容器</h3><h4 id="启动容器" tabindex="-1"><a class="header-anchor" href="#启动容器" aria-hidden="true">#</a> 启动容器</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> kibana <span class="token parameter variable">--network</span> elastic <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 <span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://elasticsearch:9200&quot;</span> <span class="token parameter variable">-d</span> kibana:7.17.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="将-kibana-容器设置为自启动" tabindex="-1"><a class="header-anchor" href="#将-kibana-容器设置为自启动" aria-hidden="true">#</a> 将 kibana 容器设置为自启动</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always kibana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="验证是否启动成功" tabindex="-1"><a class="header-anchor" href="#验证是否启动成功" aria-hidden="true">#</a> 验证是否启动成功</h4>`,7),E={href:"http://localhost:5601/",target:"_blank",rel:"noopener noreferrer"},S=a("figure",null,[a("img",{src:m,alt:"验证kibana启动是否成功",tabindex:"0",loading:"lazy"}),a("figcaption",null,"验证kibana启动是否成功")],-1),q={href:"http://localhost:5601/app/dev_tools#/console",target:"_blank",rel:"noopener noreferrer"},D=i('<figure><img src="'+k+`" alt="kibana开发者工具页面" tabindex="0" loading="lazy"><figcaption>kibana开发者工具页面</figcaption></figure><h3 id="停止或者删除容器" tabindex="-1"><a class="header-anchor" href="#停止或者删除容器" aria-hidden="true">#</a> 停止或者删除容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 停止容器</span>
<span class="token function">docker</span> stop elasticsearch
<span class="token function">docker</span> stop kibana

<span class="token comment">## 删除网络配置和容器</span>
<span class="token function">docker</span> network <span class="token function">rm</span> elastic
<span class="token function">docker</span> <span class="token function">rm</span> elasticsearch
<span class="token function">docker</span> <span class="token function">rm</span> kibana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="docker命令行版本-centos-7" tabindex="-1"><a class="header-anchor" href="#docker命令行版本-centos-7" aria-hidden="true">#</a> Docker命令行版本（CentOS 7）</h2><p>由于和 win10 下面的 docker 命令差不多，这里不再过多赘述，只贴出命令汇总，如下所示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 拉取 7.17.9 版本的 elasticsearch</span>
<span class="token function">docker</span> pull elasticsearch:7.17.9

<span class="token comment">## 拉取 7.17.9 版本的 kibana，注意这里的版本和 elasticsearch 一致</span>
<span class="token function">docker</span> pull kibana:7.17.9

<span class="token comment">## 创建文件目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/你的用户名/docker/elasticsearch/config
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/你的用户名/docker/elasticsearch/data
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/你的用户名/docker/elasticsearch/plugins

<span class="token comment">## 赋予文件权限，防止容器启动失败</span>
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> /home/你的用户名/docker/elasticsearch/

<span class="token comment">## 新增内容到 elasticsearch.yml 配置文件（这里的 host: 0.0.0.0 中间是有空格的。如果无，启动失败）</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;http.host: 0.0.0.0&quot;</span> <span class="token operator">&gt;&gt;</span> /home/你的用户名/docker/elasticsearch/config/elasticsearch.yml

<span class="token comment">## 创建docker 网络</span>
<span class="token function">docker</span> network create elastic

<span class="token comment">## 启动 elasticsearch 容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> elasticsearch <span class="token parameter variable">--network</span> elastic <span class="token parameter variable">-p</span> <span class="token number">9200</span>:9200 <span class="token parameter variable">-p</span> <span class="token number">9300</span>:9300 <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token string">&quot;discovery.type=single-node&quot;</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms64m -Xmx128m&quot;</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /home/你的用户名/docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /home/你的用户名/docker/elasticsearch/data:/usr/share/elasticsearch/data <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /home/你的用户名/docker/elasticsearch/plugins:/usr/share/elasticsearch/plugins <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> elasticsearch:7.17.9

<span class="token comment">## 将 elasticsearch 容器设置为自启动</span>
<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always elasticsearch

<span class="token comment">## 启动 kibana 容器</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> kibana <span class="token parameter variable">--network</span> elastic <span class="token parameter variable">-p</span> <span class="token number">5601</span>:5601 <span class="token parameter variable">-e</span> <span class="token string">&quot;ELASTICSEARCH_HOSTS=http://elasticsearch:9200&quot;</span> <span class="token parameter variable">-d</span> kibana:7.17.9

<span class="token comment">## 将 kibana 容器设置为自启动</span>
<span class="token function">docker</span> update <span class="token parameter variable">--restart</span><span class="token operator">=</span>always kibana

<span class="token comment">## 停止容器</span>
<span class="token function">docker</span> stop elasticsearch
<span class="token function">docker</span> stop kibana

<span class="token comment">## 删除网络配置和容器</span>
<span class="token function">docker</span> network <span class="token function">rm</span> elastic
<span class="token function">docker</span> <span class="token function">rm</span> elasticsearch
<span class="token function">docker</span> <span class="token function">rm</span> kibana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="复杂环境搭建" tabindex="-1"><a class="header-anchor" href="#复杂环境搭建" aria-hidden="true">#</a> 复杂环境搭建</h2><h3 id="单机-集群" tabindex="-1"><a class="header-anchor" href="#单机-集群" aria-hidden="true">#</a> 单机&amp;集群</h3><p>单台 Elasticsearch 服务器提供服务，往往都有最大的负载能力，超过这个阈值，服务器性能就会大大降低甚至不可用，所以生产环境中，一般都是运行在指定服务器集群中。</p><p>除了负载能力，单点服务器也存在其他问题：</p><ul><li>单台机器存储容量有限</li><li>单服务器容易出现单点故障，无法实现高可用</li><li>单服务的并发处理能力有限</li></ul><p>配置服务器集群时，集群中节点数量没有限制，大于等于 2 个节点就可以看做是集群了。一般出于高性能及高可用方面来考虑集群中节点数量都是 3 个以上。</p><p>总之，集群能提高性能，增加容错。</p><h3 id="集群-cluster" tabindex="-1"><a class="header-anchor" href="#集群-cluster" aria-hidden="true">#</a> 集群 Cluster</h3><p><strong>一个集群就是由一个或多个服务器节点组织在一起，共同持有整个的数据，并一起提供索引和搜索功能</strong>。一个 Elasticsearch 集群有一个唯一的名字标识，这个名字默认就是 ”elasticsearch”。这个名字是重要的，因为一个节点只能通过指定某个集群的名字，来加入这个集群。</p><h3 id="节点-node" tabindex="-1"><a class="header-anchor" href="#节点-node" aria-hidden="true">#</a> 节点 Node</h3><p>集群中包含很多服务器，一个节点就是其中的一个服务器。作为集群的一部分，它存储数据，参与集群的索引和搜索功能。</p><p>一个节点也是由一个名字来标识的，默认情况下，这个名字是一个随机的漫威漫画角色的名字，这个名字会在启动的时候赋予节点。这个名字对于管理工作来说挺重要的，因为在这个管理过程中，你会去确定网络中的哪些服务器对应于 Elasticsearch 集群中的哪些节点。</p><p>一个节点可以通过配置集群名称的方式来加入一个指定的集群。默认情况下，每个节点都会被安排加入到一个叫做 “elasticsearch” 的集群中，这意味着，如果你在你的网络中启动了若干个节点，并假定它们能够相互发现彼此，它们将会自动地形成并加入到一个叫做 “elasticsearch” 的集群中。</p><p>在一个集群里，只要你想，可以拥有任意多个节点。而且，如果当前你的网络中没有运行任何 Elasticsearch 节点，这时启动一个节点，会默认创建并加入一个叫做“elasticsearch”的集群。</p><h2 id="windows-集群部署" tabindex="-1"><a class="header-anchor" href="#windows-集群部署" aria-hidden="true">#</a> Windows 集群部署</h2><h3 id="部署集群" tabindex="-1"><a class="header-anchor" href="#部署集群" aria-hidden="true">#</a> 部署集群</h3><h4 id="下载-elasticsearch-7-17-9" tabindex="-1"><a class="header-anchor" href="#下载-elasticsearch-7-17-9" aria-hidden="true">#</a> 下载 ElasticSearch 7.17.9</h4>`,25),K={href:"https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-17-9",target:"_blank",rel:"noopener noreferrer"},z=i('<h4 id="复制文件作为集群节点" tabindex="-1"><a class="header-anchor" href="#复制文件作为集群节点" aria-hidden="true">#</a> 复制文件作为集群节点</h4><p>将上述下载的 <code>elasticsearch-7.17.9-windows-x86_64.zip</code> 包进行解压，并进入解压目录下的 <code>elasticsearch-7.17.9</code> 目录，将该目录复制到一个新建的 <code>cluster</code> 目录下，并复制三份作为三个节点，如下图所示：</p><figure><img src="'+b+'" alt="Windows集群节点" tabindex="0" loading="lazy"><figcaption>Windows集群节点</figcaption></figure><h4 id="修改配置" tabindex="-1"><a class="header-anchor" href="#修改配置" aria-hidden="true">#</a> 修改配置</h4><p>修改集群文件目录中每个节点下的 <code>config/elasticsearch.yml</code> 配置文件，以节点 node-1 为例，修改配置内容如下：</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',6),A={href:"https://www.elastic.co/guide/en/kibana/7.17/docker.html",target:"_blank",rel:"noopener noreferrer"};function C(T,V){const s=l("ExternalLinkIcon");return r(),t("div",null,[g,f,a("p",null,[e("在使用 Kibana 时，需要注意 Kibana 的版本号必须和 ES 的版本相互对应，不然会出现 Kibana 和 ES 不兼容的问题，导致 Kibana 安装后不能使用。具体的版本对应问题，可以参考官网："),a("a",_,[e("elasticsearch 和 Kibana 版本关系"),n(s)])]),w,a("p",null,[e("在浏览器输入 "),a("a",x,[e("http://127.0.0.1:9200/"),n(s)]),e("，出现如下图所示表示启动成功！")]),y,a("p",null,[e("在浏览器输入 "),a("a",E,[e("http://localhost:5601/"),n(s)]),e("，出现如下图所示表示启动成功！")]),S,a("p",null,[e("进入开发者工具页面："),a("a",q,[e("http://localhost:5601/app/dev_tools#/console"),n(s)])]),D,a("p",null,[e("下载地址："),a("a",K,[e("https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-17-9"),n(s)])]),z,a("p",null,[e("官方安装教程："),a("a",A,[e("https://www.elastic.co/guide/en/kibana/7.17/docker.html"),n(s)])])])}const O=c(v,[["render",C],["__file","elasticsearch-env-build-guide.html.vue"]]);export{O as default};
