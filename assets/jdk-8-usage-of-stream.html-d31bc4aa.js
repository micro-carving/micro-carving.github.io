const t=JSON.parse('{"key":"v-540c2162","path":"/guide/develop/java/jdk-8-usage-of-stream.html","title":"Java8 中 Stream 的使用","lang":"zh-CN","frontmatter":{"title":"Java8 中 Stream 的使用","icon":"java","order":1,"sticky":true,"star":true,"date":"2021-07-07T00:00:00.000Z","category":["java"],"tag":["编程","jdk8","Stream"],"description":"1.如何将 List 转 Map(Collectors.toMap) 在实际项目中我们经常会用到 List 转 Map 操作，在过去我们可能使用的是 for 循环遍历的方式。举个例子： 先定义类： // 简单对象 @Accessors(chain = true) // 链式方法 @Data class User { private String id; private String name; }","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/develop/java/jdk-8-usage-of-stream.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"Java8 中 Stream 的使用"}],["meta",{"property":"og:description","content":"1.如何将 List 转 Map(Collectors.toMap) 在实际项目中我们经常会用到 List 转 Map 操作，在过去我们可能使用的是 for 循环遍历的方式。举个例子： 先定义类： // 简单对象 @Accessors(chain = true) // 链式方法 @Data class User { private String id; private String name; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://olinonee.com/./"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T12:34:04.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Java8 中 Stream 的使用"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"Stream"}],["meta",{"property":"article:published_time","content":"2021-07-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-05T12:34:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java8 中 Stream 的使用\\",\\"image\\":[\\"https://olinonee.com/./\\"],\\"datePublished\\":\\"2021-07-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-05T12:34:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1.如何将 List 转 Map(Collectors.toMap)","slug":"_1-如何将-list-转-map-collectors-tomap","link":"#_1-如何将-list-转-map-collectors-tomap","children":[]},{"level":2,"title":"2.如何将 List<Map> 多个 map 对象相同的 Key 分组并合并重组数据 （*）","slug":"_2-如何将-list-map-多个-map-对象相同的-key-分组并合并重组数据","link":"#_2-如何将-list-map-多个-map-对象相同的-key-分组并合并重组数据","children":[]},{"level":2,"title":"3.List 集合里面存储 Map，对 Map 里面的某个属性进行排序（*）","slug":"_3-list-集合里面存储-map-对-map-里面的某个属性进行排序","link":"#_3-list-集合里面存储-map-对-map-里面的某个属性进行排序","children":[]},{"level":2,"title":"4.Java8-使用 stream.sorted() 对 List 和 Map 排序","slug":"_4-java8-使用-stream-sorted-对-list-和-map-排序","link":"#_4-java8-使用-stream-sorted-对-list-和-map-排序","children":[{"level":3,"title":"List 排序","slug":"list-排序","link":"#list-排序","children":[]},{"level":3,"title":"Map 排序","slug":"map-排序","link":"#map-排序","children":[]},{"level":3,"title":"Collectors.toMap() 基础","slug":"collectors-tomap-基础","link":"#collectors-tomap-基础","children":[]}]},{"level":2,"title":"5.对于 List<Map<String, Object>> 数据的分组求和","slug":"_5-对于-list-map-string-object-数据的分组求和","link":"#_5-对于-list-map-string-object-数据的分组求和","children":[]},{"level":2,"title":"6.对实体对象某字段求和","slug":"_6-对实体对象某字段求和","link":"#_6-对实体对象某字段求和","children":[]},{"level":2,"title":"7.对 List<Map<String,Object>> 某字段进行降序排序并取前 top2","slug":"_7-对-list-map-string-object-某字段进行降序排序并取前-top2","link":"#_7-对-list-map-string-object-某字段进行降序排序并取前-top2","children":[]},{"level":2,"title":"8.对 List<Map<String,Object>> 与 Map<String,Long> 数据重组返回","slug":"_8-对-list-map-string-object-与-map-string-long-数据重组返回","link":"#_8-对-list-map-string-object-与-map-string-long-数据重组返回","children":[]},{"level":2,"title":"9.groupingBy 分组相关使用","slug":"_9-groupingby-分组相关使用","link":"#_9-groupingby-分组相关使用","children":[{"level":3,"title":"集合按照多个属性分组","slug":"集合按照多个属性分组","link":"#集合按照多个属性分组","children":[]}]},{"level":2,"title":"10.filter、distinct 使用","slug":"_10-filter、distinct-使用","link":"#_10-filter、distinct-使用","children":[{"level":3,"title":"filter使用","slug":"filter使用","link":"#filter使用","children":[]},{"level":3,"title":"distinct 使用","slug":"distinct-使用","link":"#distinct-使用","children":[]},{"level":3,"title":"复杂对象去重","slug":"复杂对象去重","link":"#复杂对象去重","children":[]}]}],"git":{"createdTime":1688560444000,"updatedTime":1688560444000,"contributors":[{"name":"olinonee","email":"olinone666@gmail.com","commits":1}]},"readingTime":{"minutes":13.84,"words":4151},"filePathRelative":"guide/develop/java/jdk-8-usage-of-stream.md","localizedDate":"2021年7月7日","excerpt":"<h2> 1.如何将 List 转 Map(Collectors.toMap)</h2>\\n<p>在实际项目中我们经常会用到 List 转 Map 操作，在过去我们可能使用的是 <code>for</code> 循环遍历的方式。举个例子：</p>\\n<p>先定义类：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 简单对象</span>\\n<span class=\\"token annotation punctuation\\">@Accessors</span><span class=\\"token punctuation\\">(</span>chain <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 链式方法</span>\\n<span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">User</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
