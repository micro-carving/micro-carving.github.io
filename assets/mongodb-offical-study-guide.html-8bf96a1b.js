import{_ as o,W as p,X as c,Y as n,Z as s,$ as t,a1 as e,C as l}from"./framework-158a71b3.js";const i="/assets/2-9769ab14.png",u="/assets/3-ec1f89b9.png",d="/assets/mongodb-connect-uri-b73ef9aa.png",r={},k=e('<h2 id="mongodb-java-driver-文档-v4-9-0" tabindex="-1"><a class="header-anchor" href="#mongodb-java-driver-文档-v4-9-0" aria-hidden="true">#</a> MongoDB Java Driver 文档（V4.9.0）</h2><h3 id="各版本新特性" tabindex="-1"><a class="header-anchor" href="#各版本新特性" aria-hidden="true">#</a> 各版本新特性</h3><h4 id="_4-9" tabindex="-1"><a class="header-anchor" href="#_4-9" aria-hidden="true">#</a> 4.9</h4><ul><li>添加了一个新的异常，用于标识由 <code>BsonCreator</code> 注释的构造函数除了包含具有 <code>BsonProperty</code> 或 <code>BsonId</code> 以外注释的参数。</li><li>修改了 <code>org.mongodb.driver.protocol.command</code> 包上报的命令监控消息的日志格式。</li><li>向 <code>Aggregate</code> 帮助类添加了对 <code>$documents</code> 聚合管道阶段的支持。</li><li>添加了 <code>MongoClientSettings.Builder.applyToLoggerSettings()</code> 和 <code>LoggerSettings.Builder.maxDocumentLength()</code> 方法，用于在日志消息中为 <code>BSON</code> 文档的扩展 <code>JSON</code> 表示指定最大长度</li></ul>',4),m={href:"https://mongodb.github.io/mongo-java-driver/4.9/whats-new/",target:"_blank",rel:"noopener noreferrer"},v=e('<h3 id="java-驱动" tabindex="-1"><a class="header-anchor" href="#java-驱动" aria-hidden="true">#</a> Java 驱动</h3><h4 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h4><p>欢迎访问 Java 驱动程序的文档网站，Java 驱动程序是用于同步 Java 应用程序的官方 MongoDB 驱动程序。使用 Maven 或 Gradle 下载，或者按照我们的快速入门指南设置一个可运行的项目。</p><p>如果 Java 应用程序需要异步流处理，请使用 Reactive Streams Driver，该驱动程序使用 ReactiveStreams 对 MongoDB 进行非阻塞调用。</p><h4 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h4><h5 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h5><p>本指南展示了如何创建一个使用 Java 驱动程序连接到 MongoDB Atlas 集群的应用程序。</p><p>Java 驱动程序允许从 Java 应用程序连接到 MongoDB 集群并与之通信。</p><p>MongoDB Atlas 是一个完全托管的云数据库服务，在 MongoDB 集群上托管你的数据。在本指南中，我们将向你展示如何开始使用你自己的免费（无需支付）集群。</p><p>请参阅以下步骤，将 Java 应用程序与 MongoDB Atlas 集群连接起来。</p><h5 id="设置项目" tabindex="-1"><a class="header-anchor" href="#设置项目" aria-hidden="true">#</a> 设置项目</h5><h6 id="安装-java-开发工具-jdk" tabindex="-1"><a class="header-anchor" href="#安装-java-开发工具-jdk" aria-hidden="true">#</a> 安装 Java 开发工具（JDK）</h6>',12),g={href:"https://www.oracle.com/java/technologies/javase-downloads.html",target:"_blank",rel:"noopener noreferrer"},b=n("h6",{id:"创建项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建项目","aria-hidden":"true"},"#"),s(" 创建项目")],-1),h=n("p",null,"本指南向你展示如何使用 Maven 或 Gradle 添加 MongoDB Java 驱动程序依赖项。我们建议你使用集成开发环境（IDE），如 Intellij IDEA 或 Eclipse IDE，这样可以更方便地配置 Maven 或 Gradle 来构建和运行你的项目。",-1),f={href:"https://maven.apache.org/guides/development/guide-building-maven.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://guides.gradle.org/creating-new-gradle-builds/",target:"_blank",rel:"noopener noreferrer"},y=e(`<h6 id="将-mongodb-添加为依赖项" tabindex="-1"><a class="header-anchor" href="#将-mongodb-添加为依赖项" aria-hidden="true">#</a> 将 MongoDB 添加为依赖项</h6><p>如果你正在使用 Maven，请将以下内容添加到 <code>pom.xml</code> 依赖项列表中：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mongodb-driver-sync<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.9.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你正在使用 Gradle，请将以下内容添加到你的 <code>build.gradle</code> 依赖项列表中：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependencies {
  implementation &#39;org.mongodb:mongodb-driver-sync:4.9.1&#39;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦配置了依赖项，请确保它们可用于你的项目，这可能需要运行依赖项管理器并在 IDE 中刷新项目。</p><h5 id="创建-mongodb-集群" tabindex="-1"><a class="header-anchor" href="#创建-mongodb-集群" aria-hidden="true">#</a> 创建 MongoDB 集群</h5><h6 id="在-atlas-中建立一个免费分层集群" tabindex="-1"><a class="header-anchor" href="#在-atlas-中建立一个免费分层集群" aria-hidden="true">#</a> 在 Atlas 中建立一个免费分层集群</h6>`,8),w={href:"https://www.mongodb.com/docs/atlas/getting-started/?jmp=docs_driver_java",target:"_blank",rel:"noopener noreferrer"},q={href:"https://account.mongodb.com/account/register?tck=docs_atlas&_ga=2.85896410.238876901.1683168999-176447065.1683168999",target:"_blank",rel:"noopener noreferrer"},M=n("p",null,"完成 Atlas 指南中的步骤后，你应该在 Atlas 中部署了一个新的 MongoDB 集群、一个新的数据库用户以及将示例数据集加载到集群中。",-1),x=n("h6",{id:"连接到集群",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#连接到集群","aria-hidden":"true"},"#"),s(" 连接到集群")],-1),D=n("p",null,"在这一步中，我们创建并运行一个应用程序，该应用程序使用 MongoDB Java 驱动程序连接到 MongoDB 集群，并对样本数据运行查询。",-1),C=n("p",null,"我们在一个名为连接字符串的字符串中向驱动程序传递如何连接到 MongoDB 集群的说明。此字符串包括有关群集的主机名或 IP 地址和端口、身份验证机制、用户凭据（如果适用）以及其他连接选项的信息。",-1),j={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/connect/#std-label-java-other-ways-to-connect",target:"_blank",rel:"noopener noreferrer"},S=e('<p>要检索你在上一步中创建的集群和用户的连接字符串，请登录你的 Atlas 帐户并导航到<strong>数据库</strong>部分，然后单击要连接到的集群的<strong>连接</strong>，如下所示：</p><figure><img src="'+i+'" alt="AtlasMongoDBCluster" tabindex="0" loading="lazy"><figcaption>AtlasMongoDBCluster</figcaption></figure><p>继续 “Connect to your application” 步骤，然后选择 Java 驱动程序。选择 “4.3 or later” 作为版本。单击 “复制” 图标将连接字符串复制到剪贴板，如下所示：</p><figure><img src="'+u+`" alt="AtlasMongoDBClusterConnectDB" tabindex="0" loading="lazy"><figcaption>AtlasMongoDBClusterConnectDB</figcaption></figure><p>将 Atlas 连接字符串保存在一个安全的位置，以便你可以访问该位置以进行下一步操作。</p><h6 id="从应用程序查询-mongodb-集群" tabindex="-1"><a class="header-anchor" href="#从应用程序查询-mongodb-集群" aria-hidden="true">#</a> 从应用程序查询 MongoDB 集群</h6><p>接下来，在项目的基本包目录中创建一个名为 <code>QuickStart.java</code> 的文件来包含你的应用程序。使用以下示例代码在 MongoDB Atlas 中对你的示例数据集运行查询，将 <code>uri</code> 变量的值替换为 MongoDB Atlas 连接字符串。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">eq</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuickStart</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// Replace the placeholder with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Document</span> doc <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Back to the Future&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>doc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;No matching documents found.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你运行 <code>QuickStart</code> 类时，它应该从示例数据集中输出电影的详细信息，该数据集看起来如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  _id: ...,
  plot: &#39;A young man is accidentally sent 30 years into the past...&#39;,
  genres: [ &#39;Adventure&#39;, &#39;Comedy&#39;, &#39;Sci-Fi&#39; ],
  ...
  title: &#39;Back to the Future&#39;,
  ...
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有收到输出或错误，请检查 Java 类中是否包含了正确的连接字符串，以及是否将示例数据集加载到 MongoDB Atlas 集群中。</p><blockquote><p><strong>重要</strong></p><p><strong>使用 TLS v1.3 时的已知连接问题</strong></p><p>如果在运行应用程序时，连接到 MongoDB 实例或集群时遇到类似以下情况的错误，你可能需要将 JDK 更新到最新的补丁版本：</p><p><code>javax.net.ssl.SSLHandshakeException: extension (5) should not be presented in certificate_request</code></p><p>当将 TLS 1.3 协议与特定版本的 JDK 一起使用时，此异常是一个已知问题，但在以下版本中已修复：</p><ul><li>JDK 11.0.7</li><li>JDK 13.0.3</li><li>JDK 14.0.2</li></ul><p>要解决此错误，请将 JDK 更新到以前的修补程序版本或更新的版本。</p></blockquote><p>完成这一步后，你应该有一个使用 Java 驱动程序连接到 MongoDB 集群的工作应用程序，对样本数据运行查询，并打印出结果。</p><h6 id="使用-pojo-可选" tabindex="-1"><a class="header-anchor" href="#使用-pojo-可选" aria-hidden="true">#</a> 使用 POJO（可选）</h6><p>在上一节中，你对示例集合运行了一个查询，以检索类似映射的类 <code>Document</code> 中的数据。在本节中，你可以学习使用自己的 Plain Old Java Object（POJO）来存储和检索 MongoDB 中的数据。</p><p>在项目的基本包目录中创建一个名为 <code>Movie.java</code> 的文件，并为包含以下字段、setter 和 getter 的类添加以下代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Movie</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> plot<span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> genres<span class="token punctuation">;</span>
    <span class="token class-name">String</span> title<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPlot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> plot<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPlot</span><span class="token punctuation">(</span><span class="token class-name">String</span> plot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>plot <span class="token operator">=</span> plot<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getGenres</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> genres<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setGenres</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> genres<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>genres <span class="token operator">=</span> genres<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> title<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Movie [\\n  plot=&quot;</span> <span class="token operator">+</span> plot <span class="token operator">+</span> <span class="token string">&quot;,\\n  genres=&quot;</span> <span class="token operator">+</span> genres <span class="token operator">+</span> <span class="token string">&quot;,\\n  title=&quot;</span> <span class="token operator">+</span> title <span class="token operator">+</span> <span class="token string">&quot;\\n]&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在与项目中的 <code>Movie</code> 文件相同的包目录中创建一个新文件 <code>QuickStartPojoExample.java</code> 。使用以下示例代码在 MongoDB Atlas 中对你的示例数据集运行查询，将 <code>uri</code> 变量的值替换为 MongoDB Atlas 连接字符串。请确保将连接字符串的 <code>&lt;password&gt;</code> 部分替换为你为具有 <strong>atlasAdmin</strong> 权限的用户创建的密码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoClientSettings</span><span class="token punctuation">.</span><span class="token static">getDefaultCodecRegistry</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">eq</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>codecs<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">CodecRegistries</span><span class="token punctuation">.</span><span class="token static">fromProviders</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>codecs<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">CodecRegistries</span><span class="token punctuation">.</span><span class="token static">fromRegistries</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>codecs<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">CodecProvider</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>codecs<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">CodecRegistry</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>codecs<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">PojoCodecProvider</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuickStartPojoExample</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CodecProvider</span> pojoCodecProvider <span class="token operator">=</span> <span class="token class-name">PojoCodecProvider</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">automatic</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CodecRegistry</span> pojoCodecRegistry <span class="token operator">=</span> <span class="token function">fromRegistries</span><span class="token punctuation">(</span><span class="token function">getDefaultCodecRegistry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fromProviders</span><span class="token punctuation">(</span>pojoCodecProvider<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withCodecRegistry</span><span class="token punctuation">(</span>pojoCodecRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Movie</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Movie</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Movie</span> movie <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Back to the Future&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>movie<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你运行 <code>QuickStartPojoExample</code> 类时，它应该从示例数据集中输出电影的详细信息，该数据集应该如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Movie [
  plot=A young man is accidentally sent 30 years into the past...,
  genres=[Adventure, Comedy, Sci-Fi],
  title=Back to the Future
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有收到输出或错误，请检查 Java 类中是否包含了正确的连接字符串，以及是否将示例数据集加载到 MongoDB Atlas 集群中。</p><p>有关使用 POJO 存储和检索数据的更多信息，请参阅以下链接：</p>`,23),I={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/data-formats/document-data-format-pojo/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/data-formats/pojo-customization/",target:"_blank",rel:"noopener noreferrer"},A=e(`<h5 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步" aria-hidden="true">#</a> 下一步</h5><p>在基础 CRUD 指南中学习如何使用 Java 驱动程序读取和修改数据，或者在用法示例中学习如何执行常见操作。</p><h4 id="快速参考" tabindex="-1"><a class="header-anchor" href="#快速参考" aria-hidden="true">#</a> 快速参考</h4><p>本页显示了几个 MongoDB 命令的驱动程序语法，并链接到相关的参考和 API 文档。</p><ul><li>查询单个文档</li></ul><p><code>coll.find(Filters.eq(&quot;title&quot;, &quot;Hamlet&quot;)).first();</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ title: &#39;Hamlet&#39;, type: &#39;movie&#39;, ... }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询多个文档</li></ul><p><code>coll.find(Filters.eq(&quot;year&quot;, 2005))</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;Christmas in Boston&#39;, year: 2005, ... },
  { title: &#39;Chicken Little&#39;, year: 2005, ... },
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>插入单个文档</li></ul><p><code>coll.insertOne(new Document(&quot;title&quot;, &quot;Jackie Robinson&quot;));</code></p><ul><li>插入多个文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.insertMany<span class="token punctuation">(</span>
    Arrays.asList<span class="token punctuation">(</span>
            new Document<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;Dangal&quot;</span><span class="token punctuation">)</span>.append<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span>, <span class="token string">&quot;Not Rated&quot;</span><span class="token punctuation">)</span>,
            new Document<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;The Boss Baby&quot;</span><span class="token punctuation">)</span>.append<span class="token punctuation">(</span><span class="token string">&quot;rating&quot;</span>, <span class="token string">&quot;PG&quot;</span><span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>更新单个文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.updateOne<span class="token punctuation">(</span>
        Filters.eq<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;Amadeus&quot;</span><span class="token punctuation">)</span>,
        Updates.set<span class="token punctuation">(</span><span class="token string">&quot;imdb.rating&quot;</span>, <span class="token number">9.5</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ title: &#39;Amadeus&#39;, imdb: { rating: 9.5, ... } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>更新多个文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.updateMany<span class="token punctuation">(</span>
        Filters.eq<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, <span class="token number">2001</span><span class="token punctuation">)</span>,
        Updates.inc<span class="token punctuation">(</span><span class="token string">&quot;imdb.votes&quot;</span>, <span class="token number">100</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;A Beautiful Mind&#39;, year: 2001, imdb: { votes: 826257, ... },
  { title: &#39;Shaolin Soccer&#39;, year: 2001, imdb: { votes: 65442, ... },
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在文档中更新数组</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.updateOne<span class="token punctuation">(</span>
        Filters.eq<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;Cosmos&quot;</span><span class="token punctuation">)</span>,
        Updates.push<span class="token punctuation">(</span><span class="token string">&quot;genres&quot;</span>, <span class="token string">&quot;Educational&quot;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ title: &#39;Cosmos&#39;, genres: [ &#39;Documentary&#39;, &#39;Educational&#39; ], ...}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>文档替换</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.replaceOne<span class="token punctuation">(</span>
        Filters.and<span class="token punctuation">(</span>Filters.eq<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span>, <span class="token string">&quot;Deli Llama&quot;</span><span class="token punctuation">)</span>, Filters.eq<span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span>, <span class="token string">&quot;2 Nassau St&quot;</span><span class="token punctuation">))</span>,
        new Document<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span>, <span class="token string">&quot;Lord of the Wings&quot;</span><span class="token punctuation">)</span>.append<span class="token punctuation">(</span><span class="token string">&quot;zipcode&quot;</span>, <span class="token number">10001</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{ name: &#39;Lord of the Wings&#39;, zipcode: 10001 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除单个文档</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>coll.deleteOne(Filters.eq(&quot;title&quot;, &quot;Congo&quot;));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除多个文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.deleteMany<span class="token punctuation">(</span>Filters.regex<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;^Shark.*&quot;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>批量写入</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.bulkWrite<span class="token punctuation">(</span>
        Arrays.asList<span class="token punctuation">(</span>
               new InsertOneModel<span class="token operator">&lt;</span>Document<span class="token operator">&gt;</span><span class="token punctuation">(</span>
                       new Document<span class="token punctuation">(</span><span class="token punctuation">)</span>.append<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;A New Movie&quot;</span><span class="token punctuation">)</span>.append<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, <span class="token number">2022</span><span class="token punctuation">))</span>,
               new DeleteManyModel<span class="token operator">&lt;</span>Document<span class="token operator">&gt;</span><span class="token punctuation">(</span>
                       Filters.lt<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, <span class="token number">1970</span><span class="token punctuation">))</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看变更</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.watch<span class="token punctuation">(</span>Arrays.asList<span class="token punctuation">(</span>
        Aggregates.match<span class="token punctuation">(</span>Filters.gte<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, <span class="token number">2022</span><span class="token punctuation">))</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过游标迭代器访问数据</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>MongoCursor<span class="token operator">&lt;</span>Document<span class="token operator">&gt;</span> cursor <span class="token operator">=</span> coll.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>cursor.hasNext<span class="token punctuation">(</span><span class="token punctuation">))</span> <span class="token punctuation">{</span>
    System.out.println<span class="token punctuation">(</span>cursor.next<span class="token punctuation">(</span><span class="token punctuation">)</span>.toJson<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;2001: A Space Odyssey&#39;, ... },
  { title: &#39;The Sound of Music&#39;, ... },
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以数组形式访问查询的结果</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>List<span class="token operator">&lt;</span>Document<span class="token operator">&gt;</span> resultList <span class="token operator">=</span> new ArrayList<span class="token operator">&lt;</span>Document<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
coll.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.into<span class="token punctuation">(</span>resultList<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;2001: A Space Odyssey&#39;, ... },
  { title: &#39;The Sound of Music&#39;, ... },
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文档计数</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.countDocuments<span class="token punctuation">(</span>Filters.eq<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, <span class="token number">2000</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>618
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>列出不同的文档或字段值</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.distinct<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, Integer.class<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[ 1891, 1893, 1894, 1896, 1903, ... ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>限制检索文档的数量</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.limit<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;My Neighbor Totoro&#39;, ... },
  { title: &#39;Amélie&#39;, ... }
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>跳过检索文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.find<span class="token punctuation">(</span>Filters.regex<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;^Rocky&quot;</span><span class="token punctuation">))</span>.skip<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;Rocky III&#39;, ... },
  { title: &#39;Rocky IV&#39;, ... },
  { title: &#39;Rocky V&#39;, ... }
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>检索文档时对文档进行排序</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.sort<span class="token punctuation">(</span>Sorts.ascending<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;Newark Athlete&#39;, year: 1891, ... },
  { title: &#39;Blacksmith Scene&#39;, year: 1893, ...},
  { title: &#39;Dickson Experimental Sound Film&#39;, year: 1894},
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>检索项目文档字段</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.find<span class="token punctuation">(</span><span class="token punctuation">)</span>.projection<span class="token punctuation">(</span>Projections.fields<span class="token punctuation">(</span>
       Projections.excludeId<span class="token punctuation">(</span><span class="token punctuation">)</span>,
       Projections.include<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span>, <span class="token string">&quot;imdb&quot;</span><span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { year: 2012, imdb: { rating: 5.8, votes: 230, id: 8256 }},
  { year: 1985, imdb: { rating: 7.0, votes: 447, id: 1654 }},
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建索引</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>coll.createIndex<span class="token punctuation">(</span>
        Indexes.compoundIndex<span class="token punctuation">(</span>
                Indexes.ascending<span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span>,
                Indexes.descending<span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span><span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文本搜索</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// only searches fields with text indexes
coll.find<span class="token punctuation">(</span>Filters.text<span class="token punctuation">(</span><span class="token string">&quot;zissou&quot;</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  { title: &#39;The Life Aquatic with Steve Zissou&#39;, ... }
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用 Maven 安装驱动依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mongodb-driver-sync<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.9.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用 Gradle 安装驱动依赖</li></ul><div class="language-gradle line-numbers-mode" data-ext="gradle"><pre class="language-gradle"><code><span class="token keyword">dependencies</span> <span class="token punctuation">{</span>
  <span class="token keyword">implementation</span> <span class="token string">&#39;org.mongodb:mongodb-driver-sync:4.9.1&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用案例" tabindex="-1"><a class="header-anchor" href="#使用案例" aria-hidden="true">#</a> 使用案例</h4><h5 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h5><p>使用示例为流行的 MongoDB 操作提供了方便的起点。每个示例都提供了以下信息：</p><ul><li>示例中的操作说明，显示了该方法的目的和示例用例</li><li>关于如何使用该操作的说明，包括参数、返回值和可能遇到的常见异常</li><li>一个完整的 Java 类，你可以复制并粘贴它，以便在自己的环境中运行示例</li></ul><h6 id="如何使用用法示例" tabindex="-1"><a class="header-anchor" href="#如何使用用法示例" aria-hidden="true">#</a> 如何使用用法示例</h6><p>这些示例使用 Atlas 提供的样本数据集。你可以按照《Atlas 入门指南》将它们加载到 MongoDB Atlas 免费层的数据库中，也可以将示例数据集导入本地 MongoDB 实例中。</p><p>导入数据集后，可以将使用示例复制并粘贴到你选择的开发环境中。你可以按照快速入门指南了解有关 MongoDB Java 驱动程序入门的更多信息。一旦你复制了一个使用示例，你需要编辑连接 URI 以将该示例连接到你的 MongoDB 实例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Replace the following with your MongoDB deployment&#39;s connection string.</span>
<span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,75),O={href:"https://www.mongodb.com/docs/guides/cloud/connectionstring/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://www.mongodb.com/docs/manual/core/security-scram/",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"<user>",-1),U=n("code",null,"<password>",-1),T=n("code",null,"<cluster-url>",-1),E={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/",target:"_blank",rel:"noopener noreferrer"},F=e('<h5 id="查询操作" tabindex="-1"><a class="header-anchor" href="#查询操作" aria-hidden="true">#</a> 查询操作</h5><h6 id="查询单个文档" tabindex="-1"><a class="header-anchor" href="#查询单个文档" aria-hidden="true">#</a> 查询单个文档</h6><p>你可以通过将一个 <code>MongoCollection</code> 对象上的 <code>find()</code> 和 <code>first()</code> 方法链接在一起来检索集合中的单个文档。你可以将查询过滤器传递给 <code>find()</code> 方法，以查询并返回集合中与过滤器匹配的文档。如果不包含过滤器，MongoDB 将返回集合中的所有文档。<code>first()</code> 方法返回第一个匹配的文档。</p>',3),J={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/read-operations/retrieve/",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,[s("你还可以将其他方法链接到 "),n("code",null,"find()"),s(" 方法，例如 "),n("code",null,"sort()"),s(" 按指定顺序组织匹配的文档和 "),n("code",null,"projection()"),s(" 配置返回文档中包含的字段。")],-1),W=n("code",null,"sort()",-1),N={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/read-operations/sort/",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"projection()",-1),K={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/read-operations/project/",target:"_blank",rel:"noopener noreferrer"},G=e("<p><code>find()</code> 方法返回 <code>FindIterable</code> 的一个实例，这个类提供了几个方法来访问、组织和遍历结果。<code>FindIterable</code> 也从它的父类 <code>MongoIterable</code> 中继承方法，比如 <code>first()</code>。</p><p><code>first()</code> 方法从检索结果中返回第一个文档，如果没有结果则返回 <code>null</code>。</p><p>示例</p><p>下面的代码片段从 <code>movies</code> 集合中找到一个文档。它使用以下对象和方法：</p><ul><li>传递给 <code>find()</code> 方法的<strong>查询筛选器</strong>。<code>eq</code> 过滤器只匹配标题与文本 “The Room” 完全匹配的电影。</li><li>一种按评级降序组织匹配文档的<strong>排序</strong>，因此如果我们的查询匹配多个文档，则返回的文档是评级最高的文档。</li><li>一个投影，包括 <code>title</code> 和 <code>imdb</code> 字段中的对象，并使用帮助器方法 <code>excludeId()</code> 排除 <code>_id</code> 字段。</li></ul>",5),V=n("p",null,[n("strong",null,"注意")],-1),H={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/connect/#std-label-connect-to-mongodb",target:"_blank",rel:"noopener noreferrer"},Q=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">eq</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Projections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Sorts</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FindOne</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> projectionFields <span class="token operator">=</span> <span class="token class-name">Projections</span><span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span>
                    <span class="token class-name">Projections</span><span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;imdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token class-name">Projections</span><span class="token punctuation">.</span><span class="token function">excludeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Document</span> doc <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;The Room&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">projection</span><span class="token punctuation">(</span>projectionFields<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Sorts</span><span class="token punctuation">.</span><span class="token function">descending</span><span class="token punctuation">(</span><span class="token string">&quot;imdb.rating&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>doc <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;No results found.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Y=n("p",null,[n("strong",null,"提示")],-1),$=n("p",null,[n("strong",null,"传统 API")],-1),Z={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),nn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/FindIterable.html",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoIterable.html",target:"_blank",rel:"noopener noreferrer"},an={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#find()",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoIterable.html#first()",target:"_blank",rel:"noopener noreferrer"},en=n("h6",{id:"查询多文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#查询多文档","aria-hidden":"true"},"#"),s(" 查询多文档")],-1),on=n("p",null,[s("你可以通过调用 "),n("code",null,"MongoCollection"),s(" 对象上的 "),n("code",null,"find()"),s(" 方法来查询集合中的多个文档。将查询过滤器传递给 "),n("code",null,"find()"),s(" 方法，以查询并返回集合中与过滤器匹配的文档。如果不包含过滤器，MongoDB 将返回集合中的所有文档。")],-1),pn={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/read-operations/retrieve/",target:"_blank",rel:"noopener noreferrer"},cn=n("p",null,[s("你还可以将方法链接到 "),n("code",null,"find()"),s(" 方法，例如 "),n("code",null,"sort()"),s(" 按指定顺序组织匹配的文档和 "),n("code",null,"projection()"),s(" 配置返回文档中包含的字段。")],-1),ln=n("code",null,"sort()",-1),un={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/read-operations/sort/",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"projection()",-1),rn={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/read-operations/project/",target:"_blank",rel:"noopener noreferrer"},kn=e(`<p><code>find()</code> 方法返回 <code>FindIterable</code> 的一个实例，这个类提供了几个方法来访问、组织和遍历结果。<code>FindIterable</code> 还继承了其父类 <code>MongoIterable</code> 的方法，后者实现了核心 Java 接口 <code>Iterable</code>。</p><p>你可以在 <code>MongoIterable</code> 上调用 <code>iterator()</code> 方法，该方法返回一个 <code>MongoCursor</code> 实例，你可以使用该实例遍历结果。你可以调用 <code>MongoCursor</code> 上的方法，例如 <code>hasNext()</code> 来检查是否存在额外的结果，或者调用 <code>next()</code> 来返回集合中的下一个文档。如果没有文档匹配查询，调用 <code>hasNext()</code> 将返回 <code>false</code>，因此调用 <code>next()</code> 将抛出异常。</p><p>如果在迭代器返回最终结果之后或没有结果存在时调用 <code>next()</code>，则会抛出 <code>java.util.NoSuchElementException</code> 类型的异常。在调用 <code>next()</code> 之前，总是使用 <code>hasNext()</code> 来检查是否存在其他结果。</p><p>示例</p><p>下面的代码片段查找并打印与 <code>movies</code> 集合查询匹配的所有文档。它使用以下对象和方法：</p><ul><li>传递给 <code>find()</code> 方法的查询过滤器。<code>lt()</code> 过滤器只匹配运行时间少于 15 分钟的电影。</li><li>按标题降序组织返回文档的排序（“Z”在“A”之前）。</li><li>一个投影，它包含 <code>title</code> 和 <code>imdb</code> 字段中的对象，并使用助手方法 <code>excludeId()</code> 排除 <code>_id</code> 字段。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">lt</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCursor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Projections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Sorts</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Find</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> projectionFields <span class="token operator">=</span> <span class="token class-name">Projections</span><span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span>
                    <span class="token class-name">Projections</span><span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;imdb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token class-name">Projections</span><span class="token punctuation">.</span><span class="token function">excludeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">MongoCursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> cursor <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token string">&quot;runtime&quot;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">projection</span><span class="token punctuation">(</span>projectionFields<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Sorts</span><span class="token punctuation">.</span><span class="token function">descending</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),mn=n("p",null,[n("strong",null,"提示")],-1),vn=n("p",null,[n("strong",null,"传统 API")],-1),gn={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},bn=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),hn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/FindIterable.html",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoIterable.html",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCursor.html",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#find()",target:"_blank",rel:"noopener noreferrer"},wn=e(`<h5 id="插入操作" tabindex="-1"><a class="header-anchor" href="#插入操作" aria-hidden="true">#</a> 插入操作</h5><h6 id="插入单个文档" tabindex="-1"><a class="header-anchor" href="#插入单个文档" aria-hidden="true">#</a> 插入单个文档</h6><p>可以使用 <code>MongoCollection</code> 对象上的 <code>insertOne()</code> 方法将单个文档插入到集合中。要插入文档，请构造一个 <code>document</code> 对象，该对象包含要存储的字段和值。如果在一个还不存在的集合上调用 <code>insertOne()</code> 方法，服务器会自动为你创建它。</p><p>插入成功后，<code>insertOne()</code> 返回 <code>InsertOneResult</code> 的一个实例。你可以通过调用 <code>InsertOneResult</code> 实例上的 <code>getInsertedId()</code> 方法来检索所插入文档的 <code>_id</code> 字段等信息。</p><p>如果插入操作失败，驱动程序将引发异常。有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>insertOne()</code> 的 API 文档。</p><p>示例</p><p>下面的代码片段将一个文档插入到 <code>movies</code> 集合中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token class-name">ObjectId</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">InsertOneResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InsertOne</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">InsertOneResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ObjectId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Ski Bloopers&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;genres&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Documentary&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Comedy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Success! Inserted document id: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getInsertedId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to insert due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你运行这个例子时，你应该看到类似于下面的输出，在 value 字段中插入文档的 <code>ObjectId</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Success! Inserted document id: BsonObjectId{value=...}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),qn=n("p",null,[n("strong",null,"提示")],-1),Mn=n("p",null,[n("strong",null,"传统 API")],-1),xn={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Dn=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),Cn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#insertOne(TDocument)",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/bson/org/bson/Document.html",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/InsertOneResult.html",target:"_blank",rel:"noopener noreferrer"},In=e(`<h6 id="插入多个文档" tabindex="-1"><a class="header-anchor" href="#插入多个文档" aria-hidden="true">#</a> 插入多个文档</h6><p>通过调用 <code>MongoCollection</code> 对象上的 <code>insertMany()</code> 方法，可以在单个操作中将多个文档插入到集合中。要插入它们，请将 <code>Document</code> 对象添加到 <code>List</code> 中，并将该 <code>List</code> 作为参数传递给 <code>insertMany()</code>。如果在一个还不存在的集合上调用 <code>insertMany()</code> 方法，服务器将为你创建它。</p><p>插入成功后，<code>insertMany()</code> 返回 <code>InsertManyResult</code> 的一个实例。你可以通过调用 <code>InsertManyResult</code> 实例上的 <code>getInsertedIds()</code> 方法来检索所插入文档的 <code>_id</code> 字段等信息。</p><p>如果插入操作失败，驱动程序将引发异常。有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>insertMany()</code> 的 API 文档。</p><p>示例</p><p>下面的代码片段将多个文档插入到 <code>movies</code> 集合中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">InsertManyResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InsertMany</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> movieList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Short Circuit 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;The Lego Frozen Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">InsertManyResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>movieList<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Inserted document ids: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getInsertedIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to insert due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你运行这个例子时，你应该看到类似于下面的输出，在每个值字段中插入文档的 <code>ObjectId</code> 值：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Inserted document ids: {0=BsonObjectId{value=...}, 1=BsonObjectId{value=...}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),Bn=n("p",null,[n("strong",null,"提示")],-1),An=n("p",null,[n("strong",null,"传统 API")],-1),On={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Rn=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),Pn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#insertMany(java.util.List)",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/bson/org/bson/Document.html",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/InsertManyResult.html",target:"_blank",rel:"noopener noreferrer"},En=e(`<h5 id="更新和替换操作" tabindex="-1"><a class="header-anchor" href="#更新和替换操作" aria-hidden="true">#</a> 更新和替换操作</h5><h6 id="更新单个文档" tabindex="-1"><a class="header-anchor" href="#更新单个文档" aria-hidden="true">#</a> 更新单个文档</h6><p>你可以使用 <code>MongoCollection</code> 对象上的 <code>updateOne()</code> 方法更新单个文档。该方法接受与要更新的文档匹配的过滤器和指示驱动程序如何更改匹配文档的更新语句。<code>updateOne()</code> 方法只更新与过滤器匹配的第一个文档。</p><p>要使用 <code>updateOne()</code> 方法执行更新，必须传递一个查询过滤器和一个更新文档。查询过滤器指定要在哪个文档上执行更新的标准，更新文档提供要对其进行哪些更改的说明。</p><p>为了指定方法的行为，你可以选择将 <code>UpdateOptions</code> 的实例传递给 <code>updateOne()</code> 方法。例如，如果将 <code>UpdateOptions</code> 对象的 <code>upsert</code> 字段设置为 <code>true</code>，则如果没有文档与查询过滤器匹配，则该操作将从查询和更新文档中的字段插入新文档。有关更多信息，请参阅本页底部的 <code>UpdateOptions</code> API文档的链接。</p><p>成功执行后，<code>updateOne()</code> 方法返回 <code>UpdateResult</code> 的一个实例。如果在 <code>UpdateOptions</code> 实例中指定了 <code>upsert(true)</code>，则可以通过调用 <code>getModifiedCount()</code> 方法来检索诸如修改的文档数量之类的信息，或者通过调用 <code>getUpsertedId()</code> 方法来检索 <code>_id</code> 字段的值。</p><p>如果更新操作失败，驱动程序将引发异常。例如，如果你试图在你的更新文档中为不可变字段 <code>_id</code> 设置一个值，该方法会抛出一个 <code>MongoWriteException</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Performing an update on the path &#39;_id&#39; would modify the immutable field &#39;_id&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的更新文档包含违反唯一索引规则的更改，该方法会抛出一个 <code>MongoWriteException</code>，并显示一个错误消息，看起来应该像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>E11000 duplicate key error collection: ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>updateOne()</code> 的 API 文档。</p><p>示例</p><p>在本例中，我们在 <code>sample_mflix</code> 数据库的 <code>movies</code> 集合中更新查询的第一个匹配项。我们对匹配文档执行以下更新：</p><ul><li>将 <code>runtime</code> 的值设置为 <code>99</code></li><li>只有在 <code>Sports</code> 还不存在的情况下，才将其添加到 <code>genres</code> 数组中</li><li>将 <code>lastUpdated</code> 的值设置为当前时间。</li></ul>`,14),Fn=n("code",null,"Updates",-1),Jn=n("code",null,"Updates",-1),Ln={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/builders/updates/",target:"_blank",rel:"noopener noreferrer"},Wn=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">UpdateOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Updates</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">UpdateResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateOne</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Document</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span>  <span class="token string">&quot;Cool Runnings 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> updates <span class="token operator">=</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">combine</span><span class="token punctuation">(</span>
                    <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;runtime&quot;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">addToSet</span><span class="token punctuation">(</span><span class="token string">&quot;genres&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sports&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">currentTimestamp</span><span class="token punctuation">(</span><span class="token string">&quot;lastUpdated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">UpdateOptions</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">upsert</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">UpdateResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> updates<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Modified document count: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getModifiedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Upserted id: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getUpsertedId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// only contains a value when an upsert is performed</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to update due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行示例后，你应该看到如下所示的输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Modified document count: 1
Upserted id: null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者是这样</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Modified document count: 0
Upserted id: BsonObjectId{value=...}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你查询更新后的文档，它看起来应该是这样的：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Document {
  { _id=...,
    plot=...,
    genres=[Adventure, Comedy, Family, Sports],
    runtime=99,
    ...
    lastUpdated=Timestamp{...}
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),Nn=n("p",null,[n("strong",null,"提示")],-1),zn=n("p",null,[n("strong",null,"传统 API")],-1),Kn={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Gn=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),Vn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#updateOne(org.bson.conversions.Bson,java.util.List,com.mongodb.client.model.UpdateOptions)",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateOptions.html",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#combine(org.bson.conversions.Bson...)",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#set(java.lang.String,TItem)",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#addToSet(java.lang.String,TItem)",target:"_blank",rel:"noopener noreferrer"},Zn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#currentTimestamp(java.lang.String)",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/UpdateResult.html",target:"_blank",rel:"noopener noreferrer"},ns=e(`<h6 id="更新多个文档" tabindex="-1"><a class="header-anchor" href="#更新多个文档" aria-hidden="true">#</a> 更新多个文档</h6><p>你可以使用一个 <code>MongoCollection</code> 对象上的 <code>updateMany()</code> 方法更新多个文档。该方法接受与要更新的文档匹配的过滤器和指示驱动程序如何更改匹配文档的更新语句。<code>updateMany()</code> 方法更新集合中与过滤器匹配的所有文档。</p><p>要使用 <code>updateMany()</code> 方法执行更新，必须传递一个查询过滤器和一个更新文档。查询筛选器指定要匹配集合中的哪些文档，更新文档提供对这些文档进行哪些更改的说明。</p><p>你可以选择将 <code>UpdateOptions</code> 的实例传递给 <code>updateMany()</code> 方法，以便修改调用的行为。例如，如果将 <code>UpdateOptions</code> 对象的 <code>upsert</code> 字段设置为 <code>true</code>，并且没有文档与指定的查询筛选器匹配，则该操作将插入一个由来自查询和更新文档的字段组成的新文档。</p><p>成功执行后，<code>updateMany()</code> 方法返回 <code>UpdateResult</code> 的一个实例。你可以通过调用 <code>getModifiedCount()</code> 方法来检索诸如被修改的文档数量之类的信息。如果在 <code>UpdateOptions</code> 对象中指定了 <code>upsert(true)</code>，并且操作的结果是插入，则可以通过调用 <code>UpdateResult</code> 实例上的 <code>getUpsertedId()</code> 方法来检索新文档的 <code>_id</code> 字段。</p><p>如果更新操作失败，驱动程序将引发异常，并且不更新与过滤器匹配的任何文档。例如，如果你试图在更新文档中为不可变字段 <code>_id</code> 设置一个值，<code>updateMany()</code> 方法不会更新任何文档，并抛出一个 <code>MongoWriteException</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Performing an update on the path &#39;_id&#39; would modify the immutable field &#39;_id&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的更新文档包含违反唯一索引规则的更改，该方法会抛出一个 <code>MongoWriteException</code>，并显示一个错误消息，看起来应该像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>E11000 duplicate key error collection: ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>updateMany()</code> 的 API 文档。</p><p>示例</p><p>在本例中，我们在 <code>sample_mflix</code> 数据库的 <code>movies</code> 集合中更新与查询匹配的文档。我们对匹配文件进行以下更新：</p><ul><li>只有在不存在的情况下才将 <code>Frequently Discussed</code> 添加到 <code>genres</code> 数组中，</li><li>将 <code>lastUpdated</code> 的值设置为当前时间。</li></ul>`,13),ss=n("code",null,"Updates",-1),as={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/builders/updates/",target:"_blank",rel:"noopener noreferrer"},ts=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">gt</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Updates</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">UpdateResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateMany</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;num_mflix_comments&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> updates <span class="token operator">=</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">combine</span><span class="token punctuation">(</span>
                    <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">addToSet</span><span class="token punctuation">(</span><span class="token string">&quot;genres&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Frequently Discussed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">currentTimestamp</span><span class="token punctuation">(</span><span class="token string">&quot;lastUpdated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">UpdateResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> updates<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Modified document count: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getModifiedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to update due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行示例后，你应该看到如下所示的输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Modified document count: 53
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你查询更新的文档或多个文档，它们应该看起来像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[
  Document {
    { _id=...,
      plot=...,
      genres=[..., Frequently Discussed, ...],
      ...
      lastUpdated=Timestamp{...}
    }
  },
  ...
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),es=n("p",null,[n("strong",null,"提示")],-1),os=n("p",null,[n("strong",null,"传统 API")],-1),ps={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},cs=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),ls={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#updateMany(org.bson.conversions.Bson,java.util.List,com.mongodb.client.model.UpdateOptions)",target:"_blank",rel:"noopener noreferrer"},is={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateOptions.html",target:"_blank",rel:"noopener noreferrer"},us={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#combine(org.bson.conversions.Bson...)",target:"_blank",rel:"noopener noreferrer"},ds={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#set(java.lang.String,TItem)",target:"_blank",rel:"noopener noreferrer"},rs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#addToSet(java.lang.String,TItem)",target:"_blank",rel:"noopener noreferrer"},ks={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Updates.html#currentTimestamp(java.lang.String)",target:"_blank",rel:"noopener noreferrer"},ms={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/UpdateResult.html",target:"_blank",rel:"noopener noreferrer"},vs=e(`<h6 id="替换单个文档" tabindex="-1"><a class="header-anchor" href="#替换单个文档" aria-hidden="true">#</a> 替换单个文档</h6><p>你可以使用 <code>MongoCollection</code> 对象上的 <code>replaceOne()</code> 方法替换单个文档。此方法从文档中删除所有现有字段和值（<code>_id</code> 字段除外），并用替换文档替换它。</p><p><code>replaceOne()</code> 方法接受一个与要替换的文档匹配的查询过滤器，以及一个替换文档，其中包含要保存在匹配文档的位置上的数据。<code>replaceOne()</code> 方法只替换匹配过滤器的第一个文档。</p><p>你可以选择将 <code>ReplaceOptions</code> 的实例传递给 <code>replaceOne()</code> 方法，以便指定该方法的行为。例如，如果将 <code>ReplaceOptions</code> 对象的 <code>upsert</code> 字段设置为 <code>true</code>，则如果没有文档与查询过滤器匹配，则该操作将从替换文档中的字段插入新文档。有关更多信息，请参阅本页底部的 <code>ReplaceOptions</code> API 文档的链接。</p><p>成功执行后，<code>replaceOne()</code> 方法返回 <code>UpdateResult</code> 的一个实例。你可以通过调用 <code>getModifiedCount()</code> 方法来检索诸如被修改的文档数量之类的信息。如果你在 <code>ReplaceOptions</code> 实例中设置了 <code>upsert(true)</code>，并且操作导致了新文档的插入，那么你还可以通过调用 <code>getUpsertedId()</code> 方法来检索文档的 <code>_id</code> 字段的值。</p><p>如果你的替换操作失败，驱动程序将引发异常。例如，如果你试图在你的替换文档中指定一个与原始文档不同的不可变字段 <code>_id</code> 的值，该方法会抛出一个 <code>MongoWriteException</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>After applying the update, the (immutable) field &#39;_id&#39; was found to have been altered to _id: ObjectId(&#39;...)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的替换文档包含违反唯一索引规则的更改，该方法会抛出一个 <code>MongoWriteException</code>，并显示一条错误消息，看起来应该像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>E11000 duplicate key error collection: ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>replaceOne()</code> 的 API 文档。</p><p>示例</p><p>在本例中，我们用替换文档替换 <code>sample_mflix</code> 数据库 <code>movies</code> 集合中查询过滤器的第一个匹配项。除 <code>_id</code> 字段外的所有字段都从原始文档中删除，并由替换文档替换。</p><p>在 <code>replaceOne()</code> 操作运行之前，原始文档包含几个描述电影的字段。操作运行后，生成的文档只包含替换文档指定的字段（<code>title</code> 和 <code>fullplot</code>）和 <code>_id</code> 字段。</p><p>下面的代码片段使用了以下对象和方法：</p><ul><li>传递给 <code>replaceOne()</code> 方法的查询筛选器。<code>eq</code> 过滤器只匹配电影与标题完全匹配的文本 “<code>Music of the Heart</code>”。</li><li>替换文档，其中包含替换匹配文档（如果存在）的文档。</li><li>一个 <code>ReplaceOptions</code> 对象，<code>upsert</code> 选项设置为 <code>true</code>。此选项指定，如果查询过滤器不匹配任何文档，则该方法应插入替换文档中包含的数据。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">eq</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">ReplaceOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">UpdateResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReplaceOne</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Music of the Heart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Document</span> replaceDocument <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;50 Violins&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;fullplot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; A dramatization of the true story of Roberta Guaspari who co-founded the Opus 118 Harlem School of Music&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">ReplaceOptions</span> opts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReplaceOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">upsert</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">UpdateResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">replaceOne</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> replaceDocument<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Modified document count: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getModifiedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Upserted id: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getUpsertedId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// only contains a value when an upsert is performed</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to replace due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行示例后，你应该看到如下所示的输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Modified document count: 1
Upserted id: null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者是这样</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Modified document count: 0
Upserted id: BsonObjectId{value=...}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你查询被替换的文档，它看起来应该是这样的：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Document {
  { _id=...,
    title=50 Violins,
    fullplot=A dramatization of the true story of Roberta Guaspari who co-founded the Opus 118 Harlem School of Music
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),gs=n("p",null,[n("strong",null,"提示")],-1),bs=n("p",null,[n("strong",null,"传统 API")],-1),hs={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},fs=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),_s={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#replaceOne(org.bson.conversions.Bson,TDocument)",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/ReplaceOptions.html?is-external=true",target:"_blank",rel:"noopener noreferrer"},ws={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/UpdateResult.html",target:"_blank",rel:"noopener noreferrer"},qs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Filters.html#eq(java.lang.String,TItem)",target:"_blank",rel:"noopener noreferrer"},Ms=e(`<h5 id="删除操作" tabindex="-1"><a class="header-anchor" href="#删除操作" aria-hidden="true">#</a> 删除操作</h5><h6 id="删除单个文档" tabindex="-1"><a class="header-anchor" href="#删除单个文档" aria-hidden="true">#</a> 删除单个文档</h6><p>你可以使用 <code>MongoCollection</code> 对象上的 <code>deleteOne()</code> 方法从集合中删除单个文档。该方法接受与要删除的文档匹配的查询筛选器。如果不指定过滤器，MongoDB 将匹配集合中的第一个文档。<code>deleteOne()</code> 方法只删除第一个匹配的文档。</p><p>此方法返回 <code>DeleteResult</code> 的一个实例，该实例包含的信息包括由于操作而删除的文档数量。</p><p>如果删除操作失败，驱动程序将引发异常。有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>deleteOne()</code> 的 API 文档。</p><p>示例</p><p>下面的代码片段从 <code>sample_mflix</code> 数据库的 <code>movies</code> 集合中删除一个文档。该示例使用 <code>eq()</code> 过滤器来匹配 <code>title</code> 与文本 “<code>The Garbage bucket Kids Movie</code>” 完全匹配的电影。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">eq</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">DeleteResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteOne</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;The Garbage Pail Kids Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">DeleteResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted document count: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to delete due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你运行这个例子时，如果你在调用 <code>deleteOne()</code> 中传递的查询过滤器匹配了一个文档并删除了它，你应该会看到类似这样的输出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Deleted document count: 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的查询过滤器不匹配集合中的文档，则调用 <code>deleteOne()</code> 不删除文档并返回以下内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Deleted document count: 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),xs=n("p",null,[n("strong",null,"提示")],-1),Ds=n("p",null,[n("strong",null,"传统 API")],-1),Cs={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},js=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),Ss={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#deleteOne(org.bson.conversions.Bson)",target:"_blank",rel:"noopener noreferrer"},Is={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/DeleteResult.html",target:"_blank",rel:"noopener noreferrer"},Bs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/Filters.html#eq(java.lang.String,TItem)",target:"_blank",rel:"noopener noreferrer"},As=e(`<h6 id="删除多个文档" tabindex="-1"><a class="header-anchor" href="#删除多个文档" aria-hidden="true">#</a> 删除多个文档</h6><p>通过调用一个 <code>MongoCollection</code> 对象上的 <code>deleteMany()</code> 方法，你可以在一个操作中从一个集合中删除多个文档。</p><p>要指定要删除哪些文档，请传递与要删除的文档匹配的查询筛选器。如果你提供一个空文档，MongoDB 将匹配集合中的所有文档并删除它们。虽然可以使用 <code>deleteMany()</code> 删除集合中的所有文档，但考虑使用 <code>drop()</code> 方法以获得更好的性能。</p><p>成功删除后，此方法返回 <code>DeleteResult</code> 的一个实例。你可以通过调用 <code>DeleteResult</code> 实例上的 <code>getDeletedCount()</code> 方法来检索信息，例如已删除的文档数量。</p><p>如果删除操作失败，驱动程序将引发异常。有关在特定条件下引发的异常类型的更多信息，请参阅本页底部链接的 <code>deleteMany()</code> 的 API 文档。</p><p>示例</p><p>下面的代码片段从 <code>sample_mflix</code> 数据库中的 <code>movies</code> 集合中删除多个文档。</p><p>传递给 <code>deleteMany()</code> 方法的查询过滤器匹配 <code>imdb</code> 子文档中 <code>rating</code> 小于 <strong>1.9</strong> 的所有电影文档。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">lt</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">DeleteResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteMany</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token function">lt</span><span class="token punctuation">(</span><span class="token string">&quot;imdb.rating&quot;</span><span class="token punctuation">,</span> <span class="token number">1.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">DeleteResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted document count: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to delete due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在运行示例时，你应该看到报告在调用 <code>deleteMany()</code> 时删除的文档数量的输出。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Deleted document count: 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),Os=n("p",null,[n("strong",null,"提示")],-1),Rs=n("p",null,[n("strong",null,"传统 API")],-1),Ps={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Us=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下 API 文档：",-1),Ts={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#deleteMany(org.bson.conversions.Bson)",target:"_blank",rel:"noopener noreferrer"},Es={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/result/DeleteResult.html",target:"_blank",rel:"noopener noreferrer"},Fs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#drop()",target:"_blank",rel:"noopener noreferrer"},Js=e(`<h5 id="执行批量操作" tabindex="-1"><a class="header-anchor" href="#执行批量操作" aria-hidden="true">#</a> 执行批量操作</h5><p><code>bulkWrite()</code> 方法对<em>单个集合</em>执行批量写操作。这种方法减少了从应用程序到 MongoDB 实例的网络往返次数，从而提高了应用程序的性能。由于你只有在所有操作返回后才会收到成功状态，因此我们建议你在满足用例需求的情况下使用此状态。</p><p>在 <code>bulkWrite()</code> 中可以指定以下一种或多种写操作:</p><ul><li><code>insertOne</code></li><li><code>updateOne</code></li><li><code>updateMany</code></li><li><code>deleteOne</code></li><li><code>deleteMany</code></li><li><code>replaceOne</code></li></ul><p><code>bulkWrite()</code> 方法接受以下参数：</p><ul><li>实现 <code>WriteModel</code> 的对象 <code>List</code>：实现 <code>WriteModel</code> 的类对应于前面提到的写操作。例如，<code>InsertOneModel</code> 类封装了 <code>insertOne</code> 写操作。有关每个类的更多信息，请参阅本页底部的 API 文档链接。</li><li><code>BulkWriteOptions</code>：可选对象，指定设置，例如是否确保你的 MongoDB 实例订购你的写操作。</li></ul><blockquote><p><strong>注意</strong></p><p>可重试写操作在 MongoDB 服务器 3.6 或更高版本的批量写操作中运行，除非它们包含一个或多个 <code>UpdateManyModel</code> 或 <code>DeleteManyModel</code> 实例。</p></blockquote><blockquote><p><strong>提示</strong></p><p>默认情况下，MongoDB 按照指定的顺序（即连续）逐个执行批量写操作。在有序大容量写过程中，如果某个操作在处理过程中出现错误，MongoDB 会直接返回，不处理列表中剩余的操作。相反，当你将 <code>ordered</code> 设置为 <code>false</code> 时，如果发生错误，MongoDB 将继续处理列表中剩余的写操作。无序操作理论上更快，因为 MongoDB 可以并行执行它们，但你应该只在写操作不依赖于顺序的情况下使用它们。</p></blockquote><p><code>bulkWrite()</code> 方法返回一个 <code>BulkWriteResult</code> 对象，该对象包含写操作结果的信息，包括插入、修改和删除的文档数量。</p><p>如果你的一个或多个操作试图设置一个违反集合上唯一索引的值，则会引发一个异常，看起来应该像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>The bulk write operation failed due to an error: Bulk write operation error on server &lt;hostname&gt;. Write errors: [BulkWriteError{index=0, code=11000, message=&#39;E11000 duplicate key error collection: ... }].
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>类似地，如果你尝试对使用模式验证的集合执行批量写操作，并且你的一个或多个写操作提供了意外的格式，则可能会遇到异常。</p><p>示例</p><p>下面的代码示例对 <code>sample_mflix</code> 数据库中的 <code>movies</code> 集合执行有序的批量写操作。对 <code>bulkWrite()</code> 的示例调用包括 <code>InsertOneModel</code>、<code>UpdateOneModel</code> 和 <code>DeleteOneModel</code> 的示例。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>bulk<span class="token punctuation">.</span></span><span class="token class-name">BulkWriteResult</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">DeleteOneModel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">InsertOneModel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">ReplaceOneModel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">UpdateOneModel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">UpdateOptions</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BulkWrite</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">BulkWriteResult</span> result <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">bulkWrite</span><span class="token punctuation">(</span>
                        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                                <span class="token keyword">new</span> <span class="token class-name">InsertOneModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">InsertOneModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Another Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">InsertOneModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Yet Another Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">UpdateOneModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;$set&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;An Old Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token keyword">new</span> <span class="token class-name">UpdateOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">upsert</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">DeleteOneModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Yet Another Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">ReplaceOneModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Yet Another Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;The Other Sample Movie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;runtime&quot;</span><span class="token punctuation">,</span>  <span class="token string">&quot;42&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Result statistics:&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;\\ninserted: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getInsertedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">&quot;\\nupdated: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getModifiedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">&quot;\\ndeleted: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;The bulk write operation failed due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出应该看起来像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Result statistics:
inserted: 3
updated: 2
deleted: 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),Ls=n("p",null,[n("strong",null,"提示")],-1),Ws=n("p",null,[n("strong",null,"传统 API")],-1),Ns={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},zs=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下参考资料：",-1),Ks={href:"https://www.mongodb.com/docs/manual/core/index-unique/",target:"_blank",rel:"noopener noreferrer"},Gs={href:"https://www.mongodb.com/docs/manual/core/schema-validation/",target:"_blank",rel:"noopener noreferrer"},Vs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#bulkWrite(java.util.List,com.mongodb.client.model.BulkWriteOptions)",target:"_blank",rel:"noopener noreferrer"},Hs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/BulkWriteOptions.html",target:"_blank",rel:"noopener noreferrer"},Qs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/bulk/BulkWriteResult.html",target:"_blank",rel:"noopener noreferrer"},Ys={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/InsertOneModel.html",target:"_blank",rel:"noopener noreferrer"},$s={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateOneModel.html",target:"_blank",rel:"noopener noreferrer"},Zs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/UpdateManyModel.html",target:"_blank",rel:"noopener noreferrer"},Xs={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/DeleteOneModel.html",target:"_blank",rel:"noopener noreferrer"},na={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/DeleteManyModel.html",target:"_blank",rel:"noopener noreferrer"},sa={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/ReplaceOneModel.html",target:"_blank",rel:"noopener noreferrer"},aa=e(`<h5 id="监视数据的更改" tabindex="-1"><a class="header-anchor" href="#监视数据的更改" aria-hidden="true">#</a> 监视数据的更改</h5><p>你可以通过打开更改流来跟踪 MongoDB 中数据的更改，例如对集合、数据库或部署的更改。<strong>更改流</strong>允许应用程序监视数据的更改并对其做出反应。</p><p>变更流在发生变更时返回<strong>变更事件</strong>文档。更改事件包含有关已更新数据的信息。</p><p>通过在 <code>MongoCollection</code>、<code>MongoDatabase</code> 或 <code>MongoClient</code> 对象上调用 <code>watch()</code> 方法打开一个变更流，如下面的代码示例所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ChangeStreamIterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> changeStream <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>watch()</code> 方法可选地接受一个由 <code>stage</code> 数组组成的<strong>聚合管道</strong>作为第一个参数，以过滤和转换更改事件输出，如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bson</span><span class="token punctuation">&gt;</span></span> pipeline <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                        <span class="token class-name">Aggregates</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>
                           <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token string">&quot;fullDocument.runtime&quot;</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ChangeStreamIterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> changeStream <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>pipeline<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>watch()</code> 方法返回一个 <code>ChangeStreamIterable</code> 的实例，这个类提供了几个方法来访问、组织和遍历结果。<code>ChangeStreamIterable</code> 还继承了其父类 <code>MongoIterable</code> 的方法，后者实现了核心 Java 接口 <code>Iterable</code>。</p><p>你可以在 <code>ChangeStreamIterable</code> 上调用 <code>forEach()</code> 来处理发生的事件，或者你可以使用 <code>iterator()</code> 方法，该方法返回一个 <code>MongoCursor</code> 实例，你可以使用它来遍历结果。</p><p>你可以调用 <code>MongoCursor</code> 上的方法，例如 <code>hasNext()</code> 来检查是否存在额外的结果，<code>next()</code> 来返回集合中的下一个文档，或者 <code>tryNext()</code> 来立即返回更改流中的下一个可用元素或 <code>null</code>。与其他查询返回的 <code>MongoCursor</code> 不同，与更改流关联的 <code>MongoCursor</code> 将等待更改事件到达，然后再从 <code>next()</code> 返回结果。因此，使用更改流的 <code>MongoCursor</code> 调用 <code>next()</code> 永远不会抛出 <code>java.util.NoSuchElementException</code>。</p><p>要配置处理从变更流返回的文档的选项，请使用 <code>watch()</code> 返回的 <code>ChangeStreamIterable</code> 对象的成员方法。有关可用方法的更多详细信息，请参阅本示例底部的 <code>ChangeStreamIterable</code> API 文档的链接。</p><h6 id="如何用回调处理变更流事件" tabindex="-1"><a class="header-anchor" href="#如何用回调处理变更流事件" aria-hidden="true">#</a> 如何用回调处理变更流事件</h6><p>要从变更流中捕获事件，请使用回调函数调用 <code>forEach()</code> 方法，如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>changeStream<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Change observed: &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>回调函数在发出更改事件时触发。你可以在回调中指定逻辑，以便在收到事件文档时对其进行处理。</p><blockquote><p><strong>重要</strong></p><p><strong>forEach() 阻塞当前线程</strong></p><p>只要对应的更改流监听事件，调用 <code>forEach()</code> 就会阻塞当前线程。如果你的程序需要继续执行其他逻辑，例如处理请求或响应用户输入，请考虑在单独的线程中创建和侦听更改流。</p></blockquote><blockquote><p><strong>注意</strong></p><p>对于更新操作更改事件，更改流默认情况下只返回已修改的字段，而不是整个已更新的文档。你可以通过调用 <code>ChangeStreamIterable</code> 对象的 <code>fullDocument()</code> 成员方法，将更改流配置为返回文档的最新版本。<code>FullDocument.UPDATE_LOOKUP</code> 如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ChangeStreamIterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> changeStream <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fullDocument</span><span class="token punctuation">(</span><span class="token class-name">FullDocument</span><span class="token punctuation">.</span><span class="token constant">UPDATE_LOOKUP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h6 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h6><p>下面的示例使用两个独立的应用程序来演示如何使用更改流侦听更改：</p><ul><li>第一个应用程序名为 <code>Watch</code>，它在 <code>sample_mflix</code> 数据库中的 <code>movies</code> 集合上打开一个更改流。<code>Watch</code> 使用聚合管道根据 <code>operationType</code> 过滤更改，以便它只接收插入和更新事件（删除事件因遗漏而被排除在外）。<code>Watch</code> 使用回调来接收和打印在集合上发生的过滤后的更改事件。</li><li>第二个应用程序名为 <code>WatchCompanion</code>，它将一个文档插入到 <code>sample_mflix</code> 数据库中的 <code>movies</code> 集合中。接下来，<code>WatchCompanion</code> 用一个新的字段值更新文档。最后，<code>WatchCompanion</code> 删除文档。</li></ul><p>首先，运行 <code>Watch</code> 以打开集合上的更改流，并使用 <code>forEach()</code> 方法在更改流上定义一个回调。在 <code>Watch</code> 运行时，运行 <code>WatchCompanion</code>，通过对集合执行更改来生成更改事件。</p><p><code>Watch</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ChangeStreamIterable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span>changestream<span class="token punctuation">.</span></span><span class="token class-name">FullDocument</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Watch</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bson</span><span class="token punctuation">&gt;</span></span> pipeline <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                <span class="token class-name">Aggregates</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>
                        <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token string">&quot;operationType&quot;</span><span class="token punctuation">,</span>
                                <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;insert&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ChangeStreamIterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> changeStream <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>pipeline<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fullDocument</span><span class="token punctuation">(</span><span class="token class-name">FullDocument</span><span class="token punctuation">.</span><span class="token constant">UPDATE_LOOKUP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// variables referenced in a lambda must be final; final array gives us a mutable integer</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numberOfEvents <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            changeStream<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>event <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received a change to the collection: &quot;</span> <span class="token operator">+</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>numberOfEvents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>WatchCompanion</code>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>types<span class="token punctuation">.</span></span><span class="token class-name">ObjectId</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>result<span class="token punctuation">.</span></span><span class="token class-name">InsertOneResult</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WatchCompanion</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">InsertOneResult</span> insertResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sample movie document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Success! Inserted document id: &quot;</span> <span class="token operator">+</span> insertResult<span class="token punctuation">.</span><span class="token function">getInsertedId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">UpdateResult</span> updateResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sample movie document&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;field2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sample movie document update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Updated &quot;</span> <span class="token operator">+</span> updateResult<span class="token punctuation">.</span><span class="token function">getModifiedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; document.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">DeleteResult</span> deleteResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;field2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sample movie document update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted &quot;</span> <span class="token operator">+</span> deleteResult<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; document.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to insert, update, or replace due to an error: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果按顺序运行上述应用程序，你应该看到 <code>Watch</code> 应用程序的输出类似于以下内容。只有 <code>insert</code> 和 <code>update</code> 操作被打印出来，因为聚合管道过滤掉了删除操作：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Received a change to the collection: ChangeStreamDocument{
  operationType=OperationType{value=&#39;insert&#39;},
  resumeToken={&quot;_data&quot;: &quot;825E...&quot;},
  namespace=sample_mflix.movies,
  destinationNamespace=null,
  fullDocument=Document{{_id=5ec3..., test=sample movie document}},
  documentKey={&quot;_id&quot;: {&quot;$oid&quot;: &quot;5ec3...&quot;}},
  clusterTime=Timestamp{...},
  updateDescription=null,
  txnNumber=null,
  lsid=null,
  wallTime=BsonDateTime{value=1657...}
}
Received a change to the collection: ChangeStreamDocument{
  operationType=OperationType{value=&#39;update&#39;},
  resumeToken={&quot;_data&quot;: &quot;825E...&quot;},
  namespace=sample_mflix.movies,
  destinationNamespace=null,
  fullDocument=Document{{_id=5ec3..., test=sample movie document, field2=sample movie document update}},
  documentKey={&quot;_id&quot;: {&quot;$oid&quot;: &quot;5ec3...&quot;}},
  clusterTime=Timestamp{...},
  updateDescription=UpdateDescription{removedFields=[], updatedFields={&quot;field2&quot;: &quot;sample movie document update&quot;}},
  txnNumber=null,
  lsid=null,
  wallTime=BsonDateTime{value=1657...}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你还应该看到 <code>WatchCompanion</code> 应用程序的输出类似于以下内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Success! Inserted document id: BsonObjectId{value=5ec3...}
Updated 1 document.
Deleted 1 document.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),ta=n("p",null,[n("strong",null,"提示")],-1),ea=n("p",null,[n("strong",null,"传统 API")],-1),oa={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},pa=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下参考资料：",-1),ca={href:"https://www.mongodb.com/docs/manual/changeStreams/",target:"_blank",rel:"noopener noreferrer"},la={href:"https://www.mongodb.com/docs/manual/reference/change-events/",target:"_blank",rel:"noopener noreferrer"},ia={href:"https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://www.mongodb.com/docs/manual/changeStreams/#modify-change-stream-output",target:"_blank",rel:"noopener noreferrer"},da={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/ChangeStreamIterable.html",target:"_blank",rel:"noopener noreferrer"},ra={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#watch()",target:"_blank",rel:"noopener noreferrer"},ka={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoDatabase.html#watch()",target:"_blank",rel:"noopener noreferrer"},ma={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoClient.html#watch()",target:"_blank",rel:"noopener noreferrer"},va=e('<h5 id="文档计数" tabindex="-1"><a class="header-anchor" href="#文档计数" aria-hidden="true">#</a> 文档计数</h5><p>在 <code>MongoCollection</code> 类中有两个实例方法，你可以调用它们来计算集合中的文档数量：</p><ul><li><code>countDocuments()</code> 返回集合中与指定查询匹配的文档数。如果指定空查询筛选器，该方法将返回集合中文档的总数。</li><li><code>estimatedDocumentCount()</code> 根据集合元数据返回集合中文档数量的<strong>估计值</strong>。使用此方法时，不能指定查询。</li></ul><p><code>estimatedDocumentCount()</code> 方法的返回速度比 <code>countDocuments()</code> 方法快，因为它使用集合的元数据，而不是扫描整个集合。<code>countDocuments()</code> 方法返回文档数量的<strong>精确</strong>计数，并支持指定过滤器。</p>',4),ga=n("p",null,[n("strong",null,"提示")],-1),ba=n("code",null,"countDocuments()",-1),ha={href:"https://www.mongodb.com/docs/manual/reference/method/cursor.hint/",target:"_blank",rel:"noopener noreferrer"},fa=n("code",null,"_id",-1),_a=n("code",null,"countDocuments()",-1),ya=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">CountOptions</span> opts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hintString</span><span class="token punctuation">(</span><span class="token string">&quot;_id_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> numDocuments <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">countDocuments</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BsonDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),wa=e(`<p>当你调用 <code>countDocuments()</code> 方法时，你可以选择传递一个查询筛选器参数。当调用 <code>estimatedDocumentCount()</code> 时，不能传递任何参数。</p><blockquote><p><strong>重要</strong></p><p><strong>稳定API V1和MongoDB服务器版本</strong></p><p>如果你使用的是带有 “strict” 选项的稳定 API <code>V1</code> 和包含 5.0.0 和 5.0.8 之间的 MongoDB 服务器版本，则由于服务器错误，对 <code>estimatedDocumentCount()</code> 的方法调用可能会出错。</p><p>升级到 MongoDB Server 5.0.9 或将稳定 API “strict” 选项设置为 <code>false</code> 以避免此问题。</p></blockquote><p>你也可以给这些方法传递一个可选参数来指定调用的行为：</p><table><thead><tr><th>方法</th><th>可选参数类</th><th>描述</th></tr></thead><tbody><tr><td><code>countDocuments()</code></td><td><code>CountOptions</code></td><td>可以使用 <code>limit()</code> 方法指定要统计的最大文档数，也可以使用 <code>maxTime()</code> 方法指定最大执行时间。</td></tr><tr><td><code>estimatedDocumentCount()</code></td><td><code>EstimatedDocumentCountOptions</code></td><td>你可以使用 <code>maxTime()</code> 方法指定最大执行时间。</td></tr></tbody></table><p>这两种方法都以原生的 <code>long</code> 的形式返回匹配的文档数。</p><h6 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1" aria-hidden="true">#</a> 示例</h6><p>下面的示例估计 <code>sample_mflix</code> 数据库中 <code>movies</code> 集合中的文档数量，然后返回 <code>movies</code> 集合中文档数量的准确计数，<code>Canada</code> 位于 <code>countries</code> 字段中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token static">eq</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CountDocuments</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;countries&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Spain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">long</span> estimatedCount <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">estimatedDocumentCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Estimated number of documents in the movies collection: &quot;</span> <span class="token operator">+</span> estimatedCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">long</span> matchingCount <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">countDocuments</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Number of movies from Spain: &quot;</span> <span class="token operator">+</span> matchingCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;An error occurred: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你运行前面的示例代码，你应该看到类似这样的输出（确切的数字可能会根据你的数据而变化）：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Estimated number of documents in the movies collection: 23541
Number of movies from Spain: 755
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),qa=n("p",null,[n("strong",null,"提示")],-1),Ma=n("p",null,[n("strong",null,"传统 API")],-1),xa={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Da=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下参考 API 文档：",-1),Ca={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#countDocuments()",target:"_blank",rel:"noopener noreferrer"},ja={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#estimatedDocumentCount()",target:"_blank",rel:"noopener noreferrer"},Sa={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/CountOptions.html",target:"_blank",rel:"noopener noreferrer"},Ia={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/client/model/EstimatedDocumentCountOptions.html",target:"_blank",rel:"noopener noreferrer"},Ba=e(`<h5 id="检索字段的不同值" tabindex="-1"><a class="header-anchor" href="#检索字段的不同值" aria-hidden="true">#</a> 检索字段的不同值</h5><p>通过调用 <code>MongoCollection</code> 对象上的 <code>distinct()</code> 方法，可以检索跨集合的字段的不同值列表。传递文档字段名作为第一个参数，传递你想要转换结果的类作为第二个参数，如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>collection<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&quot;countries&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以使用<strong>点表示法</strong>指定文档上的字段或<strong>嵌入文档</strong>中的字段。下面的方法调用返回 <code>awards</code> 嵌入文档中 <code>wins</code> 字段的每个不同值：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>collection<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&quot;awards.wins&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你可以选择传递一个查询过滤器的方法来限制文档的集合，从你的 MongoDB 实例检索不同的值如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>collection<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;languages&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;French&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>distinct()</code> 方法返回一个实现了 <code>DistinctIterable</code> 接口的对象。该接口包含访问、组织和遍历结果的方法。它还继承了父接口 <code>MongoIterable</code> 的方法，例如返回第一个结果的 <code>first()</code> 和返回一个 <code>MongoCursor</code> 实例的 <code>cursor()</code>。</p><h6 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2" aria-hidden="true">#</a> 示例</h6><p>下面的代码片段从 <code>movies</code> 集合中检索 <code>year</code> 文档字段的不同值列表。它使用一个查询过滤器来匹配包含 “Carl Franklin” 作为 <code>directors</code> 数组中的值之一的电影。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">DistinctIterable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoCursor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">Filters</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Distinct</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;movies&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">DistinctIterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> docs <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&quot;year&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;directors&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Carl Franklin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">MongoCursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> docs<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">while</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;An error occurred: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当你运行这个例子时，你应该看到输出，报告了卡尔·富兰克林作为导演的所有电影的每个不同的年份，它应该看起来像这样：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1992
1995
1998
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),Aa=n("p",null,[n("strong",null,"提示")],-1),Oa=n("p",null,[n("strong",null,"传统 API")],-1),Ra={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Pa=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下资料：",-1),Ua={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#distinct(java.lang.String,java.lang.Class)",target:"_blank",rel:"noopener noreferrer"},Ta={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/DistinctIterable.html",target:"_blank",rel:"noopener noreferrer"},Ea={href:"https://www.mongodb.com/docs/manual/core/document/#embedded-documents",target:"_blank",rel:"noopener noreferrer"},Fa={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoIterable.html",target:"_blank",rel:"noopener noreferrer"},Ja=n("h5",{id:"执行命令",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#执行命令","aria-hidden":"true"},"#"),s(" 执行命令")],-1),La=n("p",null,[s("你可以使用 "),n("code",null,"MongoDatabase.runCommand()"),s(" 方法运行所有原始数据库操作。原始数据库操作是可以直接在 MongoDB Server 命令行上执行的命令。这些命令包括管理和诊断任务，例如获取服务器状态或初始化副本集。在一个 "),n("code",null,"MongoDatabase"),s(" 实例上用一个 "),n("code",null,"Bson"),s(" 命令对象调用 "),n("code",null,"runCommand()"),s(" 方法来运行原始数据库操作。")],-1),Wa=n("p",null,[n("strong",null,"提示")],-1),Na={href:"https://www.mongodb.com/docs/mongodb-shell/",target:"_blank",rel:"noopener noreferrer"},za=e(`<p><code>runCommand()</code> 方法接受 <code>Bson</code> 对象形式的命令。默认情况下，<code>runCommand</code> 返回一个 <code>org.bson.Document</code> 类型的对象，其中包含数据库命令的输出。你可以为 <code>runCommand()</code> 指定返回类型，作为第二个可选参数。</p><h6 id="示例-3" tabindex="-1"><a class="header-anchor" href="#示例-3" aria-hidden="true">#</a> 示例</h6><p>在下面的示例代码中，我们发送 <code>dbStats</code> 命令来请求来自特定 MongoDB 数据库的统计信息。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">usage<span class="token punctuation">.</span>examples</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">BsonDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">BsonInt64</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">ConnectionString</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoClientSettings</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token class-name">MongoException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RunCommand</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the uri string with your MongoDB deployment&#39;s connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string uri&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_mflix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Bson</span> command <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BsonDocument</span><span class="token punctuation">(</span><span class="token string">&quot;dbStats&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BsonInt64</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Document</span> commandResult <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">runCommand</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;dbStats: &quot;</span> <span class="token operator">+</span> commandResult<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;An error occurred: &quot;</span> <span class="token operator">+</span> me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行上述命令后，输出信息如下所示：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dbStats: {&quot;db&quot;: &quot;sample_mflix&quot;, &quot;collections&quot;: 5, &quot;views&quot;: 0, &quot;objects&quot;: 75595, &quot;avgObjSize&quot;: 692.1003770090614, &quot;dataSize&quot;: 52319328, &quot;storageSize&quot;: 29831168, &quot;numExtents&quot;: 0, &quot;indexes&quot;: 9, &quot;indexSize&quot;: 14430208, &quot;fileSize&quot;: 0, &quot;nsSizeMB&quot;: 0, &quot;ok&quot;: 1}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),Ka=n("p",null,[n("strong",null,"提示")],-1),Ga=n("p",null,[n("strong",null,"传统 API")],-1),Va={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-faq-legacy-connection",target:"_blank",rel:"noopener noreferrer"},Ha=n("p",null,"有关本页中提到的类和方法的其他信息，请参阅以下资料：",-1),Qa={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-sync/com/mongodb/client/MongoDatabase.html#runCommand(org.bson.conversions.Bson)",target:"_blank",rel:"noopener noreferrer"},Ya={href:"https://www.mongodb.com/docs/manual/reference/command/",target:"_blank",rel:"noopener noreferrer"},$a={href:"https://www.mongodb.com/docs/manual/reference/command/dbStats/",target:"_blank",rel:"noopener noreferrer"},Za=e('<h4 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识</h4><h5 id="连接指南" tabindex="-1"><a class="header-anchor" href="#连接指南" aria-hidden="true">#</a> 连接指南</h5><h6 id="连接到-mongodb" tabindex="-1"><a class="header-anchor" href="#连接到-mongodb" aria-hidden="true">#</a> 连接到 MongoDB</h6><p>在本指南中，你可以学习如何使用 Java 驱动程序连接到 MongoDB 实例或副本集。</p>',4),Xa={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/connect/#std-label-connect-atlas-java-driver",target:"_blank",rel:"noopener noreferrer"},nt=n("code",null,"MongoClient",-1),st=n("p",null,"MongoClient",-1),at=n("p",null,[s("你可以使用 "),n("code",null,"MongoClient"),s(" 类连接到 MongoDB 并与之通信。")],-1),tt=n("p",null,[s("使用 "),n("code",null,"MongoClients.create()"),s(" 方法构造一个 "),n("code",null,"MongoClient"),s("。")],-1),et=n("p",null,[n("strong",null,"重要")],-1),ot=n("p",null,[n("strong",null,"客户端复用")],-1),pt=n("code",null,"MongoClient",-1),ct=n("code",null,"MongoClient",-1),lt={href:"https://www.mongodb.com/docs/drivers/java/sync/current/faq/#std-label-java-faq-connection-pool",target:"_blank",rel:"noopener noreferrer"},it=n("p",null,[s("所有资源使用限制（例如最大连接数）都适用于单个 "),n("code",null,"MongoClient"),s(" 实例。")],-1),ut=n("code",null,"MongoClient",-1),dt={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/mongoclientsettings/#std-label-specify-mongoclient-settings",target:"_blank",rel:"noopener noreferrer"},rt=n("code",null,"MongoClient",-1),kt=n("blockquote",null,[n("p",null,[n("strong",null,"提示")]),n("p",null,[s("当一个实例不再需要时，总是调用 "),n("code",null,"MongoClient.close()"),s(" 来清理资源。")])],-1),mt=n("p",null,"连接 URI",-1),vt=n("p",null,[n("strong",null,"连接 URI"),s(" 提供了一组指令，驱动程序使用这些指令连接到 MongoDB 部署。它指示驱动程序应该如何连接到 MongoDB 以及它在连接时应该如何表现。下图解释了示例连接 URI 的每个部分：")],-1),gt=n("figure",null,[n("img",{src:d,alt:"MongoDBConnectURI",tabindex:"0",loading:"lazy"}),n("figcaption",null,"MongoDBConnectURI")],-1),bt={href:"https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-connections-standard-connection-string-format",target:"_blank",rel:"noopener noreferrer"},ht=n("code",null,"mongodb",-1),ft={href:"https://www.mongodb.com/docs/manual/reference/connection-string/#dns-seed-list-connection-format",target:"_blank",rel:"noopener noreferrer"},_t=n("code",null,"mongodb+srv",-1),yt=n("p",null,[n("strong",null,"注意")],-1),wt={href:"https://www.mongodb.com/docs/atlas/driver-connection/?jmp=docs_driver_java",target:"_blank",rel:"noopener noreferrer"},qt=n("p",null,[s("如果使用基于密码的身份验证机制，连接 URI 的下一部分包含你的凭据。将 "),n("code",null,"user"),s(" 的值替换为你的用户名，并将 "),n("code",null,"pass"),s(" 替换为你的密码。如果你的身份验证机制不需要凭据，则省略连接 URI 的这一部分。")],-1),Mt=n("p",null,[s("连接 URI 的下一部分指定主机名或 IP 地址，后面是 MongoDB 实例的端口。在示例中，"),n("code",null,"sample.host"),s(" 表示主机名，"),n("code",null,"27017"),s(" 是端口号。替换这些值以引用你的 MongoDB 实例。")],-1),xt=n("code",null,"maxPoolSize=20",-1),Dt=n("code",null,"w=majority",-1),Ct={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/connection-options/#std-label-connection-options",target:"_blank",rel:"noopener noreferrer"},jt=e("<p>Atlas 连接示例</p><p>要连接到 Atlas 上的 MongoDB 部署，需要创建一个客户端。你可以通过向 <code>MongoClients.create()</code> 方法传递一个 <code>MongoClientSettings</code> 对象来创建一个使用连接字符串和其他客户端选项的客户端。</p><p>要实例化一个 <code>MongoClientSettings</code> 对象，使用 builder 方法指定连接字符串和任何其他客户端选项，然后调用 <code>build()</code> 方法。将 <code>applyConnectionString()</code> 方法链接到构建器以指定连接 URI。</p>",3),St={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/stable-api/#std-label-stable-api-java",target:"_blank",rel:"noopener noreferrer"},It=e(`<p>下面的代码展示了如何在连接到 Atlas 上的 MongoDB 部署时指定连接字符串和稳定 API 客户端选项，并验证连接是否成功：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">fundamentals</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">BsonDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">BsonInt64</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bson<span class="token punctuation">.</span>conversions<span class="token punctuation">.</span></span><span class="token class-name">Bson</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoClients</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MongoDatabase</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MongoClientConnectionExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Replace the placeholder with your Atlas connection string</span>
        <span class="token class-name">String</span> uri <span class="token operator">=</span> <span class="token string">&quot;&lt;connection string&gt;&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// Construct a ServerApi instance using the ServerApi.builder() method</span>
        <span class="token class-name">ServerApi</span> serverApi <span class="token operator">=</span> <span class="token class-name">ServerApi</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token class-name">ServerApiVersion</span><span class="token punctuation">.</span><span class="token constant">V1</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">MongoClientSettings</span> settings <span class="token operator">=</span> <span class="token class-name">MongoClientSettings</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">applyConnectionString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConnectionString</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">serverApi</span><span class="token punctuation">(</span>serverApi<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Create a new client and connect to the server</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// Send a ping to confirm a successful connection</span>
                <span class="token class-name">Bson</span> command <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BsonDocument</span><span class="token punctuation">(</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BsonInt64</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Document</span> commandResult <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">runCommand</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Pinged your deployment. You successfully connected to MongoDB!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MongoException</span> me<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>me<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接 MongoDB 的其他方式</p><p>如果你要连接到不在 Atlas 上托管的单个 MongoDB 部署或副本集，请参阅以下部分以了解如何连接。</p><ul><li>连接到本地机器上部署的 MongoDB</li></ul><p>如果出于开发目的，你需要在本地机器上运行部署的 MongoDB ，而不是使用 Atlas 集群，则需要完成以下操作：</p>`,6),Bt={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},At={href:"https://www.mongodb.com/try/download/enterprise",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://www.mongodb.com/docs/manual/installation/#std-label-tutorials-installation",target:"_blank",rel:"noopener noreferrer"},Rt=n("li",null,"启动部署。",-1),Pt=n("p",null,[n("strong",null,"重要")],-1),Ut={href:"https://www.mongodb.com/docs/manual/administration/security-checklist/",target:"_blank",rel:"noopener noreferrer"},Tt=n("p",null,"成功启动部署的 MongoDB 后，在驱动程序连接代码中指定连接字符串。",-1),Et=n("p",null,[s("如果你的 MongoDB 部署在本地运行，你可以使用连接字符串 "),n("code",null,'"mongoDB://localhost:<port>"'),s(" ，其中 "),n("code",null,"<port>"),s(" 是你配置服务器以侦听传入连接的端口号。")],-1),Ft={href:"https://www.mongodb.com/docs/manual/reference/connection-string/",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/connection/connect/#std-label-connect-atlas-java-driver",target:"_blank",rel:"noopener noreferrer"},Lt=e(`<ul><li>连接到副本集</li></ul><p>MongoDB 副本集部署是一组存储相同数据集的连接实例。这种实例配置提供了数据冗余和高数据可用性。</p><p>要连接到部署的副本集，请指定副本集成员的主机名（或 IP 地址）和端口号。</p><p>如果你不能提供副本集中主机的完整列表，你可以指定副本中主机的单个或子集，并指示驱动程序以以下方式之一执行自动发现：</p><ul><li>指定副本集的名称作为 <code>replicaSet</code> 参数的值</li><li>将 <code>directConnection</code> 参数的值指定为 <code>false</code></li><li>在副本集中指定多个主机</li></ul><blockquote><p><strong>提示</strong></p><p>虽然你可以在副本集中指定主机的一个子集，但要包括副本集中的所有主机，以确保如果其中一个主机不可达，驱动程序能够建立连接。</p></blockquote><p>下面的示例展示了如何使用 <code>ConnectionString</code> 或 <code>MongoClientSettings</code> 类为一个 <code>MongoClient</code> 实例指定多个主机。选择与首选类对应的选项卡。</p><p><code>ConnectionString</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ConnectionString</span> connectionString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionString</span><span class="token punctuation">(</span><span class="token string">&quot;mongodb://host1:27017,host2:27017,host3:27017/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MongoClientSettings</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ServerAddress</span> seed1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerAddress</span><span class="token punctuation">(</span><span class="token string">&quot;host1&quot;</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ServerAddress</span> seed2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerAddress</span><span class="token punctuation">(</span><span class="token string">&quot;host2&quot;</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ServerAddress</span> seed3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerAddress</span><span class="token punctuation">(</span><span class="token string">&quot;host3&quot;</span><span class="token punctuation">,</span> <span class="token number">27017</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MongoClientSettings</span> settings <span class="token operator">=</span> <span class="token class-name">MongoClientSettings</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">applyToClusterSettings</span><span class="token punctuation">(</span>builder <span class="token operator">-&gt;</span>
               builder<span class="token punctuation">.</span><span class="token function">hosts</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>seed1<span class="token punctuation">,</span> seed2<span class="token punctuation">,</span> seed3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>settings<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="连接选项" tabindex="-1"><a class="header-anchor" href="#连接选项" aria-hidden="true">#</a> 连接选项</h5><p>本节解释驱动程序支持的 MongoDB 连接和身份验证选项。你可以将连接选项作为连接 URI 的参数传递，以指定客户机的行为。</p>`,13),Wt=n("thead",null,[n("tr",null,[n("th",null,"选项名称"),n("th",null,"类型"),n("th",null,"描述")])],-1),Nt=n("tr",null,[n("td",null,"minPoolSize"),n("td",null,"integer"),n("td",null,[s("指定单个连接池中任何时刻必须存在的最小连接数。默认值："),n("code",null,"0")])],-1),zt=n("tr",null,[n("td",null,"maxPoolSize"),n("td",null,"integer"),n("td",null,[s("指定连接池在给定时间内可能具有的最大连接数。默认值："),n("code",null,"100")])],-1),Kt=n("tr",null,[n("td",null,"waitQueueTimeoutMS"),n("td",null,"integer"),n("td",null,[s("指定线程等待连接变为可用的最大时间，以毫秒为单位。默认值："),n("code",null,"120000"),s("(120秒)")])],-1),Gt=n("tr",null,[n("td",null,"serverSelectionTimeoutMS"),n("td",null,"integer"),n("td",null,[s("指定驱动程序在抛出异常之前等待服务器选择成功的最大时间（以毫秒为单位）。默认值："),n("code",null,"30000"),s("（30秒）")])],-1),Vt=n("tr",null,[n("td",null,"localThresholdMS"),n("td",null,"integer"),n("td",null,[s("当与副本集中的多个 MongoDB 实例通信时，驱动程序只会将请求发送到响应时间小于或等于响应时间最快的服务器加上本地阈值的服务器（以毫秒为单位）。默认值："),n("code",null,"15")])],-1),Ht=n("tr",null,[n("td",null,"heartbeatFrequencyMS"),n("td",null,"integer"),n("td",null,[s("指定驱动程序在尝试确定集群中每个服务器的当前状态之间等待的频率（以毫秒为单位）。默认值："),n("code",null,"10000"),s("（10秒）")])],-1),Qt=n("tr",null,[n("td",null,"replicaSet"),n("td",null,"string"),n("td",null,[s("指定提供的连接字符串包括多个主机。当指定时，驱动程序会尝试查找该集合的所有成员。默认值："),n("code",null,"null")])],-1),Yt=n("tr",null,[n("td",null,"ssl"),n("td",null,"boolean"),n("td",null,[s("指定与 MongoDB 实例的所有通信都应使用 TLS/SSL。被 "),n("strong",null,"tls"),s(" 选项取代。默认值："),n("code",null,"false")])],-1),$t=n("tr",null,[n("td",null,"tls"),n("td",null,"boolean"),n("td",null,[s("指定与 MongoDB 实例的所有通信都应使用 TLS。取代 "),n("strong",null,"ssl"),s(" 选项。默认值："),n("code",null,"false")])],-1),Zt=n("tr",null,[n("td",null,"tlsInsecure"),n("td",null,"boolean"),n("td",null,[s("指定驱动程序应允许 TLS 连接使用无效的主机名。与将 "),n("strong",null,"tlsAllowInvalidHostnames"),s(" 设置为 "),n("code",null,"true"),s(" 具有相同的效果。要以其他方式配置 TLS 安全约束，请使用自定义 SSLContext。默认值："),n("code",null,"false")])],-1),Xt=n("tr",null,[n("td",null,"tlsAllowInvalidHostnames"),n("td",null,"boolean"),n("td",null,[s("指定驱动程序应允许 TLS 连接的证书中包含无效主机名。取代 "),n("strong",null,"sslInvalidHostNameAllowed"),s("。默认值："),n("code",null,"false")])],-1),ne=n("tr",null,[n("td",null,"connectTimeoutMS"),n("td",null,"integer"),n("td",null,[s("指定 Java 驱动程序在超时之前等待连接打开的最长时间（以毫秒为单位）。值 "),n("code",null,"0"),s(" 指示驱动程序在等待打开连接时永远不要超时。默认值："),n("code",null,"10000"),s("（10秒）")])],-1),se=n("tr",null,[n("td",null,"socketTimeoutMS"),n("td",null,"integer"),n("td",null,[s("指定 Java 驱动程序在超时之前等待发送或接收请求的最长时间（以毫秒为单位）。值 "),n("code",null,"0"),s(" 指示驱动程序在等待发送或接收请求时永远不要超时。默认值："),n("code",null,"0")])],-1),ae=n("tr",null,[n("td",null,"maxIdleTimeMS"),n("td",null,"integer"),n("td",null,[s("指定 Java 驱动程序在关闭连接之前允许池连接空闲的最长时间（以毫秒为单位）。值 "),n("code",null,"0"),s(" 表示驱动程序允许池集合空闲的时间没有上限。默认值："),n("code",null,"0")])],-1),te=n("tr",null,[n("td",null,"maxLifeTimeMS"),n("td",null,"integer"),n("td",null,[s("指定 Java 驱动程序在关闭连接之前继续使用池连接的最长时间（以毫秒为单位）。值 "),n("code",null,"0"),s(" 表示驱动程序可以保持池连接打开的时间没有上限。默认值："),n("code",null,"0")])],-1),ee=n("tr",null,[n("td",null,"journal"),n("td",null,"boolean"),n("td",null,[s("指定驱动程序必须等待连接的 MongoDB 实例将提交分组到磁盘上的日志文件以进行所有写入。默认值："),n("code",null,"false")])],-1),oe=n("td",null,"w",-1),pe=n("td",null,"string 或者 integer",-1),ce={href:"https://www.mongodb.com/docs/manual/reference/write-concern/#w-option",target:"_blank",rel:"noopener noreferrer"},le=n("code",null,"1",-1),ie=n("td",null,"wtimeoutMS",-1),ue=n("td",null,"integer",-1),de={href:"https://www.mongodb.com/docs/manual/reference/connection-string/#write-concern-options",target:"_blank",rel:"noopener noreferrer"},re=n("code",null,"0",-1),ke=n("code",null,"0",-1),me=n("td",null,"readPreference",-1),ve=n("td",null,"string",-1),ge={href:"https://www.mongodb.com/docs/manual/reference/connection-string/#urioption.readPreference",target:"_blank",rel:"noopener noreferrer"},be=n("code",null,"primary",-1),he=n("td",null,"readPreferenceTags",-1),fe=n("td",null,"string",-1),_e={href:"https://www.mongodb.com/docs/manual/reference/connection-string/#urioption.readPreferenceTags",target:"_blank",rel:"noopener noreferrer"},ye=n("code",null,"null",-1),we=n("tr",null,[n("td",null,"maxStalenessSeconds"),n("td",null,"integer"),n("td",null,[s("以秒为单位，指定在驱动程序停止与辅助设备通信之前，辅助设备的过时程度。最小值为 "),n("code",null,"90"),s(" 秒或心跳频率加 "),n("code",null,"10"),s(" 秒，以较大者为准。有关详细信息，请参阅 maxStalenessSeconds 选项。不提供参数或显式指定 "),n("code",null,"-1"),s(" 表示不应该对次级进行过时检查。默认值："),n("code",null,"-1")])],-1),qe=n("tr",null,[n("td",null,"authMechanism"),n("td",null,"string"),n("td",null,"指定在提供凭据时驱动程序应使用的身份验证机制。默认设置：默认情况下，客户端会根据服务器版本选择最安全的机制。有关可能的值，请参阅 authMechanism 选项。")],-1),Me=n("tr",null,[n("td",null,"authSource"),n("td",null,"string"),n("td",null,[s("指定应验证所提供凭据的数据库。默认值："),n("code",null,"admin")])],-1),xe=n("tr",null,[n("td",null,"authMechanismProperties"),n("td",null,"string"),n("td",null,[s("将指定身份验证机制的身份验证属性指定为以冒号分隔的属性和值的列表。有关更多信息，请参阅 "),n("code",null,"authMechanismProperties"),s(" 选项的服务器文档。默认值："),n("code",null,"null")])],-1),De=n("tr",null,[n("td",null,"appName"),n("td",null,"string"),n("td",null,[s("指定在连接握手期间提供给 MongoDB 实例的应用程序的名称。可用于服务器日志和分析。默认值："),n("code",null,"null")])],-1),Ce=n("tr",null,[n("td",null,"compressors"),n("td",null,"string"),n("td",null,[s("指定一个或多个压缩算法，驱动程序将尝试使用这些算法来压缩发送到连接的 MongoDB 实例的请求。可能的值包括："),n("code",null,"zlib"),s("、"),n("code",null,"snappy"),s(" 和 "),n("code",null,"zstd"),s("。默认值："),n("code",null,"null")])],-1),je=n("tr",null,[n("td",null,"zlibCompressionLevel"),n("td",null,"integer"),n("td",null,[s("指定 Zlib 应用于减少对连接的 MongoDB 实例的请求大小的压缩程度。级别可以在 -1 到 9 之间，较低的值压缩得更快（但会产生更大的请求），较大的值压缩的更慢（但会导致更小的请求）。默认值："),n("code",null,"null")])],-1),Se=n("tr",null,[n("td",null,"retryWrites"),n("td",null,"boolean"),n("td",null,[s("指定如果由于网络错误导致支持的写入操作失败，驱动程序必须重试这些操作。默认值："),n("code",null,"true")])],-1),Ie=n("tr",null,[n("td",null,"retryReads"),n("td",null,"boolean"),n("td",null,[s("指定如果支持的读取操作由于网络错误而失败，则驱动程序必须重试这些操作。默认值："),n("code",null,"true")])],-1),Be=n("tr",null,[n("td",null,"uuidRepresentation"),n("td",null,"string"),n("td",null,[s("指定用于读取和写入操作的 UUID 表示形式。有关更多信息，请参阅 "),n("code",null,"MongoClientSettings.getUuidRepresentation()"),s(" 方法的驱动程序文档。默认值："),n("code",null,"unspecified")])],-1),Ae=n("tr",null,[n("td",null,"directConnection"),n("td",null,"boolean"),n("td",null,[s("指定驱动程序必须直接连接到主机。默认值："),n("code",null,"false")])],-1),Oe=n("tr",null,[n("td",null,"maxConnecting"),n("td",null,"integer"),n("td",null,[s("指定池可以同时建立的最大连接数。默认值："),n("code",null,"2")])],-1),Re=n("tr",null,[n("td",null,"srvServiceName"),n("td",null,"string"),n("td",null,[s("指定驱动程序为构造种子列表而检索的 SRV 资源记录的服务名称。你必须在连接 URI 中使用 DNS 种子列表连接格式才能使用此选项。默认值："),n("code",null,"mongodb")])],-1),Pe={href:"https://mongodb.github.io/mongo-java-driver/4.9/apidocs/mongodb-driver-core/com/mongodb/ConnectionString.html",target:"_blank",rel:"noopener noreferrer"},Ue=e('<h3 id="响应式流" tabindex="-1"><a class="header-anchor" href="#响应式流" aria-hidden="true">#</a> 响应式流</h3><h3 id="bson" tabindex="-1"><a class="header-anchor" href="#bson" aria-hidden="true">#</a> BSON</h3><h3 id="构建器" tabindex="-1"><a class="header-anchor" href="#构建器" aria-hidden="true">#</a> 构建器</h3><h3 id="参考或引用" tabindex="-1"><a class="header-anchor" href="#参考或引用" aria-hidden="true">#</a> 参考或引用</h3>',4),Te={href:"https://mongodb.github.io/mongo-java-driver/",target:"_blank",rel:"noopener noreferrer"};function Ee(Fe,Je){const a=l("ExternalLinkIcon");return p(),c("div",null,[k,n("p",null,[s("其他特性参考链接："),n("a",m,[s("whats-new"),t(a)])]),v,n("p",null,[s("请确保你的系统安装了 JDK 8 或更高版本。有关如何检查 Java 版本并安装 JDK 的更多信息，请参阅 "),n("a",g,[s("Oracle JDK 安装文档概述"),t(a)]),s("。")]),b,h,n("p",null,[s("如果你没有使用 IDE，请参阅 "),n("a",f,[s("Building Maven"),t(a)]),s(" 或 "),n("a",_,[s("Creating New Gradle Builds"),t(a)]),s("，了解有关如何设置项目的更多信息。")]),y,n("p",null,[s("在设置 Java 项目依赖项之后，创建一个 MongoDB 集群，你可以在其中存储和管理数据。完成 "),n("a",w,[s("Atlas 入门"),t(a)]),s("指南，设置一个新的 "),n("a",q,[s("Atlas 帐户"),t(a)]),s("，创建并启动一个免费层 MongoDB 集群，加载数据集，并与数据交互。")]),M,x,D,C,n("p",null,[s("如果你正在连接到非 Atlas 托管的实例或集群，请参阅"),n("a",j,[s("连接到 MongoDB 的其他方法"),t(a)]),s("，以获取有关如何格式化连接字符串的说明。")]),S,n("ul",null,[n("li",null,[n("a",I,[s("使用 POJO 存储和检索数据指南"),t(a)])]),n("li",null,[n("a",B,[s("POJO 自定义序列化指南"),t(a)])])]),A,n("p",null,[s("你可以使用 "),n("a",O,[s("Atlas 连接指南"),t(a)]),s("了解如何允许连接到你的 Atlas 实例，并找到在用法示例中用于替换 uri 变量的连接字符串。如果你的实例使用 "),n("a",R,[s("SCRAM 身份验证"),t(a)]),s("，则可以将 "),P,s(" 替换为用户名，将 "),U,s(" 替换为密码，将 "),T,s(" 替换为实例的 IP 地址或 url。")]),n("p",null,[s("有关连接到 MongoDB 实例的更多信息，请参阅我们的"),n("a",E,[s("连接指南"),t(a)]),s("。")]),F,n("p",null,[s("有关使用 Java 驱动程序查询 MongoDB 的更多信息，请参阅我们的"),n("a",J,[s("文档查询指南"),t(a)]),s("。")]),L,n("p",null,[s("有关 "),W,s(" 方法的更多信息，请参阅我们的"),n("a",N,[s("排序指南"),t(a)]),s("。有关 "),z,s(" 方法的更多信息，请参阅我们的 "),n("a",K,[s("projection 指南"),t(a)]),s("。")]),G,n("blockquote",null,[V,n("p",null,[s("此示例使用连接 URI 连接到 MongoDB 的一个实例。要了解有关连接到 MongoDB 实例的更多信息，请参阅"),n("a",H,[s("连接指南"),t(a)]),s("。")])]),Q,n("blockquote",null,[Y,$,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Z,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),X,n("ul",null,[n("li",null,[n("a",nn,[s("FindIterable"),t(a)])]),n("li",null,[n("a",sn,[s("MongoIterable"),t(a)])]),n("li",null,[n("a",an,[s("find()"),t(a)])]),n("li",null,[n("a",tn,[s("first()"),t(a)])])]),en,on,n("p",null,[s("有关使用 Java 驱动程序查询 MongoDB 的更多信息，请参阅我们的"),n("a",pn,[s("文档查询指南"),t(a)]),s("。")]),cn,n("p",null,[s("有关 "),ln,s(" 方法的更多信息，请参阅我们的"),n("a",un,[s("排序指南"),t(a)]),s("。有关 "),dn,s(" 方法的更多信息，请参阅我们的"),n("a",rn,[s("投影指南"),t(a)]),s("。")]),kn,n("blockquote",null,[mn,vn,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",gn,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),bn,n("ul",null,[n("li",null,[n("a",hn,[s("FindIterable"),t(a)])]),n("li",null,[n("a",fn,[s("MongoIterable"),t(a)])]),n("li",null,[n("a",_n,[s("MongoCursor"),t(a)])]),n("li",null,[n("a",yn,[s("find()"),t(a)])])]),wn,n("blockquote",null,[qn,Mn,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",xn,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Dn,n("ul",null,[n("li",null,[n("a",Cn,[s("insertOne()"),t(a)])]),n("li",null,[n("a",jn,[s("Document"),t(a)])]),n("li",null,[n("a",Sn,[s("InsertOneResult"),t(a)])])]),In,n("blockquote",null,[Bn,An,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",On,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Rn,n("ul",null,[n("li",null,[n("a",Pn,[s("insertMany()"),t(a)])]),n("li",null,[n("a",Un,[s("Document"),t(a)])]),n("li",null,[n("a",Tn,[s("InsertManyResult"),t(a)])])]),En,n("p",null,[s("我们使用 "),Fn,s(" 构建器（一个包含静态助手方法的工厂类）来构造更新文档。虽然你可以传递更新文档而不是使用构建器，但构建器提供了类型检查和简化的语法。有关 "),Jn,s(" 构建器的详细信息，请参阅我们的"),n("a",Ln,[s("更新构建器指南"),t(a)]),s("。")]),Wn,n("blockquote",null,[Nn,zn,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Kn,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Gn,n("ul",null,[n("li",null,[n("a",Vn,[s("UpdateOne"),t(a)])]),n("li",null,[n("a",Hn,[s("UpdateOptions"),t(a)])]),n("li",null,[n("a",Qn,[s("combine"),t(a)])]),n("li",null,[n("a",Yn,[s("set"),t(a)])]),n("li",null,[n("a",$n,[s("addToSet"),t(a)])]),n("li",null,[n("a",Zn,[s("currentTimestamp"),t(a)])]),n("li",null,[n("a",Xn,[s("UpdateResult"),t(a)])])]),ns,n("p",null,[s("我们使用 "),ss,s(" 构建器，这是一个包含静态助手方法的工厂类来构造更新文档。虽然你可以传递更新文档而不是使用构建器，但构建器提供了类型检查和简化的语法。有关更多信息，请阅读我们在构建程序部分中的"),n("a",as,[s("更新指南"),t(a)]),s("。")]),ts,n("blockquote",null,[es,os,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",ps,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),cs,n("ul",null,[n("li",null,[n("a",ls,[s("updateMany"),t(a)])]),n("li",null,[n("a",is,[s("UpdateOptions"),t(a)])]),n("li",null,[n("a",us,[s("combine"),t(a)])]),n("li",null,[n("a",ds,[s("set"),t(a)])]),n("li",null,[n("a",rs,[s("addToSet"),t(a)])]),n("li",null,[n("a",ks,[s("currentTimestamp"),t(a)])]),n("li",null,[n("a",ms,[s("UpdateResult"),t(a)])])]),vs,n("blockquote",null,[gs,bs,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",hs,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),fs,n("ul",null,[n("li",null,[n("a",_s,[s("replaceOne"),t(a)])]),n("li",null,[n("a",ys,[s("ReplaceOptions"),t(a)])]),n("li",null,[n("a",ws,[s("UpdateResult"),t(a)])]),n("li",null,[n("a",qs,[s("eq()"),t(a)])])]),Ms,n("blockquote",null,[xs,Ds,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Cs,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),js,n("ul",null,[n("li",null,[n("a",Ss,[s("deleteOne"),t(a)])]),n("li",null,[n("a",Is,[s("DeleteResult"),t(a)])]),n("li",null,[n("a",Bs,[s("eq()"),t(a)])])]),As,n("blockquote",null,[Os,Rs,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Ps,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Us,n("ul",null,[n("li",null,[n("a",Ts,[s("deleteMany"),t(a)])]),n("li",null,[n("a",Es,[s("DeleteResult"),t(a)])]),n("li",null,[n("a",Fs,[s("drop()"),t(a)])])]),Js,n("blockquote",null,[Ls,Ws,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Ns,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),zs,n("ul",null,[n("li",null,[n("a",Ks,[s("唯一索引"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",Gs,[s("模式验证"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",Vs,[s("bulkWrite()"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Hs,[s("BulkWriteOptions"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Qs,[s("BulkWriteResult"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Ys,[s("InsertOneModel"),t(a)]),s(" API 文档")]),n("li",null,[n("a",$s,[s("UpdateOneModel"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Zs,[s("UpdateManyModel"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Xs,[s("DeleteOneModel"),t(a)]),s(" API 文档")]),n("li",null,[n("a",na,[s("DeleteManyModel"),t(a)]),s(" API 文档")]),n("li",null,[n("a",sa,[s("ReplaceOneModel"),t(a)]),s(" API 文档")])]),aa,n("blockquote",null,[ta,ea,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",oa,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),pa,n("ul",null,[n("li",null,[n("a",ca,[s("改变流"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",la,[s("更改事件"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",ia,[s("聚合管道"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",ua,[s("聚合阶段"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",da,[s("ChangeStreamIterable"),t(a)]),s(" API文档")]),n("li",null,[n("a",ra,[s("MongoCollection.watch()"),t(a)]),s(" API文档")]),n("li",null,[n("a",ka,[s("MongoDatabase.watch()"),t(a)]),s(" API文档")]),n("li",null,[n("a",ma,[s("MongoClient.watch()"),t(a)]),s(" API文档")])]),va,n("blockquote",null,[ga,n("p",null,[s("当使用 "),ba,s(" 返回集合中文档的总数时，可以通过避免集合扫描来提高性能。为此，使用一个"),n("a",ha,[s("提示"),t(a)]),s("来利用 "),fa,s(" 字段上的内置索引。只有在使用空查询参数调用 "),_a,s(" 时才使用此技术。")]),ya]),wa,n("blockquote",null,[qa,Ma,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",xa,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Da,n("ul",null,[n("li",null,[n("a",Ca,[s("countDocuments()"),t(a)])]),n("li",null,[n("a",ja,[s("estimatedDocumentCount()"),t(a)])]),n("li",null,[n("a",Sa,[s("CountOptions"),t(a)])]),n("li",null,[n("a",Ia,[s("EstimatedDocumentCountOptions"),t(a)])])]),Ba,n("blockquote",null,[Aa,Oa,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Ra,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Pa,n("ul",null,[n("li",null,[n("a",Ua,[s("distinct()"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Ta,[s("DistinctIterable"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Ea,[s("Dot Notation"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",Fa,[s("MongoIterable"),t(a)]),s(" API 文档")])]),Ja,La,n("blockquote",null,[Wa,n("p",null,[s("尽可能使用 "),n("a",Na,[s("MongoDB Shell"),t(a)]),s(" 来完成管理任务，而不是 Java 驱动程序，因为使用 Shell 通常比在 Java 应用程序中更快更容易实现这些任务。")])]),za,n("blockquote",null,[Ka,Ga,n("p",null,[s("如果你使用的是旧版 API，请参阅我们的"),n("a",Va,[s("常见问题"),t(a)]),s("页面，了解需要对此代码示例进行哪些更改。")])]),Ha,n("ul",null,[n("li",null,[n("a",Qa,[s("runCommand()"),t(a)]),s(" API 文档")]),n("li",null,[n("a",Ya,[s("数据库命令"),t(a)]),s(" 服务器手动输入")]),n("li",null,[n("a",$a,[s("dbStats"),t(a)]),s(" 服务器手动输入")])]),Za,n("p",null,[s("你可以查看"),n("a",Xa,[s("连接到 Atlas 集群"),t(a)]),s("的示例代码，或者继续阅读以了解更多关于 "),nt,s(" 类和连接 uri 的信息。")]),st,at,tt,n("blockquote",null,[et,ot,n("p",null,[s("由于每个 "),pt,s(" 代表一个线程安全的数据库连接池，因此大多数应用程序只需要一个 "),ct,s(" 实例，即使跨多个线程也是如此。要了解有关连接池在驱动程序中如何工作的更多信息，请参阅 "),n("a",lt,[s("FAQ 页面"),t(a)]),s("。")])]),it,n("p",null,[s("要了解用于控制 "),ut,s(" 行为的不同设置，请参阅关于 "),n("a",dt,[rt,s(" 设置"),t(a)]),s("的指南。")]),kt,mt,vt,gt,n("p",null,[s("该图使用"),n("a",bt,[s("标准连接字符串格式"),t(a)]),s("，"),ht,s(" 为协议。你也可以使用 "),n("a",ft,[s("DNS 种子列表连接格式"),t(a)]),s("，"),_t,s("，如果你想要更灵活的部署和轮换服务器的能力，而不需要重新配置客户端。")]),n("blockquote",null,[yt,n("p",null,[s("如果部署在 MongoDB Atlas 上，请参见 "),n("a",wt,[s("Atlas 驱动程序连接指南"),t(a)]),s("，并从语言下拉列表中选择 Java 来检索你的连接字符串。")])]),qt,Mt,n("p",null,[s("连接 URI 的最后一部分包含连接选项作为参数。在本例中，我们设置了两个连接选项："),xt,s(" 和 "),Dt,s("。有关连接选项的更多信息，请跳到本指南的 “"),n("a",Ct,[s("连接选项"),t(a)]),s("” 部分。")]),jt,n("p",null,[s("你可以设置稳定 API 版本客户端选项，以避免在升级到新版本的 MongoDB Server 时发生破坏性更改。要了解有关稳定 API 特性的更多信息，请参阅"),n("a",St,[s("稳定 API 页面"),t(a)]),s("。")]),It,n("ol",null,[n("li",null,[s("下载"),n("a",Bt,[s("社区版"),t(a)]),s("或"),n("a",At,[s("企业版"),t(a)]),s(" MongoDB Server。")]),n("li",null,[n("a",Ot,[s("安装和配置"),t(a)]),s(" MongoDB Server。")]),Rt]),n("blockquote",null,[Pt,n("p",null,[s("始终保护你的 MongoDB 部署免受恶意攻击。有关安全性建议的列表，请参阅我们的"),n("a",Ut,[s("安全性检查表"),t(a)]),s("。")])]),Tt,Et,n("p",null,[s("如果你需要指定不同的主机名或 IP 地址，请参阅服务器手册中的"),n("a",Ft,[s("连接字符串"),t(a)]),s("条目。")]),n("p",null,[s("要测试是否可以连接到部署，请替换"),n("a",Jt,[s("连接到 MongoDB 的 Atlas"),t(a)]),s(" 代码示例并运行它。")]),Lt,n("table",null,[Wt,n("tbody",null,[Nt,zt,Kt,Gt,Vt,Ht,Qt,Yt,$t,Zt,Xt,ne,se,ae,te,ee,n("tr",null,[oe,pe,n("td",null,[s("指定写入问题。有关值的更多信息，请参阅 "),n("a",ce,[s("w 选项"),t(a)]),s("的服务器文档。默认值："),le])]),n("tr",null,[ie,ue,n("td",null,[s("指定写入问题的时间限制（以毫秒为单位）。有关详细信息，请参阅 "),n("a",de,[s("wtimeoutMS 选项"),t(a)]),s("。值 "),re,s(" 指示驱动程序永远不要超时写入操作。默认值："),ke])]),n("tr",null,[me,ve,n("td",null,[s("指定读取首选项。有关值的更多信息，请参阅 "),n("a",ge,[s("readPreference 选项"),t(a)]),s("的服务器文档。默认值："),be])]),n("tr",null,[he,fe,n("td",null,[s("指定读取首选项标记。有关值的更多信息，请参阅 "),n("a",_e,[s("readPreferenceTags 选项"),t(a)]),s("。默认值："),ye])]),we,qe,Me,xe,De,Ce,je,Se,Ie,Be,Ae,Oe,Re])]),n("p",null,[s("有关选项的完整列表，请参阅 "),n("a",Pe,[s("ConnectionString"),t(a)]),s(" API 参考页。")]),Ue,n("ul",null,[n("li",null,[n("a",Te,[s("https://mongodb.github.io/mongo-java-driver/"),t(a)])])])])}const We=o(r,[["render",Ee],["__file","mongodb-offical-study-guide.html.vue"]]);export{We as default};
