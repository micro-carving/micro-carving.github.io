import{_ as c,W as l,X as i,Y as s,Z as n,$ as a,a0 as u,a1 as t,C as e}from"./framework-158a71b3.js";const d={},k=s("h2",{id:"mongodb-概述",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mongodb-概述","aria-hidden":"true"},"#"),n(" MongoDB 概述")],-1),r=s("h3",{id:"mongodb-是什么",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mongodb-是什么","aria-hidden":"true"},"#"),n(" MongoDB 是什么？")],-1),m=s("p",null,"MongoDB 是一个文档数据库，旨在简化应用程序的开发和扩展。",-1),v={href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"},b=t('<h3 id="mongodb-可以干什么" tabindex="-1"><a class="header-anchor" href="#mongodb-可以干什么" aria-hidden="true">#</a> MongoDB 可以干什么？</h3><ul><li>对数据查询并存储</li><li>通过聚合函数转换数据</li><li>保障数据的访问安全</li><li>部署并扩展数据库</li></ul><h3 id="mongodb-应用场景" tabindex="-1"><a class="header-anchor" href="#mongodb-应用场景" aria-hidden="true">#</a> MongoDB 应用场景</h3><ol><li><strong>日志存储</strong></li></ol><p>在互联网业务中，日志是非常重要的数据，能够反映系统的运行情况和用户的行为。MongoDB 的文档模型非常适合存储日志数据，因为日志数据格式通常比较灵活，同时需要支持高效的读写操作。</p><ol start="2"><li><strong>社交网络应用</strong></li></ol><p>社交网络应用通常需要对用户产生的大量数据进行存储和分析，包括用户的关系、动态、评论等等。由于这些数据非常复杂，传统的关系型数据库可能无法轻松地存储和查询这些数据。</p><ol start="3"><li><strong>物联网应用</strong></li></ol><p>物联网应用通常需要存储和查询大量的传感器数据，这些数据通常有一定的结构，但是需要支持高效的读写操作。</p><ol start="4"><li><strong>游戏</strong></li></ol><p>使用 MongoDB 作为游戏服务器的数据库存储用户信息。用户的游戏装备、积分等直接以内嵌文档的形式存储，方便进行查询与更新。</p><h3 id="mongodb-数据类型-bson" tabindex="-1"><a class="header-anchor" href="#mongodb-数据类型-bson" aria-hidden="true">#</a> MongoDB 数据类型 BSON</h3><h4 id="bson-是什么" tabindex="-1"><a class="header-anchor" href="#bson-是什么" aria-hidden="true">#</a> BSON 是什么？</h4><p>BSON 是一种类似 JSON 的一种二进制形式的存储格式，“BSON” 是 “二进制” 和 “JSON” 的合成词，可以将 BSON 看作 JSON (JavaScript Object Notation) 文档的二进制表示。它和 JSON 一样，支持内嵌的文档对象和数组对象，但是 BSON 有 JSON 没有的一些数据类型，如 <code>Date</code> 和 <code>BinData</code> 类型。</p><p>BSON 可以做为网络数据交换的一种存储形式，这个有点类似于 Google 的 Protocol Buffer，但是 BSON 是一种 schema-less 的存储形式，它的优点是灵活性高，但它的缺点是空间利用率不是很理想， BSON 具有三个特点：轻量性、可遍历性、高效性</p><p><code>{&quot;hello&quot;:&quot;world&quot;}</code> 这是一个 BSON 的例子，其中 &quot;hello&quot; 是 key name，它一般是 <code>cstring</code> 类型，字节表示是 <code>cstring::= (byte*) &quot;/x00&quot;</code> ,其中 <code>*</code> 表示零个或多个 <code>byte</code> 字节，<code>/x00</code> 表示结束符<code>;</code> 后面的 <code>&quot;world&quot;</code> 是 <code>value</code> 值，它的类型一般是 <code>string,double,array,binarydata</code> 等类型。</p>',16),g={href:"http://bsonspec.org/",target:"_blank",rel:"noopener noreferrer"},q=t(`<h3 id="mongodb-基本概念和操作" tabindex="-1"><a class="header-anchor" href="#mongodb-基本概念和操作" aria-hidden="true">#</a> MongoDB 基本概念和操作</h3><h4 id="文档结构" tabindex="-1"><a class="header-anchor" href="#文档结构" aria-hidden="true">#</a> 文档结构</h4><p>在 MongoDB 中，一个文档可以包含多个字段，每个字段以名值对的形式存在，字段的值可以是字符串、数值、日期、布尔型、数组等，这些值都可以嵌套其他文档或数组。</p><p>例如，以下是一个 MongoDB 文档的示例：</p><div class="language-bson line-numbers-mode" data-ext="bson"><pre class="language-bson"><code>{
  &quot;_id&quot;: &quot;5f262d6aa01dd6a49a6fa8d6&quot;,
  &quot;title&quot;: &quot;MongoDB 存储示例&quot;,
  &quot;content&quot;: &quot;这是一篇使用 MongoDB 存储数据的示例。&quot;,
  &quot;tags&quot;: [&quot;MongoDB&quot;, &quot;数据库&quot;, &quot;NoSQL&quot;],
  &quot;createdDate&quot;: ISODate(&quot;2023-03-31T09:34:02.765Z&quot;)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 &quot;_id&quot; 是文档的唯一标识符，&quot;title&quot;、&quot;content&quot;、&quot;tags&quot;、&quot;createdDate&quot; 都是字段名，对应这些字段的值分别是 &quot;MongoDB 存储示例&quot;、&quot;这是一篇使用 MongoDB 存储数据的示例。&quot; 、[&quot;MongoDB&quot;, &quot;数据库&quot;, &quot;NoSQL&quot;]、ISODate(&quot;2023-03-31T09:34:02.765Z&quot;)。</p><h4 id="集合" tabindex="-1"><a class="header-anchor" href="#集合" aria-hidden="true">#</a> 集合</h4><p>MongoDB 的所有文档都存储在集合中，一个集合可以包含多个文档，每个文档可以不同的结构。集合不需要预定义数据结构，插入的每个文档可以有不同的字段集合。</p><p>例如，以下是一个创建集合并插入文档的示例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 创建集合
db.createCollection<span class="token punctuation">(</span><span class="token string">&quot;articles&quot;</span><span class="token punctuation">)</span>

// 插入文档
db.articles.insertOne<span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;5f262d6aa01dd6a49a6fa8d6&quot;</span>,
  <span class="token string">&quot;title&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;MongoDB 存储示例&quot;</span>,
  <span class="token string">&quot;content&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;这是一篇使用 MongoDB 存储数据的示例。&quot;</span>,
  <span class="token string">&quot;tags&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">&quot;MongoDB&quot;</span>, <span class="token string">&quot;数据库&quot;</span>, <span class="token string">&quot;NoSQL&quot;</span><span class="token punctuation">]</span>,
  <span class="token string">&quot;createdDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2023-03-31T09:34:02.765Z&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就创建了一个名为 &quot;articles&quot; 的集合，并插入了一个文档。</p><h4 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h4><p>MongoDB 提供了丰富的查询语法，可以方便地对文档进行查询。以下是一些查询示例：</p><ul><li>查询集合中的所有文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.articles.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询 title 字段中包含 &quot;MongoDB&quot; 关键字的文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.articles.find<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;title&quot;</span><span class="token builtin class-name">:</span> /MongoDB/ <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询 createdDate 字段大于指定日期的文档</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.articles.find<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;createdDate&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$gte</span>&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2021-01-01T00:00:00.000Z&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上仅是 MongoDB 数据存储的基本概念和操作方法。</p><h2 id="mongodb-crud-java-操作" tabindex="-1"><a class="header-anchor" href="#mongodb-crud-java-操作" aria-hidden="true">#</a> MongoDB CRUD Java 操作</h2><h3 id="在-java-应用程序中插入文档" tabindex="-1"><a class="header-anchor" href="#在-java-应用程序中插入文档" aria-hidden="true">#</a> 在 Java 应用程序中插入文档</h3><p>查看下面的代码，其中演示了如何将单个文档和多个文档插入到集合中。</p><h4 id="插入单个文档" tabindex="-1"><a class="header-anchor" href="#插入单个文档" aria-hidden="true">#</a> 插入单个文档</h4><p>将单个文档插入集合中（如果数据库和集合不存在，会自动创建）：</p><ul><li>使用 <code>getCollection()</code> 方法访问 <code>MongoCollection</code> 对象，该对象用于表示指定的集合</li><li>将 <code>insertOne()</code> 方法附加到 <code>collection</code> 对象</li><li>在 <code>insertOne()</code> 的括号内，包含一个包含文档数据的对象</li><li>打印出插入文档的 id</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testInsertOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;sample_training&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;inspections&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">final</span> <span class="token class-name">Document</span> inspection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ObjectId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;10021-2015-ENFO&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;certificate_number&quot;</span><span class="token punctuation">,</span> <span class="token number">9278806</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;business_name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ATLIXCO DELI GROCERY INC.&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;date&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Date</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2015</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">atStartOfDay</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;result&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;No Violation Issued&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;sector&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cigarette Retail Dealer - 127&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;RIDGEWOOD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;zip&quot;</span><span class="token punctuation">,</span> <span class="token number">11385</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;street&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MENAHAN ST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span> <span class="token number">1712</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">InsertOneResult</span> insertOneResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span>inspection<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">BsonValue</span> insertedId <span class="token operator">=</span> insertOneResult<span class="token punctuation">.</span><span class="token function">getInsertedId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>insertedId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>BsonObjectId{value=644b89cbbad0666fb329aa30}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="插入多个文档" tabindex="-1"><a class="header-anchor" href="#插入多个文档" aria-hidden="true">#</a> 插入多个文档</h4><p>将多个文档插入到集合中：</p><ul><li>将 <code>insertMany()</code> 方法附加到 <code>collection</code> 对象</li><li>在 <code>insertMany()</code> 的括号内，包含一个包含文档数据的对象</li><li>打印出插入文档的 id</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testInsertMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">final</span> <span class="token class-name">Document</span> doc1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;account_holder&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;john doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;account_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MDB99115881&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token number">1785</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;account_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;checking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Document</span> doc2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;account_holder&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jane doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;account_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MDB79101843&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token number">1468</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;account_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;checking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">final</span> <span class="token class-name">InsertManyResult</span> insertManyResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>doc1<span class="token punctuation">,</span> doc2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            insertManyResult<span class="token punctuation">.</span><span class="token function">getInsertedIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">.</span><span class="token function">asObjectId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-java-应用程序中查询-mongodb-的-collection" tabindex="-1"><a class="header-anchor" href="#在-java-应用程序中查询-mongodb-的-collection" aria-hidden="true">#</a> 在 Java 应用程序中查询 MongoDB 的 Collection</h3><p>查看下面的代码，它演示了如何使用 Java 在 MongoDB 中查询文档。</p><h4 id="使用-find" tabindex="-1"><a class="header-anchor" href="#使用-find" aria-hidden="true">#</a> 使用 <code>find()</code></h4><p>在下面的示例中，我们找到<strong>余额大于或等于 1000 并且是支票帐户</strong>的所有帐户。我们通过迭代 <code>MongoCursor</code> 来处理从 <code>find()</code>方法返回的每个文档。<code>find()</code> 方法接受查询筛选器并返回与集合中的筛选器匹配的文档。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>
    
    <span class="token comment">// ...</span>
    
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testFind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoCursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> cursor <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">gte</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;checking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&quot;_id&quot;: {&quot;$oid&quot;: &quot;644b7a20d633f972e812254b&quot;}, &quot;account_holder&quot;: &quot;john doe&quot;, &quot;account_id&quot;: &quot;MDB99115881&quot;, &quot;balance&quot;: 1785, &quot;account_type&quot;: &quot;checking&quot;}
{&quot;_id&quot;: {&quot;$oid&quot;: &quot;644b7a20d633f972e812254c&quot;}, &quot;account_holder&quot;: &quot;jane doe&quot;, &quot;account_id&quot;: &quot;MDB79101843&quot;, &quot;balance&quot;: 1468, &quot;account_type&quot;: &quot;checking&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-find-first" tabindex="-1"><a class="header-anchor" href="#使用-find-first" aria-hidden="true">#</a> 使用 <code>find().first()</code></h4><p>将 <code>find()</code> 和 <code>first()</code> 方法链接在一起，为传递给 <code>find()</code> 方法的查询过滤器查找第一个匹配的文档。在下面的示例中，我们从相同的查询返回一个文档。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testFindFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">Document</span> document <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">gte</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;checking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">assert</span> document <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&quot;_id&quot;: {&quot;$oid&quot;: &quot;644b7a20d633f972e812254b&quot;}, &quot;account_holder&quot;: &quot;john doe&quot;, &quot;account_id&quot;: &quot;MDB99115881&quot;, &quot;balance&quot;: 1785, &quot;account_type&quot;: &quot;checking&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="在-java-应用程序中更新文档" tabindex="-1"><a class="header-anchor" href="#在-java-应用程序中更新文档" aria-hidden="true">#</a> 在 Java 应用程序中更新文档</h3><p>查看下面的代码，它演示了如何用 Java 更新 MongoDB 中的文档。</p><h4 id="使用-updateone" tabindex="-1"><a class="header-anchor" href="#使用-updateone" aria-hidden="true">#</a> 使用 <code>updateOne()</code></h4><p>为了更新单个文档，我们在一个 <code>MongoCollection</code> 对象上使用 <code>updateOne()</code> 方法。该方法接受与我们想要更新的文档匹配的过滤器，以及指示驱动程序如何更改匹配文档的更新语句。<code>updateOne()</code> 方法只更新与过滤器匹配的第一个文档。</p><p>在下面的示例中，我们通过将特定帐户的余额增加 100 并将帐户状态设置为活动来更新一个文档：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testUpdateOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MDB79101843&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bson</span> updates <span class="token operator">=</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">combine</span><span class="token punctuation">(</span><span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;account_status&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;active&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UpdateResult</span> upResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> updates<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>upResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>AcknowledgedUpdateResult{matchedCount=1, modifiedCount=1, upsertedId=null}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用-updatemany" tabindex="-1"><a class="header-anchor" href="#使用-updatemany" aria-hidden="true">#</a> 使用 <code>updateMany()</code></h4><p>为了更新多个文档，我们在一个 <code>MongoCollection</code> 对象上使用 <code>updateMany()</code> 方法。该方法接受与我们想要更新的文档匹配的过滤器，以及指示驱动程序如何更改匹配文档的更新语句。<code>updateMany()</code> 方法更新集合中与过滤器匹配的所有文档。</p><p>在下面的示例中，我们通过向所有储蓄账户添加 100 的最低余额来更新许多文档：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testUpdateMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;checking&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bson</span> updates <span class="token operator">=</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">combine</span><span class="token punctuation">(</span><span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;minimum_balance&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UpdateResult</span> upResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> updates<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>upResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>AcknowledgedUpdateResult{matchedCount=2, modifiedCount=1, upsertedId=null}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="在-java-应用程序中删除文档" tabindex="-1"><a class="header-anchor" href="#在-java-应用程序中删除文档" aria-hidden="true">#</a> 在 Java 应用程序中删除文档</h3><p>查看下面的代码，它演示了如何用 Java 删除 MongoDB 中的文档。</p><h4 id="使用-deleteone" tabindex="-1"><a class="header-anchor" href="#使用-deleteone" aria-hidden="true">#</a> 使用 <code>deleteOne()</code></h4><p>为了从集合中删除单个文档，我们在一个 <code>MongoCollection</code> 对象上使用 <code>deleteOne()</code> 方法。该方法接受与我们要删除的文档匹配的查询筛选器。如果我们不指定过滤器，MongoDB 将匹配集合中的第一个文档。<code>deleteOne()</code> 方法只删除第一个匹配的文档。</p><p>在下面的例子中，我们删除了一个属于 John Doe 账户的文档：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testDeleteOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_holder&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;john doe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DeleteResult</span> delResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted a document:\\t&quot;</span> <span class="token operator">+</span> delResult<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Deleted a document:	1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="对查询对象使用-deletemany" tabindex="-1"><a class="header-anchor" href="#对查询对象使用-deletemany" aria-hidden="true">#</a> 对查询对象使用 <code>deleteMany()</code></h4><p>要在一次操作中从一个集合中删除多个文档，我们在一个 <code>MongoCollection</code> 对象上调用 <code>deleteMany()</code> 方法。为了指定要删除哪些文档，我们传递了一个查询过滤器，该过滤器与我们想要删除的文档相匹配。如果我们提供一个空文档，MongoDB 将匹配集合中的所有文档并删除它们。</p><p>为了演示批量删除的数据过程，我这里准备了一些测试的 JSON 数据，可以参考 <a href="./../scripts/accounts_documents_template.json">accounts_documents_template</a> 案例数据。</p><p>在下面的示例中，我们使用查询对象删除 <code>state</code> 为 &quot;TN&quot; 帐户。然后，我们打印被删除文档的总数。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testDeleteManyWithQueryObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts_doc_template&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Bson</span> query <span class="token operator">=</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;state&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DeleteResult</span> delResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted document‘s counts are:\\t&quot;</span> <span class="token operator">+</span> delResult<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Deleted document‘s counts are:	25
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用带有查询过滤器的-deletemany" tabindex="-1"><a class="header-anchor" href="#使用带有查询过滤器的-deletemany" aria-hidden="true">#</a> 使用带有查询过滤器的 <code>deleteMany()</code></h4><p>要在一次操作中从一个集合中删除多个文档，我们在一个 <code>MongoCollection</code> 对象上调用 <code>deleteMany()</code> 方法。为了指定要删除哪些文档，我们传递了一个查询过滤器，该过滤器与我们想要删除的文档相匹配。如果我们提供一个空文档，MongoDB 将匹配集合中的所有文档并删除它们。</p><p>在下面的示例中，我们使用查询对象删除 <code>state</code> 为 &quot;VA&quot; 帐户。然后，我们打印被删除文档的总数。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://root:root@localhost:27017&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testDeleteManyWithQueryFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>connectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MongoDatabase</span> database <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> database<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts_doc_template&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DeleteResult</span> delResult <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;state&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;VA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Deleted document‘s counts are:\\t&quot;</span> <span class="token operator">+</span> delResult<span class="token punctuation">.</span><span class="token function">getDeletedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Deleted document‘s counts are:	16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>说明</strong></p><p>关于文档批量删除，对查询对象使用 <code>deleteMany()</code> 和使用带有查询过滤器的 <code>deleteMany()</code> 本质上是一样的，只是叫法不一样而已。</p></blockquote><h3 id="在-java-应用中创建-mongodb-事务" tabindex="-1"><a class="header-anchor" href="#在-java-应用中创建-mongodb-事务" aria-hidden="true">#</a> 在 Java 应用中创建 MongoDB 事务</h3><p>查看下面的代码，它演示了如何用 Java 在 MongoDB 中创建多文档事务。</p><h4 id="创建事务" tabindex="-1"><a class="header-anchor" href="#创建事务" aria-hidden="true">#</a> 创建事务</h4><p>为了启动事务，我们使用会话的 <code>WithTransaction()</code> 方法。然后，我们定义要在事务内部执行的操作序列。以下是完成多文档事务的步骤，然后是代码：</p><ol><li>开始一个新的会话；</li><li>使用会话上的 <code>WithTransaction()</code> 方法开始事务；</li><li>创建将在事务中使用的变量；</li><li>获取将在事务中使用的用户帐户信息；</li><li>创建 <code>transfers</code> 文档；</li><li>更新用户帐号；</li><li>插入 <code>transfer</code> 文档；</li><li>提交事务。</li></ol><p>为了模拟转账的事务流程，请添加对应的测试数据，可以参考：<a href="./../scripts/accounts.json">accounts</a> 案例数据，下面的代码演示了这些步骤：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CrudTests</span> <span class="token punctuation">{</span>

    <span class="token comment">// 格式：[jdbc:]mongodb[+srv]://[{user:identifier}[:{password:param}]@]&lt;\\,,{host::localhost}?[:{port::27017}]&gt;[/{database}?[\\?&lt;&amp;,{:identifier}={:param}&gt;]]</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> txConnectString <span class="token operator">=</span> <span class="token string">&quot;mongodb://localhost:27020/retryWrites=false&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>txConnectString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">ClientSession</span> clientSession <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">startSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">final</span> <span class="token class-name">TransactionBody</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> transactionBody <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> bankingCollection <span class="token operator">=</span> mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;bank&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;accounts_test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 提取</span>
                <span class="token class-name">Bson</span> fromAccount <span class="token operator">=</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MDB310054629&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Bson</span> withdrawal <span class="token operator">=</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 存入</span>
                <span class="token class-name">Bson</span> toAccount <span class="token operator">=</span> <span class="token class-name">Filters</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;account_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MDB643731035&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Bson</span> deposit <span class="token operator">=</span> <span class="token class-name">Updates</span><span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;balance&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;This is from Account &quot;</span> <span class="token operator">+</span> fromAccount<span class="token punctuation">.</span><span class="token function">toBsonDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; withdrawn &quot;</span> <span class="token operator">+</span> withdrawal<span class="token punctuation">.</span><span class="token function">toBsonDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;This is to Account &quot;</span> <span class="token operator">+</span> toAccount<span class="token punctuation">.</span><span class="token function">toBsonDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; deposited &quot;</span> <span class="token operator">+</span> deposit<span class="token punctuation">.</span><span class="token function">toBsonDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                bankingCollection<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span>clientSession<span class="token punctuation">,</span> fromAccount<span class="token punctuation">,</span> withdrawal<span class="token punctuation">)</span><span class="token punctuation">;</span>
                bankingCollection<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span>clientSession<span class="token punctuation">,</span> toAccount<span class="token punctuation">,</span> deposit<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">return</span> <span class="token string">&quot;Transferred funds from John Doe to Mary Doe&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// 开启事务</span>
                clientSession<span class="token punctuation">.</span><span class="token function">withTransaction</span><span class="token punctuation">(</span>transactionBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                clientSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>This is from Account {&quot;account_id&quot;: &quot;MDB310054629&quot;} withdrawn {&quot;$inc&quot;: {&quot;balance&quot;: -200}}
This is to Account {&quot;account_id&quot;: &quot;MDB643731035&quot;} deposited {&quot;$inc&quot;: {&quot;balance&quot;: 200}}
com.mongodb.MongoClientException: This MongoDB deployment does not support retryable writes. Please add retryWrites=false to your connection string.
...

Caused by: com.mongodb.MongoCommandException: Command failed with error 20 (IllegalOperation): &#39;Transaction numbers are only allowed on a replica set member or mongos&#39; on server localhost:27017. The full response is {&quot;ok&quot;: 0.0, &quot;errmsg&quot;: &quot;Transaction numbers are only allowed on a replica set member or mongos&quot;, &quot;code&quot;: 20, &quot;codeName&quot;: &quot;IllegalOperation&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从输出结果看出，事务发生了异常，经过搜索查询得出 “单节点 mongo 是不支持事务的，所以需要配置 mongo 副本集（Replica Set）”。有如下 2 种解决方案：</p><ol><li>配置集群分片（Sharding）模式，不要使用单节点；</li><li>为单节点配置副本集（Replica Set）；</li></ol>`,92),h=t(`<p>如果完成集群搭建后输出结果如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>This is from Account {&quot;account_id&quot;: &quot;MDB310054629&quot;} withdrawn {&quot;$inc&quot;: {&quot;balance&quot;: -200}}
This is to Account {&quot;account_id&quot;: &quot;MDB643731035&quot;} deposited {&quot;$inc&quot;: {&quot;balance&quot;: 200}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据输出的结果可以看出，对应的数据有执行成功！</p><blockquote><p><strong>注意</strong></p><p><code>Updates.inc</code> 原子性新增方法使用的字段类型不能为 <code>String</code> 类型，否则提示错误！</p></blockquote>`,4);function f(y,w){const o=e("ExternalLinkIcon"),p=e("RouterLink");return l(),i("div",null,[k,r,m,s("p",null,[n("官网地址："),s("a",v,[n("https://www.mongodb.com/"),a(o)])]),b,s("p",null,[n("在 MongoDB 中用于存储文档和进行远程过程调用的序列化格式。BSON 规范位于 "),s("a",g,[n("bsonspec.org"),a(o)]),n("。")]),q,s("p",null,[n("具体参考文档："),a(p,{to:"/guide/develop/data-storage/mongodb%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97.html"},{default:u(()=>[n("mongodb环境搭建指南")]),_:1}),n("中的『基于 Docker 搭建 MongoDB 集群』内容。")]),h])}const M=c(d,[["render",f],["__file","mongodb-study-guide.html.vue"]]);export{M as default};
