const n=JSON.parse('{"key":"v-288452ff","path":"/guide/develop/deploy-operation/nginx-env-build-guide.html","title":"Nginx 环境搭建指南","lang":"zh-CN","frontmatter":{"title":"Nginx 环境搭建指南","icon":"shell","order":3,"sticky":true,"star":true,"date":"2022-07-23T00:00:00.000Z","category":["deploy-operation"],"tag":["环境搭建","nginx","Linux"],"description":"Linux 下环境搭建命令总结 # 安装所需插件 yum -y install gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel open openssl-devel # 将上传的 nginx 压缩包解压 tar -zxvf nginx-1.18.0.tar.gz # 切换到解压目录，执行如下2个命令 ./configure make &amp;&amp; make install # 启动 nginx，进入 /usr/local/nginx/sbin ./nginx # 查看nginx启动的进程 ps -ef | grep nginx # 访问nginx，如果80端口没开放，请自行开放或者禁用防火墙 ip:80 # 配置系统环境变量，执行如下 3 条命令 PATH=$PATH:/usr/local/nginx/sbin export source /etc/profile # 测试任意路径下 nginx 全局命令是否生效，验证 nginx 语法是否正确，显示 OK 表示成功 nginx -t # 添加电脑开机自启动 # 添加 nginx 服务 cd /usr/lib/systemd/system/ vi nginx.service # nginx.service 追加如下内容 [Unit] Description=nginx After=network.target [Service] Type=forking ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=true [Install] WantedBy=multi-user.target # 启动 nginx 服务 # 此时需要先用 ps 查看 nginx 进程是否已存在，若已存在，则服务会启动失败。启动服务前必须先将 nginx 进程 kill 掉)： # 设置开机自启动 systemctl enable nginx # 启动nginx服务 systemctl start nginx # 停止nginx服务 systemctl stop nginx # 重新加载配置 systemctl reload nginx # 查看服务状态 systemctl status nginx","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/develop/deploy-operation/nginx-env-build-guide.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"Nginx 环境搭建指南"}],["meta",{"property":"og:description","content":"Linux 下环境搭建命令总结 # 安装所需插件 yum -y install gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel open openssl-devel # 将上传的 nginx 压缩包解压 tar -zxvf nginx-1.18.0.tar.gz # 切换到解压目录，执行如下2个命令 ./configure make &amp;&amp; make install # 启动 nginx，进入 /usr/local/nginx/sbin ./nginx # 查看nginx启动的进程 ps -ef | grep nginx # 访问nginx，如果80端口没开放，请自行开放或者禁用防火墙 ip:80 # 配置系统环境变量，执行如下 3 条命令 PATH=$PATH:/usr/local/nginx/sbin export source /etc/profile # 测试任意路径下 nginx 全局命令是否生效，验证 nginx 语法是否正确，显示 OK 表示成功 nginx -t # 添加电脑开机自启动 # 添加 nginx 服务 cd /usr/lib/systemd/system/ vi nginx.service # nginx.service 追加如下内容 [Unit] Description=nginx After=network.target [Service] Type=forking ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=true [Install] WantedBy=multi-user.target # 启动 nginx 服务 # 此时需要先用 ps 查看 nginx 进程是否已存在，若已存在，则服务会启动失败。启动服务前必须先将 nginx 进程 kill 掉)： # 设置开机自启动 systemctl enable nginx # 启动nginx服务 systemctl start nginx # 停止nginx服务 systemctl stop nginx # 重新加载配置 systemctl reload nginx # 查看服务状态 systemctl status nginx"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-06T15:43:51.000Z"}],["meta",{"property":"article:tag","content":"环境搭建"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2022-07-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-06T15:43:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx 环境搭建指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-06T15:43:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Linux 下环境搭建命令总结","slug":"linux-下环境搭建命令总结","link":"#linux-下环境搭建命令总结","children":[]},{"level":2,"title":"docker 下环境搭建命令总结","slug":"docker-下环境搭建命令总结","link":"#docker-下环境搭建命令总结","children":[]}],"git":{"createdTime":1688658231000,"updatedTime":1688658231000,"contributors":[{"name":"olinonee","email":"olinone666@gmail.com","commits":1}]},"readingTime":{"minutes":2.17,"words":652},"filePathRelative":"guide/develop/deploy-operation/nginx-env-build-guide.md","localizedDate":"2022年7月23日","excerpt":"<h2> Linux 下环境搭建命令总结</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 安装所需插件</span>\\nyum <span class=\\"token parameter variable\\">-y</span> <span class=\\"token function\\">install</span> gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel <span class=\\"token function\\">open</span> openssl-devel\\n\\n<span class=\\"token comment\\"># 将上传的 nginx 压缩包解压</span>\\n<span class=\\"token function\\">tar</span> <span class=\\"token parameter variable\\">-zxvf</span> nginx-1.18.0.tar.gz\\n\\n<span class=\\"token comment\\"># 切换到解压目录，执行如下2个命令</span>\\n./configure\\n \\n<span class=\\"token function\\">make</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">make</span> <span class=\\"token function\\">install</span>\\n\\n<span class=\\"token comment\\"># 启动 nginx，进入 /usr/local/nginx/sbin</span>\\n./nginx\\n\\n<span class=\\"token comment\\"># 查看nginx启动的进程</span>\\n<span class=\\"token function\\">ps</span> <span class=\\"token parameter variable\\">-ef</span> <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> nginx\\n\\n<span class=\\"token comment\\"># 访问nginx，如果80端口没开放，请自行开放或者禁用防火墙</span>\\nip:80\\n\\n<span class=\\"token comment\\"># 配置系统环境变量，执行如下 3 条命令</span>\\n<span class=\\"token assign-left variable\\"><span class=\\"token environment constant\\">PATH</span></span><span class=\\"token operator\\">=</span><span class=\\"token environment constant\\">$PATH</span>:/usr/local/nginx/sbin\\n<span class=\\"token builtin class-name\\">export</span>\\n<span class=\\"token builtin class-name\\">source</span> /etc/profile\\n\\n<span class=\\"token comment\\"># 测试任意路径下 nginx 全局命令是否生效，验证 nginx 语法是否正确，显示 OK 表示成功</span>\\nnginx <span class=\\"token parameter variable\\">-t</span>\\n\\n<span class=\\"token comment\\"># 添加电脑开机自启动</span>\\n<span class=\\"token comment\\"># 添加 nginx 服务</span>\\n<span class=\\"token builtin class-name\\">cd</span> /usr/lib/systemd/system/\\n<span class=\\"token function\\">vi</span> nginx.service\\n\\n<span class=\\"token comment\\"># nginx.service 追加如下内容</span>\\n<span class=\\"token punctuation\\">[</span>Unit<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token assign-left variable\\">Description</span><span class=\\"token operator\\">=</span>nginx\\n<span class=\\"token assign-left variable\\">After</span><span class=\\"token operator\\">=</span>network.target\\n  \\n<span class=\\"token punctuation\\">[</span>Service<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token assign-left variable\\">Type</span><span class=\\"token operator\\">=</span>forking\\n<span class=\\"token assign-left variable\\">ExecStart</span><span class=\\"token operator\\">=</span>/usr/local/nginx/sbin/nginx <span class=\\"token parameter variable\\">-c</span> /usr/local/nginx/conf/nginx.conf\\n<span class=\\"token assign-left variable\\">ExecReload</span><span class=\\"token operator\\">=</span>/usr/local/nginx/sbin/nginx <span class=\\"token parameter variable\\">-s</span> reload\\n<span class=\\"token assign-left variable\\">ExecStop</span><span class=\\"token operator\\">=</span>/usr/local/nginx/sbin/nginx <span class=\\"token parameter variable\\">-s</span> quit\\n<span class=\\"token assign-left variable\\">PrivateTmp</span><span class=\\"token operator\\">=</span>true\\n  \\n<span class=\\"token punctuation\\">[</span>Install<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token assign-left variable\\">WantedBy</span><span class=\\"token operator\\">=</span>multi-user.target\\n\\n<span class=\\"token comment\\"># 启动 nginx 服务</span>\\n<span class=\\"token comment\\"># 此时需要先用 ps 查看 nginx 进程是否已存在，若已存在，则服务会启动失败。启动服务前必须先将 nginx 进程 kill 掉)：</span>\\n<span class=\\"token comment\\"># 设置开机自启动</span>\\nsystemctl <span class=\\"token builtin class-name\\">enable</span> nginx\\n\\n<span class=\\"token comment\\"># 启动nginx服务</span>\\nsystemctl start nginx\\n\\n<span class=\\"token comment\\"># 停止nginx服务</span>\\nsystemctl stop nginx\\n\\n<span class=\\"token comment\\"># 重新加载配置</span>\\nsystemctl reload nginx\\n\\n<span class=\\"token comment\\"># 查看服务状态</span>\\nsystemctl status nginx\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
