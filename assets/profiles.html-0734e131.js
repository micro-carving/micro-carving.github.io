const n=JSON.parse('{"key":"v-326a085e","path":"/guide/framework/spring-all/profiles.html","title":"配置文件","lang":"zh-CN","frontmatter":{"title":"配置文件","icon":"leaf","order":4,"sticky":true,"star":true,"date":"2023-02-16T00:00:00.000Z","category":["spring-all"],"tag":["编程","SpringBoot 框架"],"description":"配置文件（Profiles） Spring Profiles 提供了一种方法来隔离应用程序配置的各个部分，并使其仅在某些环境中可用。任何 @Component，@Configuration 或 @ConfigurationProperties 都可以用 @Profile 标记来限制加载，如下例所示: import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.Profile; @Configuration(proxyBeanMethods = false) @Profile(\\"production\\") public class ProductionConfiguration { // ... }","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/framework/spring-all/profiles.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"配置文件"}],["meta",{"property":"og:description","content":"配置文件（Profiles） Spring Profiles 提供了一种方法来隔离应用程序配置的各个部分，并使其仅在某些环境中可用。任何 @Component，@Configuration 或 @ConfigurationProperties 都可以用 @Profile 标记来限制加载，如下例所示: import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.Profile; @Configuration(proxyBeanMethods = false) @Profile(\\"production\\") public class ProductionConfiguration { // ... }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://olinonee.com/./"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"配置文件"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"SpringBoot 框架"}],["meta",{"property":"article:published_time","content":"2023-02-16T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配置文件\\",\\"image\\":[\\"https://olinonee.com/./\\"],\\"datePublished\\":\\"2023-02-16T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"配置文件（Profiles）","slug":"配置文件-profiles","link":"#配置文件-profiles","children":[{"level":3,"title":"1.添加 active 配置文件","slug":"_1-添加-active-配置文件","link":"#_1-添加-active-配置文件","children":[]},{"level":3,"title":"2.配置文件组","slug":"_2-配置文件组","link":"#_2-配置文件组","children":[]},{"level":3,"title":"3.编程设置配置文件","slug":"_3-编程设置配置文件","link":"#_3-编程设置配置文件","children":[]},{"level":3,"title":"4.特定于配置文件的配置文件","slug":"_4-特定于配置文件的配置文件","link":"#_4-特定于配置文件的配置文件","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.34,"words":1003},"filePathRelative":"guide/framework/spring-all/profiles.md","localizedDate":"2023年2月16日","excerpt":"<h2> 配置文件（Profiles）</h2>\\n<p>Spring Profiles 提供了一种方法来隔离应用程序配置的各个部分，并使其仅在某些环境中可用。任何 <code>@Component</code>，<code>@Configuration</code> 或 <code>@ConfigurationProperties</code>\\n都可以用 <code>@Profile</code> 标记来限制加载，如下例所示:</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>context<span class=\\"token punctuation\\">.</span>annotation<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Configuration</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>context<span class=\\"token punctuation\\">.</span>annotation<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Profile</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token annotation punctuation\\">@Configuration</span><span class=\\"token punctuation\\">(</span>proxyBeanMethods <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Profile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"production\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ProductionConfiguration</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// ...</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
