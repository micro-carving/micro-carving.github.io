import{_ as o,W as i,X as p,Y as s,Z as n,$ as t,a1 as a,C as c}from"./framework-158a71b3.js";const l="/assets/hard-coding-set-profile-7ea34d8d.png",r={},d=a(`<h2 id="配置文件-profiles" tabindex="-1"><a class="header-anchor" href="#配置文件-profiles" aria-hidden="true">#</a> 配置文件（Profiles）</h2><p>Spring Profiles 提供了一种方法来隔离应用程序配置的各个部分，并使其仅在某些环境中可用。任何 <code>@Component</code>，<code>@Configuration</code> 或 <code>@ConfigurationProperties</code> 都可以用 <code>@Profile</code> 标记来限制加载，如下例所示:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Profile</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">&quot;production&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductionConfiguration</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>：</p><p>如果 <code>@ConfigurationProperties</code> bean 是通过 <code>@EnableConfigurationProperties</code> 而不是自动扫描注册的，则需要在具有 <code>@EnableConfigurationProperty</code> 注释的 <code>@Configuration</code> 类上指定 <code>@Profile</code> 注解。在扫描 <code>@ConfigurationProperties</code> 的情况下，可以在 <code>@ConfigurationProperties</code> 类本身上指定 <code>@Profile</code>。</p><p>可以使用 <code>spring.profiles.active Environment</code> 属性来指定哪些配置文件处于活动状态。可以用本章前面描述的任何方式指定属性。例如，可以将其包含在 <code>application.properties</code> 中，如下例所示：</p><p>Properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">dev,hsqldb</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token string">&quot;dev,hsqldb&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以在命令行上使用以下开关指定它：<code>--spring.profiles.active=dev,hsqldb</code>。</p><p>如果没有激活配置文件，则启用默认配置文件。默认配置文件的名称是 <code>default</code> 的，可以使用 <code>spring.profile.default Environment</code> 属性对其进行调整，如下例所示：</p><p>Properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.profiles.default</span><span class="token punctuation">=</span><span class="token value attr-value">none</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">default</span><span class="token punctuation">:</span> <span class="token string">&quot;none&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>spring.profiles.active</code> 和 <code>spring.profiles.default</code> 只能在非配置文件特定的文档中使用。这意味着它们不能包含在 <code>spring.config.activate.on-profile</code> 激活的特定于配置文件的文件或文档中。</p><p>例如，第二个文档配置无效：</p><p>Properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># this document is valid</span>
<span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">prod</span>
<span class="token comment">#---</span>
<span class="token comment"># this document is invalid</span>
<span class="token key attr-name">spring.config.activate.on-profile</span><span class="token punctuation">=</span><span class="token value attr-value">prod</span>
<span class="token key attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token value attr-value">metrics</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># this document is valid</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token string">&quot;prod&quot;</span>
<span class="token punctuation">---</span>
<span class="token comment"># this document is invalid</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">config</span><span class="token punctuation">:</span>
    <span class="token key atrule">activate</span><span class="token punctuation">:</span>
      <span class="token key atrule">on-profile</span><span class="token punctuation">:</span> <span class="token string">&quot;prod&quot;</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token string">&quot;metrics&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-添加-active-配置文件" tabindex="-1"><a class="header-anchor" href="#_1-添加-active-配置文件" aria-hidden="true">#</a> 1.添加 active 配置文件</h3><p><code>spring.profiles.active</code> 属性遵循与其他属性相同的排序规则：<code>PropertySource</code> 优先级最高者获胜。这意味着你可以在 <code>application.properties</code> 中指定活动配置文件，然后使用命令行开关<strong>替换</strong>它们。</p>`,24),u=s("code",null,"spring.profiles.include",-1),v=s("code",null,"spring.profiles.active",-1),k=s("code",null,"SpringApplication",-1),m={href:"https://docs.spring.io/spring-boot/docs/2.7.8/api/org/springframework/boot/SpringApplication.html",target:"_blank",rel:"noopener noreferrer"},g=s("code",null,"setAdditionalProfiles()",-1),b=a(`<p>例如，当运行具有以下属性的应用程序时，即使使用 <code>--spring.profiles.active</code> 开关运行，也会激活通用和本地配置文件：</p><p>Properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.profiles.include[0]</span><span class="token punctuation">=</span><span class="token value attr-value">common</span>
<span class="token key attr-name">spring.profiles.include[1]</span><span class="token punctuation">=</span><span class="token value attr-value">local</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">include</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;common&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;local&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>警告</strong>：</p><p>与 <code>spring.profile.active</code> 类似，<code>spring.profile.include</code> 只能用于非配置文件特定的文档。这意味着它不能包含在 <code>spring.config.activate.on-profile</code> 激活的特定于配置文件的文件或文档中。</p><p>如果给定的配置文件处于活动状态，则下一节中介绍的配置文件组也可用于添加活动配置文件。</p><h3 id="_2-配置文件组" tabindex="-1"><a class="header-anchor" href="#_2-配置文件组" aria-hidden="true">#</a> 2.配置文件组</h3><p>有时，你在应用程序中定义和使用的配置文件过于细粒度，使用起来很麻烦。例如，你可以使用 <code>proddb</code> 和 <code>prodmq</code> 配置文件来独立启用数据库和消息传递功能。</p><p>为了帮助实现这一点，Spring Boot 允许你定义配置文件组。配置文件组允许你为相关的配置文件组定义逻辑名称。</p><p>例如，我们可以创建一个由 <code>proddb</code> 和 <code>prodmq</code> 配置文件组成的生产组。</p><p>Properties</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.profiles.group.production[0]</span><span class="token punctuation">=</span><span class="token value attr-value">proddb</span>
<span class="token key attr-name">spring.profiles.group.production[1]</span><span class="token punctuation">=</span><span class="token value attr-value">prodmq</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Yaml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">group</span><span class="token punctuation">:</span>
      <span class="token key atrule">production</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token string">&quot;proddb&quot;</span>
        <span class="token punctuation">-</span> <span class="token string">&quot;prodmq&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的应用程序现在可以使用 <code>--spring.profiles.active=production</code> 启动 <code>production</code>、<code>proddb</code> 和 <code>prodmq</code> 配置文件。</p><h3 id="_3-编程设置配置文件" tabindex="-1"><a class="header-anchor" href="#_3-编程设置配置文件" aria-hidden="true">#</a> 3.编程设置配置文件</h3><p>你可以通过在应用程序运行之前调用 <code>SpringApplication.setAdditionalProfiles(…)</code> 以编程方式设置活动配置文件。还可以使用 Spring 的 <code>ConfigurationEnvironment</code> 接口激活配置文件。如下图所示：</p><figure><img src="`+l+'" alt="编程设置配置文件" tabindex="0" loading="lazy"><figcaption>编程设置配置文件</figcaption></figure><h3 id="_4-特定于配置文件的配置文件" tabindex="-1"><a class="header-anchor" href="#_4-特定于配置文件的配置文件" aria-hidden="true">#</a> 4.特定于配置文件的配置文件</h3><p><code>application.properties</code>（或 <code>application.yml</code> ）和通过 <code>@ConfigurationProperties</code> 引用的文件的特定于配置文件的变量都被视为文件并被加载。</p>',22);function f(h,y){const e=c("ExternalLinkIcon");return i(),p("div",null,[d,s("p",null,[n("有时，将属性添加到活动配置文件而不是替换它们是很有用的。"),u,n(" 属性可用于在 "),v,n(" 属性激活的配置文件之上添加活动配置文件。"),k,n(" 入口点还具有用于设置其他概要文件的 Java API。请参阅 "),s("a",m,[n("SpringApplication"),t(e)]),n(" 中的 "),g,n(" 方法。")]),b])}const q=o(r,[["render",f],["__file","profiles.html.vue"]]);export{q as default};
