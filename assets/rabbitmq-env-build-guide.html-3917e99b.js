const a=JSON.parse('{"key":"v-704ad47b","path":"/guide/develop/deploy-operation/rabbitmq-env-build-guide.html","title":"RabbitMQ 环境搭建指南","lang":"zh-CN","frontmatter":{"title":"RabbitMQ 环境搭建指南","icon":"shell","order":5,"sticky":true,"star":true,"date":"2022-06-11T00:00:00.000Z","category":["deploy-operation"],"tag":["环境搭建","RabbitMQ","docker","Linux"],"description":"docker 下环境搭建命令总结 # 1.查询可用镜像（一般选择官方或者使用最多的镜像） docker search rabbitmq # 2.拉取镜像（默认拉取最新的，如果要选择指定版本的话，可以去 hub.docker.com 官网查找） docker pull rabbitmq # 3.查看拉取的镜像，看看是否拉取成功 docker images # 4.启动rabbitmq容器，默认用户访问账密为：guest / guest，这里指定账密为：root / root docker run -d --hostname my-rabbit --restart=always --name rabbitmq -e RABBITMQ_DEFAULT_USER=[访问账号] -e RABBITMQ_DEFAULT_PASS=[访问密码] -p [管理后台访问的外网端口]:15672 -p [程序访问的外网端口]:5672 rabbitmq # 示例： docker run -d --hostname my-rabbit --restart=always --name rabbitmq -e RABBITMQ_DEFAULT_USER=root -e RABBITMQ_DEFAULT_PASS=root -p 15672:15672 -p 5672:5672 rabbitmq # 5.进入容器 docker exec -it [容器id或者容器名称] /bin/bash 示例：docker exec -it rabbitmq /bin/bash # 6.修改配置，启用 rabbit 管理后台，这里必须执行此命令才访问管理后台，并执行 exit 命令退出容器 rabbitmq-plugins enable rabbitmq_management # 7.访问 rabbit 管理后台页面，将下面地址复制到浏览器进行访问，访问账密为设置的登录账密，这里为：root / root http://[宿主机ip]:[外网映射端口] 示例：http://localhost:15672","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/develop/deploy-operation/rabbitmq-env-build-guide.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"RabbitMQ 环境搭建指南"}],["meta",{"property":"og:description","content":"docker 下环境搭建命令总结 # 1.查询可用镜像（一般选择官方或者使用最多的镜像） docker search rabbitmq # 2.拉取镜像（默认拉取最新的，如果要选择指定版本的话，可以去 hub.docker.com 官网查找） docker pull rabbitmq # 3.查看拉取的镜像，看看是否拉取成功 docker images # 4.启动rabbitmq容器，默认用户访问账密为：guest / guest，这里指定账密为：root / root docker run -d --hostname my-rabbit --restart=always --name rabbitmq -e RABBITMQ_DEFAULT_USER=[访问账号] -e RABBITMQ_DEFAULT_PASS=[访问密码] -p [管理后台访问的外网端口]:15672 -p [程序访问的外网端口]:5672 rabbitmq # 示例： docker run -d --hostname my-rabbit --restart=always --name rabbitmq -e RABBITMQ_DEFAULT_USER=root -e RABBITMQ_DEFAULT_PASS=root -p 15672:15672 -p 5672:5672 rabbitmq # 5.进入容器 docker exec -it [容器id或者容器名称] /bin/bash 示例：docker exec -it rabbitmq /bin/bash # 6.修改配置，启用 rabbit 管理后台，这里必须执行此命令才访问管理后台，并执行 exit 命令退出容器 rabbitmq-plugins enable rabbitmq_management # 7.访问 rabbit 管理后台页面，将下面地址复制到浏览器进行访问，访问账密为设置的登录账密，这里为：root / root http://[宿主机ip]:[外网映射端口] 示例：http://localhost:15672"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-07T02:38:18.000Z"}],["meta",{"property":"article:tag","content":"环境搭建"}],["meta",{"property":"article:tag","content":"RabbitMQ"}],["meta",{"property":"article:tag","content":"docker"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2022-06-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-07T02:38:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ 环境搭建指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-07T02:38:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"docker 下环境搭建命令总结","slug":"docker-下环境搭建命令总结","link":"#docker-下环境搭建命令总结","children":[]}],"git":{"createdTime":1688658231000,"updatedTime":1688697498000,"contributors":[{"name":"olinonee","email":"olinone666@gmail.com","commits":2}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"guide/develop/deploy-operation/rabbitmq-env-build-guide.md","localizedDate":"2022年6月11日","excerpt":"<h2> docker 下环境搭建命令总结</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 1.查询可用镜像（一般选择官方或者使用最多的镜像）</span>\\n<span class=\\"token function\\">docker</span> search rabbitmq\\n\\n<span class=\\"token comment\\"># 2.拉取镜像（默认拉取最新的，如果要选择指定版本的话，可以去 hub.docker.com 官网查找）</span>\\n<span class=\\"token function\\">docker</span> pull rabbitmq\\n\\n<span class=\\"token comment\\"># 3.查看拉取的镜像，看看是否拉取成功</span>\\n<span class=\\"token function\\">docker</span> images\\n\\n<span class=\\"token comment\\"># 4.启动rabbitmq容器，默认用户访问账密为：guest / guest，这里指定账密为：root / root</span>\\n<span class=\\"token function\\">docker</span> run <span class=\\"token parameter variable\\">-d</span> <span class=\\"token parameter variable\\">--hostname</span> my-rabbit <span class=\\"token parameter variable\\">--restart</span><span class=\\"token operator\\">=</span>always <span class=\\"token parameter variable\\">--name</span> rabbitmq <span class=\\"token parameter variable\\">-e</span> <span class=\\"token assign-left variable\\">RABBITMQ_DEFAULT_USER</span><span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span>访问账号<span class=\\"token punctuation\\">]</span> <span class=\\"token parameter variable\\">-e</span> <span class=\\"token assign-left variable\\">RABBITMQ_DEFAULT_PASS</span><span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">[</span>访问密码<span class=\\"token punctuation\\">]</span>  <span class=\\"token parameter variable\\">-p</span> <span class=\\"token punctuation\\">[</span>管理后台访问的外网端口<span class=\\"token punctuation\\">]</span>:15672 <span class=\\"token parameter variable\\">-p</span> <span class=\\"token punctuation\\">[</span>程序访问的外网端口<span class=\\"token punctuation\\">]</span>:5672 rabbitmq\\n\\n<span class=\\"token comment\\"># 示例：</span>\\n<span class=\\"token function\\">docker</span> run <span class=\\"token parameter variable\\">-d</span> <span class=\\"token parameter variable\\">--hostname</span> my-rabbit <span class=\\"token parameter variable\\">--restart</span><span class=\\"token operator\\">=</span>always <span class=\\"token parameter variable\\">--name</span> rabbitmq <span class=\\"token parameter variable\\">-e</span> <span class=\\"token assign-left variable\\">RABBITMQ_DEFAULT_USER</span><span class=\\"token operator\\">=</span>root <span class=\\"token parameter variable\\">-e</span> <span class=\\"token assign-left variable\\">RABBITMQ_DEFAULT_PASS</span><span class=\\"token operator\\">=</span>root  <span class=\\"token parameter variable\\">-p</span> <span class=\\"token number\\">15672</span>:15672 <span class=\\"token parameter variable\\">-p</span> <span class=\\"token number\\">5672</span>:5672 rabbitmq\\n\\n<span class=\\"token comment\\"># 5.进入容器</span>\\n<span class=\\"token function\\">docker</span> <span class=\\"token builtin class-name\\">exec</span> <span class=\\"token parameter variable\\">-it</span> <span class=\\"token punctuation\\">[</span>容器id或者容器名称<span class=\\"token punctuation\\">]</span> /bin/bash\\n示例：docker <span class=\\"token builtin class-name\\">exec</span> <span class=\\"token parameter variable\\">-it</span> rabbitmq /bin/bash\\n\\n<span class=\\"token comment\\"># 6.修改配置，启用 rabbit 管理后台，这里必须执行此命令才访问管理后台，并执行 exit 命令退出容器</span>\\nrabbitmq-plugins <span class=\\"token builtin class-name\\">enable</span> rabbitmq_management\\n\\n<span class=\\"token comment\\"># 7.访问 rabbit 管理后台页面，将下面地址复制到浏览器进行访问，访问账密为设置的登录账密，这里为：root / root</span>\\nhttp://<span class=\\"token punctuation\\">[</span>宿主机ip<span class=\\"token punctuation\\">]</span>:<span class=\\"token punctuation\\">[</span>外网映射端口<span class=\\"token punctuation\\">]</span>\\n示例：http://localhost:15672\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{a as data};
