const n=JSON.parse('{"key":"v-54cdefb8","path":"/guide/framework/spring-all/spring-application.html","title":"SpringApplication","lang":"zh-CN","frontmatter":{"title":"SpringApplication","icon":"leaf","order":2,"sticky":true,"date":"2023-02-16T00:00:00.000Z","category":["spring-all"],"tag":["编程","SpringBoot 框架"],"description":"SpringApplication SpringApplication 类提供了一种方便的方法来引导从 main() 方法启动的 Spring 应用程序。在很多情况下，你可以委托给静态的 SpringApplication.run 方法，如下例所示: import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; @SpringBootApplication public class MyApplication { public static void main(String[] args) { SpringApplication.run(MyApplication.class, args); } }","head":[["meta",{"property":"og:url","content":"https://olinonee.com/./guide/framework/spring-all/spring-application.html"}],["meta",{"property":"og:site_name","content":"字节微雕"}],["meta",{"property":"og:title","content":"SpringApplication"}],["meta",{"property":"og:description","content":"SpringApplication SpringApplication 类提供了一种方便的方法来引导从 main() 方法启动的 Spring 应用程序。在很多情况下，你可以委托给静态的 SpringApplication.run 方法，如下例所示: import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; @SpringBootApplication public class MyApplication { public static void main(String[] args) { SpringApplication.run(MyApplication.class, args); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://olinonee.com/./"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T12:34:04.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"SpringApplication"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"SpringBoot 框架"}],["meta",{"property":"article:published_time","content":"2023-02-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-05T12:34:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringApplication\\",\\"image\\":[\\"https://olinonee.com/./\\"],\\"datePublished\\":\\"2023-02-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-05T12:34:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"SpringApplication","slug":"springapplication","link":"#springapplication","children":[{"level":3,"title":"1.启动失败","slug":"_1-启动失败","link":"#_1-启动失败","children":[]},{"level":3,"title":"2.延迟初始化","slug":"_2-延迟初始化","link":"#_2-延迟初始化","children":[]},{"level":3,"title":"3.自定义 Banner","slug":"_3-自定义-banner","link":"#_3-自定义-banner","children":[]},{"level":3,"title":"4.自定义 SpringApplication 程序","slug":"_4-自定义-springapplication-程序","link":"#_4-自定义-springapplication-程序","children":[]},{"level":3,"title":"5.优雅的构建器 API","slug":"_5-优雅的构建器-api","link":"#_5-优雅的构建器-api","children":[]},{"level":3,"title":"6.应用程序可用性","slug":"_6-应用程序可用性","link":"#_6-应用程序可用性","children":[]},{"level":3,"title":"7.应用程序事件和监听器","slug":"_7-应用程序事件和监听器","link":"#_7-应用程序事件和监听器","children":[]},{"level":3,"title":"8. Web 环境","slug":"_8-web-环境","link":"#_8-web-环境","children":[]},{"level":3,"title":"9.访问应用程序参数","slug":"_9-访问应用程序参数","link":"#_9-访问应用程序参数","children":[]},{"level":3,"title":"10.使用 ApplicationRunner 或者 CommandLineRunner","slug":"_10-使用-applicationrunner-或者-commandlinerunner","link":"#_10-使用-applicationrunner-或者-commandlinerunner","children":[]},{"level":3,"title":"11.应用程序退出","slug":"_11-应用程序退出","link":"#_11-应用程序退出","children":[]},{"level":3,"title":"12.管理功能","slug":"_12-管理功能","link":"#_12-管理功能","children":[]},{"level":3,"title":"13.应用程序启动跟踪","slug":"_13-应用程序启动跟踪","link":"#_13-应用程序启动跟踪","children":[]}]}],"git":{"createdTime":1688560444000,"updatedTime":1688560444000,"contributors":[{"name":"olinonee","email":"olinone666@gmail.com","commits":1}]},"readingTime":{"minutes":20.76,"words":6229},"filePathRelative":"guide/framework/spring-all/spring-application.md","localizedDate":"2023年2月16日","excerpt":"<h2> SpringApplication</h2>\\n<p><code>SpringApplication</code> 类提供了一种方便的方法来引导从 <code>main()</code> 方法启动的 Spring 应用程序。在很多情况下，你可以委托给静态的 <code>SpringApplication.run</code> 方法，如下例所示:</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">SpringApplication</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token punctuation\\">.</span>autoconfigure<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">SpringBootApplication</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token annotation punctuation\\">@SpringBootApplication</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MyApplication</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">SpringApplication</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">MyApplication</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
